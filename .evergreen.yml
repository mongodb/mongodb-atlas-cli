stepback: true
command_type: system
pre_error_fails_task: true

# Files that match an ignore-list pattern will not trigger a build, if they're the only modified
# files in the patch.
ignore:
  - "*.md"
  - "*.txt"

variables:
  - &go_bin
      "/opt/golang/go1.14/bin"
  - &go_options
    GO111MODULE: "on"
    GOROOT: "/opt/golang/go1.14"
functions:
  "clone":
    - command: git.get_project
      type: setup
      params:
        directory: mongocli
  "build":
    - command: subprocess.exec
      type: test
      params:
        add_to_path:
          - *go_bin
        working_dir: mongocli
        env:
          WORKDIR: ${workdir}
          <<: *go_options
        command: make build
  "gen-notices":
    - command: shell.exec
      type: setup
      params:
        working_dir: mongocli
        script: |
          set -ex
          export GOROOT="/opt/golang/go1.14"
          mkdir go-licenses
          export GOPATH=${workdir}/go-licenses
          export PATH="$GOPATH/bin:$GOROOT/bin:$PATH"

          go get -u github.com/google/go-licenses
          go-licenses save "github.com/mongodb/mongocli" --save_path=third_party_notices
  "fetch goreleaser":
    - command: shell.exec
      type: setup
      params:
        working_dir: mongocli
        script: |
          set -ex
          curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
  "package":
    - command: subprocess.exec
      type: setup
      params:
        add_to_path:
          - *go_bin
          - ./bin
        working_dir: mongocli
        env:
          <<: *go_options
        command: make package
tasks:
  - name: compile
    commands:
      - func: "clone"
      - func: "build"
  - name: package
    depends_on:
      - name: compile
    commands:
      - func: "clone"
      - func: "gen-notices"
      - func: "fetch goreleaser"
      - func: "package"
buildvariants:
  - name: redhat
    display_name: RHEL7 Test
    run_on:
      - rhel70-small
    tasks:
      - name: compile
      - name: package
