name: Issue and PRs Labeler
on:
  issues:
    types: [opened, edited]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
jobs:
  labeler:
    name: Add Label to PRs and Issues
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Needed by labeler
      issues: write # Needed by labeler
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Add Labels
        uses: srvaroa/labeler@0a20eccb8c94a1ee0bed5f16859aece1c45c3e55
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          config_path: .github/labeler.yaml
          use_local_config: true
  slack-notification-doc-team:
    needs: labeler
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Needed by sticky-pull-request-comment
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}
      - name: Get PR labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          labels=$(gh api repos/"$OWNER"/"$REPO_NAME"/pulls/"$PULL_REQUEST_NUMBER" --jq '.labels.[].name')
          echo "Labels: $labels"
          if echo "$labels" | grep -q "need-doc-review"; then
            echo "review_needed=true" >> "$GITHUB_ENV"
          fi
      - uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405
        id: append_comment
        if: env.review_needed == 'true'
        with:
          header: pr-title-slack-doc
          message: "APIx Bot :bowtie:: a message has been sent to Docs Slack channel :rocket:."
      - uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a
        if: env.review_needed == 'true' && steps.append_comment.outputs.previous_comment_id == ''
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL_DOCS }}
          webhook-type: incoming-webhook
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "hey ${{ secrets.SLACK_DOCS_TAG }}, this is APIx Bot :aileafy:, could you please review <${{ github.event.pull_request.html_url }}|PR ${{ github.event.pull_request.number }}> :pretty-please:? thanks a lot!"
                  }
                }
              ]
            }
