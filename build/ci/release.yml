variables:
  - &go_options
    GO111MODULE: "on"
    GOROOT: ${go_root}

functions:
  "install goreleaser":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/mongocli/bin
        script: |
          set -Eeou pipefail

          curl -sfL ${goreleaser_pro_tar_gz} | tar zx
  "install macos notarization service":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/mongocli
        include_expansions_in_env:
          - notary_service_url
        script: |
          set -Eeou pipefail
          curl "${notary_service_url}" --output macos-notary.zip
          unzip -u macos-notary.zip
          chmod 755 ./darwin_amd64/macnotary
  "install curator":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/mongocli/bin
        script: |
          set -Eeou pipefail

          curl -sL http://boxes.10gen.com/build/curator/curator-dist-rhel70-${curator_release|"latest"}.tar.gz | tar zx
  "check license header":
    - command: subprocess.exec
      type: test
      params:
        add_to_path:
          - ${go_bin}
        include_expansions_in_env:
          - workdir
        working_dir: src/github.com/mongodb/mongocli
        env:
          <<: *go_options
        binary: build/ci/check-licenses.sh
  "generate notices":
    - command: subprocess.exec
      type: test
      params:
        add_to_path:
          - ${go_bin}
        include_expansions_in_env:
          - workdir
        working_dir: src/github.com/mongodb/mongocli
        env:
          <<: *go_options
        binary: build/package/generate-notices.sh
  "package":
    - command: shell.exec
      type: test
      params:
        working_dir: src/github.com/mongodb/mongocli
        include_expansions_in_env:
          - notary_service_key_id
          - notary_service_secret
          - notary_service_url
          - goreleaser_key
        script: |
          set -Eeou pipefail

          export GOROOT="${go_root}"
          export PATH="./bin:${go_bin}:$PATH"
          export GITHUB_TOKEN=${github_token}
          export NOTARY_SERVICE_URL=${notary_service_url}
          export MACOS_NOTARY_KEY=${notary_service_key_id}
          export MACOS_NOTARY_SECRET=${notary_service_secret}
          export GORELEASER_KEY=${goreleaser_key}
          export VERSION_GIT=$(git describe --abbrev=0 | cut -d "v" -f 2)

          # avoid race conditions on the notarization step by using `-p 1`
          ${goreleaser_cmd|goreleaser --rm-dist --snapshot -p 1}
  "install go-msi":
    - command: subprocess.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/mongocli
        command: choco install -y "go-msi" --force
  "uninstall go-msi":
    - command: subprocess.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/mongocli
        command: choco uninstall -y "go-msi"
  "generate msi":
    - command: subprocess.exec
      type: test
      params:
        working_dir: src/github.com/mongodb/mongocli
        add_to_path:
          - ${go_bin}
          - "/cygdrive/c/Program Files/go-msi"
          - "/cygdrive/c/wixtools/bin"
        include_expansions_in_env:
          - workdir
        env:
          <<: *go_options
          TOOL_NAME: ${TOOL_NAME}
        command: bash.exe -c build/package/generate-msi.sh
  "rename pkg":
    - command: subprocess.exec
      type: test
      params:
        add_to_path:
          - ${go_bin}
        include_expansions_in_env:
          - unstable
          - latest_deb
          - latest_rpm
          - package_name
        working_dir: src/github.com/mongodb/mongocli
        env:
          <<: *go_options
        binary: build/package/rename-pkg.sh
  "send slack notification":
    - command: subprocess.exec
      type: test
      params:
        working_dir: src/github.com/mongodb/mongocli
        silent: true
        include_expansions_in_env:
          - evergreen_user
          - evergreen_api_key
          - release_slack_channel
          - revision
          - created_at
          - TOOL_NAME
        binary: build/package/send-slack-notification.sh
  "generate download archive json":
    - command: shell.exec
      type: test
      params:
        working_dir: src/github.com/mongodb/mongocli/dist
        include_expansions_in_env:
          - FEED_FILE_NAME
        script: |
          set -Eeou pipefail

          export GOROOT="${go_root}"
          export PATH="./bin:${go_bin}:$PATH"

          go run ../internal/release/main.go --version "$(git describe | cut -d "v" -f 2)" --file "${FEED_FILE_NAME}"
  "upload dist":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter:
          - src/github.com/mongodb/mongocli/dist/*.tar.gz
          - src/github.com/mongodb/mongocli/dist/*.zip
          - src/github.com/mongodb/mongocli/dist/*.deb
          - src/github.com/mongodb/mongocli/dist/*.rpm
          - src/github.com/mongodb/mongocli/dist/*.tgz
          - src/github.com/mongodb/mongocli/dist/*.json
          - src/github.com/mongodb/mongocli/dist/*.msi
        remote_file: ${project}/dist/${revision}_${created_at}/
        bucket: mongodb-mongocli-build
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: inernal-bucket
  "push":
    - command: subprocess.exec
      type: test
      params:
        include_expansions_in_env:
          - barque_url
          - distro
          - edition
          - server_version
          - project
          - revision
          - created_at
          - ext
          - signing_auth_token_42
          - signing_auth_token_44
          - signing_auth_token_46
          - signing_auth_token_50
          - tool_name
        add_to_path:
          - ./bin
        working_dir: src/github.com/mongodb/mongocli
        env:
          <<: *go_options
          NOTARY_KEY_NAME: ${notary_key_name|server-4.4}
          BARQUE_USERNAME: ${barque_user}
          BARQUE_API_KEY: ${barque_api_key}
        binary: build/package/curator-push.sh
  "docker build":
    - command: subprocess.exec
      type: test
      params:
        include_expansions_in_env:
          - revision
          - created_at
          - image
          - tool_name
        working_dir: src/github.com/mongodb/mongocli/build/package/docker
        binary: ./docker-build.sh

tasks:
  - name: package_msi
    tags: ["packaging"]
    depends_on:
      - name: compile
        variant: "code_health"
        patch_optional: true
    commands:
      - func: "clone"
      - func: "install go-msi"
      - func: "generate msi"
        vars:
          TOOL_NAME: ${tool_name}
      - func: "uninstall go-msi"
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_files_include_filter:
            - src/github.com/mongodb/mongocli/dist/*.msi
          remote_file: ${project}/dist/${revision}_${created_at}/
          bucket: mongodb-mongocli-build
          permissions: public-read
          content_type: ${content_type|application/x-gzip}
  - name: package_goreleaser
    tags: ["packaging"]
    depends_on:
      - name: compile
        variant: "code_health"
        patch_optional: true
    commands:
      - func: "clone"
      - func: "generate notices"
      - func: "install goreleaser"
      - func: "install macos notarization service"
      - func: "package"
        vars:
          goreleaser_file: ${goreleaser_file}
          goreleaser_cmd: goreleaser --config "${goreleaser_file}" --rm-dist --snapshot -p 1
      - func: "rename pkg"
        vars:
          unstable: -unstable
          latest_deb: ~latest
          latest_rpm: .latest
          package_name: ${package_name}
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/mongocli-deb.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/apt
          include:
            - "*.deb"
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/mongocli-rpm.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/yum
          include:
            - "*.rpm"
      - func: "generate download archive json"
        vars:
          package_name: ${package_name}
          FEED_FILE_NAME: "${package_name}.json"
      - func: "upload dist"
  - name: pkg_test_mongocli_docker_ubuntu1804
    tags: ["smoke-test"]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: ubuntu18.04-deb
          tool_name: mongocli
  - name: pkg_test_mongocli_docker_ubuntu2004
    tags: ["smoke-test"]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: ubuntu20.04-deb
          tool_name: mongocli
  - name: pkg_test_mongocli_docker_debian9
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: debian9-deb
          tool_name: mongocli
  - name: pkg_test_mongocli_docker_debian10
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: debian10-deb
          tool_name: mongocli
  - name: pkg_test_mongocli_docker_amazon2
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: amazonlinux2-rpm
          tool_name: mongocli
  - name: pkg_test_mongocli_docker_centos7
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: centos7-rpm
          tool_name: mongocli
  - name: pkg_test_atlascli_docker_amazon2
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: amazonlinux2-rpm
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_centos7
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: centos7-rpm
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_centos8
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: centos8-rpm
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_ubuntu1804
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: ubuntu18.04-deb
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_ubuntu2004
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: ubuntu20.04-deb
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_debian9
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: debian9-deb
          tool_name: atlascli
  - name: pkg_test_atlascli_docker_debian10
    tags: [ "smoke-test" ]
    depends_on:
      - name: package_goreleaser
        variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "docker build"
        vars:
          image: debian10-deb
          tool_name: atlascli
  - name: release_mongocli
    stepback: false
    git_tag_only: true
    depends_on:
      - name: compile_mongocli
        variant: "code_health"
      - name: release_msi
        variant: "release_mongocli_msi"
    commands:
      - func: "clone"
      - func: "generate notices"
      - func: "install goreleaser"
      - func: "install macos notarization service"
      - command: subprocess.exec
        type: test
        params:
          working_dir: src/github.com/mongodb/mongocli
          env:
            TOOL_NAME: mongocli
          binary: build/package/download-msi.sh
      - func: "package"
        vars:
          goreleaser_cmd: goreleaser --config .mongocli.goreleaser.yml --rm-dist --release-notes CHANGELOG.md -p 1
      - func: "rename pkg"
        vars:
          package_name: mongocli
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/mongocli-deb.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/apt
          include:
            - "*.deb"
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/mongocli-rpm.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/yum
          include:
            - "*.rpm"
      - func: "generate download archive json"
        vars:
          FEED_FILE_NAME: mongocli.json
      - func: "upload dist"
      - command: s3.put
        params:
          aws_key: ${download_center_aws_key}
          aws_secret: ${download_center_aws_secret}
          local_files_include_filter:
            - src/github.com/mongodb/mongocli/dist/*.tar.gz
            - src/github.com/mongodb/mongocli/dist/*.zip
            - src/github.com/mongodb/mongocli/dist/*.deb
            - src/github.com/mongodb/mongocli/dist/*.rpm
            - src/github.com/mongodb/mongocli/dist/*.tgz
            - src/github.com/mongodb/mongocli/dist/*.json
          remote_file: mongocli/
          bucket: downloads.mongodb.org
          permissions: public-read
          content_type: ${content_type|application/x-gzip}
          display_name: downloads-center-
      - func: "send slack notification"
        vars:
          TOOL_NAME: mongocli
  - name: release_atlascli
    stepback: false
    git_tag_only: true
    depends_on:
      - name: compile_atlascli
        variant: "code_health"
      - name: release_msi
        variant: "release_atlascli_msi"
    commands:
      - func: "clone"
      - func: "generate notices"
      - func: "install goreleaser"
      - func: "install macos notarization service"
      - command: subprocess.exec
        type: test
        params:
          working_dir: src/github.com/mongodb/mongocli
          env:
            TOOL_NAME: atlascli
          binary: build/package/download-msi.sh
      - func: "package"
        vars:
          goreleaser_cmd: goreleaser --config .atlascli.goreleaser.yml --rm-dist --release-notes CHANGELOG.md -p 1
      - func: "rename pkg"
        vars:
          package_name: mongodb-atlas-cli
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/atlascli-deb.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/apt
          include:
            - "*.deb"
      - command: archive.targz_pack
        params:
          target: src/github.com/mongodb/mongocli/dist/atlascli-rpm.tgz
          source_dir: src/github.com/mongodb/mongocli/dist/yum
          include:
            - "*.rpm"
      - func: "generate download archive json"
        vars:
          FEED_FILE_NAME: mongodb-atlas-cli.json
#      - func: "upload dist" TODO CLOUDP-113712: WAITING FOR https://jira.mongodb.org/browse/WEBSITE-11811
#      - command: s3.put
#        params:
#          aws_key: ${download_center_aws_key}
#          aws_secret: ${download_center_aws_secret}
#          local_files_include_filter:
#            - src/github.com/mongodb/mongocli/dist/*.tar.gz
#            - src/github.com/mongodb/mongocli/dist/*.zip
#            - src/github.com/mongodb/mongocli/dist/*.deb
#            - src/github.com/mongodb/mongocli/dist/*.rpm
#            - src/github.com/mongodb/mongocli/dist/*.tgz
#            - src/github.com/mongodb/mongocli/dist/*.json
#          remote_file: mongocli/
#          bucket: downloads.mongodb.org
#          permissions: public-read
#          content_type: ${content_type|application/x-gzip}
#          display_name: downloads-center-
      - func: "send slack notification"
        vars:
          TOOL_NAME: atlascli
  - name: release_msi
    stepback: false
    git_tag_only: true
    depends_on:
      - name: compile
        variant: "code_health"
    commands:
      - func: "clone"
      - func: "install go-msi"
      - func: "generate msi"
        vars:
          TOOL_NAME: ${tool_name}
      - func: "uninstall go-msi"
      - func: "upload dist"
      - command: s3.put
        params:
          aws_key: ${download_center_aws_key}
          aws_secret: ${download_center_aws_secret}
          local_files_include_filter:
            - src/github.com/mongodb/mongocli/dist/*.msi
          remote_file: mongodb-atlas-cli/
          bucket: downloads.mongodb.org
          permissions: public-read
          content_type: ${content_type|application/x-gzip}
          display_name: downloads-center-

  ################################################################
  # Unstable Publish - AtlasCLI
  # RPM Distros
  - name: push_atlascli_rhel70_enterprise
    <<: &default_atlascli_push_def
      # This should prevent this task from running in patch builds, where we
      # don't want to publish packages.
      patchable: false
      stepback: false
      tags: ["push"]
      depends_on:
        - name: compile_atlascli
          variant: "code_health"
        - name: package_goreleaser
          variant: "goreleaser_atlascli_snapshot"
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel70
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel70_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel70
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel80_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel80
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel80_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel80
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_amazon2_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: amazon2
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_amazon2_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: amazon2
          ext: rpm
          tool_name: atlascli
  # DEB Distros
  - name: push_atlascli_ubuntu1804_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu1804
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu1804_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu1804
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu2004_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu2004
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu2004_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu2004
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian92_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian92
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian92_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian92
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian10_enterprise
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian10
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian10_org
    <<: *default_atlascli_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian10
          ext: deb
          tool_name: atlascli
  ################################################################
  # Unstable Publish - MongoCLI
  # RPM Distros
  - name: push_mongocli_rhel70_enterprise
    <<: &default_push_def
      # This should prevent this task from running in patch builds, where we
      # don't want to publish packages.
      patchable: false
      stepback: false
      tags: ["push"]
      depends_on:
        - name: compile_mongocli
          variant: "code_health"
        - name: package_goreleaser
          variant: "goreleaser_mongocli_snapshot"
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel70
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel70_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel70
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel80_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel80
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel80_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel80
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_amazon2_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: amazon2
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_amazon2_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: amazon2
          ext: rpm
          tool_name: mongocli
  # DEB Distros
  - name: push_mongocli_ubuntu1804_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu1804
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu1804_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu1804
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu2004_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu2004
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu2004_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu2004
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian92_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian92
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian92_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian92
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian10_enterprise
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian10
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian10_org
    <<: *default_push_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian10
          ext: deb
          tool_name: mongocli
  ################################################################
  # Stable Publish - MongoCLI
  # RPM Distros
  - name: push_mongocli_rhel70_enterprise_stable
    <<: &default_push_stable_def
      git_tag_only: true
      stepback: false
      tags: ["push_mongocli_stable"]
      depends_on:
        - name: compile_mongocli
          variant: "code_health"
        - name: release_mongocli
          variant: "release_mongocli_github"
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel70
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel70_org_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel70
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel80_enterprise_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel80
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_rhel80_org_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel80
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_amazon2_enterprise_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: amazon2
          ext: rpm
          tool_name: mongocli
  - name: push_mongocli_amazon2_org_44
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: amazon2
          ext: rpm
          tool_name: mongocli
  # DEB Distros
  - name: push_mongocli_ubuntu1804_enterprise_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu1804
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu1804_org_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu1804
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu2004_enterprise_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu2004
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_ubuntu2004_org_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu2004
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian10_enterprise_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian10
          ext: deb
          tool_name: mongocli
  - name: push_mongocli_debian10_org_stable
    <<: *default_push_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian10
          ext: deb
          tool_name: mongocli
  ################################################################
  # Stable Publish - AtlasCLI
  # RPM Distros
  - name: push_atlascli_rhel70_enterprise_stable
    <<: &default_push_atlascli_stable_def
      git_tag_only: true
      stepback: false
      tags: [ "push_atlascli_stable" ]
      depends_on:
        - name: compile_atlascli
          variant: "code_health"
        - name: release_atlascli
          variant: "release_atlascli_github"
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel70
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel70_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel70
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel80_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: rhel80
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_rhel80_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: rhel80
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_amazon2_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: amazon2
          ext: rpm
          tool_name: atlascli
  - name: push_atlascli_amazon2_org_44
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: amazon2
          ext: rpm
          tool_name: atlascli
  # DEB Distros
  - name: push_atlascli_ubuntu1804_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu1804
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu1804_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu1804
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu2004_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: ubuntu2004
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_ubuntu2004_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: ubuntu2004
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian92_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian92
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian92_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian92
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian10_enterprise_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: enterprise
          distro: debian10
          ext: deb
          tool_name: atlascli
  - name: push_atlascli_debian10_org_stable
    <<: *default_push_atlascli_stable_def
    commands:
      - func: "clone"
      - func: "install curator"
      - func: "push"
        vars:
          edition: org
          distro: debian10
          ext: deb
          tool_name: atlascli

buildvariants:
  - name: go_mongocli_msi_snapshot
    display_name: "Packaging MongoCLI (go-msi)"
    run_on:
      - windows-vsCurrent-small
    expansions:
      go_root: "c:\\golang\\go1.17"
      go_bin: "c:\\golang\\go1.17/bin"
      tool_name: "mongocli"
    tasks:
      - name: package_msi
  - name: go_atlascli_msi_snapshot
    display_name: "Packaging AtlasCLI (go-msi)"
    run_on:
      - windows-vsCurrent-small
    expansions:
      go_root: "c:\\golang\\go1.17"
      go_bin: "c:\\golang\\go1.17/bin"
      tool_name: "atlascli"
    tasks:
      - name: package_msi
  - name: goreleaser_mongocli_snapshot
    display_name: "Packaging MongoCLI (goreleaser)"
    run_on:
      - macos-1014-codesign
    expansions:
      go_root: "/opt/golang/go1.17"
      go_bin: "/opt/golang/go1.17/bin"
      server_version: "4.4.0-rc3"
      goreleaser_file: ".mongocli.goreleaser.yml"
      package_name: "mongocli"
    tasks:
      - name: package_goreleaser
  - name: goreleaser_atlascli_snapshot
    display_name: "Packaging AtlasCLI (goreleaser)"
    run_on:
      - macos-1014-codesign
    expansions:
      go_root: "/opt/golang/go1.17"
      go_bin: "/opt/golang/go1.17/bin"
      server_version: "4.4.0-rc3"
      goreleaser_file: ".atlascli.goreleaser.yml"
      package_name: "mongodb-atlas-cli"
    tasks:
      - name: package_goreleaser
  - name: publish_snapshot
    display_name: "Publish yum/apt main"
    run_on:
      - rhel70-small
    expansions:
      go_root: "/opt/golang/go1.17"
      go_bin: "/opt/golang/go1.17/bin"
      server_version: "4.4.0-rc3"
    tasks:
      - name: .push
        run_on:
          - rhel70-small
  - name: release_mongocli_msi
    display_name: "Release MongoCLI (go-msi)"
    run_on:
      - windows-vsCurrent-small
    expansions:
      go_root: "c:\\golang\\go1.17"
      go_bin: "c:\\golang\\go1.17/bin"
      tool_name: "mongocli"
    tasks:
      - name: release_msi
  - name: release_mongocli_github
    display_name: "Release MongoCLI (goreleaser)"
    run_on:
      - macos-1014-codesign
    expansions:
      go_root: "/opt/golang/go1.17"
      go_bin: "/opt/golang/go1.17/bin"
    tasks:
      - name: release_mongocli
  - name: release_atlascli_github
    display_name: "Release AtlasCLI (goreleaser)"
    run_on:
      - macos-1014-codesign
    expansions:
      go_root: "/opt/golang/go1.17"
      go_bin: "/opt/golang/go1.17/bin"
    tasks:
      - name: release_atlascli
  - name: release_atlascli_msi
    display_name: "Release AtlasCLI (go-msi)"
    run_on:
      - windows-vsCurrent-small
    expansions:
      go_root: "c:\\golang\\go1.17"
      go_bin: "c:\\golang\\go1.17/bin"
      tool_name: "atlascli"
    tasks:
      - name: release_msi
  - name: release_mongocli_publish_42
    display_name: "Publish MongoCLI yum/apt 4.2"
    run_on:
      - rhel70-small
    expansions:
      server_version: "4.2.3"
      notary_key_name: "server-4.2"
    tasks:
      - name: .push_mongocli_stable
  - name: release_mongocli_publish_44
    display_name: "Publish MongoCLI yum/apt 4.4"
    run_on:
      - rhel70-small
    expansions:
      server_version: "4.4.3"
      notary_key_name: "server-4.4"
    tasks:
      - name: .push_mongocli_stable
  - name: release_mongocli_publish_50
    display_name: "Publish MongoCLI yum/apt 5.0"
    run_on:
      - rhel70-small
    expansions:
      server_version: "5.0.0"
      notary_key_name: "server-5.0"
    tasks:
      - name: .push_mongocli_stable
  - name: release_atlascli_publish_42
    display_name: "Publish AtlasCLI yum/apt 4.2"
    run_on:
      - rhel70-small
    expansions:
      server_version: "4.2.3"
      notary_key_name: "server-4.2"
    tasks:
      - name: .push_atlascli_stable
  - name: release_atlascli_publish_44
    display_name: "Publish AtlasCLI yum/apt 4.4"
    run_on:
      - rhel70-small
    expansions:
      server_version: "4.4.3"
      notary_key_name: "server-4.4"
    tasks:
      - name: .push_atlascli_stable
  - name: release_atlascli_publish_50
    display_name: "Publish AtlasCLI yum/apt 5.0"
    run_on:
      - rhel70-small
    expansions:
      server_version: "5.0.0"
      notary_key_name: "server-5.0"
    tasks:
      - name: .push_atlascli_stable
  - name: pkg_smoke_tests_docker
    display_name: "Post packaging smoke tests (Docker)"
    run_on: ubuntu1804-small
    tasks:
      - name: pkg_test_mongocli_docker_amazon2
      - name: pkg_test_mongocli_docker_centos7
      - name: pkg_test_mongocli_docker_ubuntu1804
      - name: pkg_test_mongocli_docker_ubuntu2004
      - name: pkg_test_mongocli_docker_debian9
      - name: pkg_test_mongocli_docker_debian10
      - name: pkg_test_atlascli_docker_amazon2
      - name: pkg_test_atlascli_docker_centos7
      - name: pkg_test_atlascli_docker_ubuntu1804
      - name: pkg_test_atlascli_docker_ubuntu2004
      - name: pkg_test_atlascli_docker_debian9
      - name: pkg_test_atlascli_docker_debian10
