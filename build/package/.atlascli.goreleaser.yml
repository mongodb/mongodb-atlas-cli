project_name: atlascli

monorepo:
  tag_prefix: atlascli/

before:
  hooks:
    - go mod tidy

builds:
  - <<: &build_defaults
      env:
        - CGO_ENABLED=0
      binary: bin/atlas
      main: ./cmd/atlas
      ldflags:
        - -s -w -X github.com/mongodb/mongodb-atlas-cli/internal/version.Version={{.Version}} -X github.com/mongodb/mongodb-atlas-cli/internal/version.GitCommit={{.FullCommit}} -X github.com/mongodb/mongodb-atlas-cli/internal/config.ToolName=atlascli
    id: linux
    goos: [linux]
    goarch: [amd64,arm64]
  - <<: *build_defaults
    id: macos
    goos: [darwin]
    goarch: [amd64,arm64]
    hooks:
      # This will notarize Apple binaries and replace goreleaser bins with the notarized ones
      post:
        - cmd: ./build/package/atlascli_mac_notarize.sh
          output: true
  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [amd64]
    hooks:
      post:
        - cmd: ./build/package/windows_notarize.sh
          env:
            - TOOL_NAME=atlascli
            - VERSION={{ .Version }}
          output: true
gomod: # https://goreleaser.com/customization/verifiable_builds/
  # Proxy a module from proxy.golang.org, making the builds verifiable.
  # This will only be effective if running against a tag. Snapshots will ignore
  # this setting.
  # Notice: for this to work your `build.main` must be a package, not a `.go` file.
  proxy: false # it will be enabled in CLOUDP-228737
  # Sets the `-mod` flag value.
  #
  # Since: v1.7
  mod: mod
archives:
- id: linux_archives
  name_template: mongodb-atlas-cli_{{ .Version }}_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}
  builds: [linux]
  <<: &archive_defaults
    files:
      - README.md
      - atlascli.md
      - LICENSE
      - LICENSING-NOTES.txt
      - third_party_notices/**/*
  wrap_in_directory: true
  format: tar.gz
  rlcp: false
- id: macos
  name_template: mongodb-atlas-cli_{{ .Version }}_{{- if eq .Os "darwin" }}macos{{- else }}{{ .Os }}{{ end }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}
  builds: [macos]
  <<: *archive_defaults
  format: zip
  wrap_in_directory: false
  rlcp: false
- id: windows
  name_template: mongodb-atlas-cli_{{ .Version }}_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}
  builds: [windows]
  <<: *archive_defaults
  wrap_in_directory: false
  format: zip
  rlcp: false
nfpms:
- id: linux_package
  package_name: mongodb-atlas-cli
  file_name_template: mongodb-atlas-cli_{{ .Version }}_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}
  vendor: MongoDB Inc.
  homepage: https://www.mongodb.com/
  maintainer: MongoDB Inc. <support@mongodb.com>
  description: MongoDB Atlas Command Line Interface (atlascli) is a tool for managing your MongoDB Atlas account.
  license: Apache 2.0
  bindir: /usr
  builds: [linux]
  formats: [deb,rpm]
  contents:
    - src: ./build/package/rpm/installer
      dst: /etc/atlascli/installer
      type: "config|noreplace"
      packager: rpm
    - src: ./build/package/deb/installer
      dst: /etc/atlascli/installer
      type: "config|noreplace"
      packager: deb
- id: mongodb-atlas
  package_name: mongodb-atlas
  file_name_template: mongodb-atlas_{{ .Version }}_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}
  vendor: MongoDB Inc.
  homepage: https://www.mongodb.com/
  maintainer: MongoDB Inc. <support@mongodb.com>
  description: MongoDB Atlas Command Line Interface (atlascli) is a tool for managing your MongoDB Atlas account.
  license: Apache 2.0
  formats: [deb,rpm]
  dependencies:
    - mongodb-atlas-cli
    - mongodb-mongosh
  recommends:
    - podman
  meta: true
checksum:
  name_template: checksums.txt
snapshot:
  name_template: "{{ .Env.VERSION_GIT }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - '^task:'
    - '^build(deps):'
signs:
  - id: linux_artifacts
    signature: "${artifact}.sig"
    cmd: "./build/package/linux_notarize.sh"
    ids:
      - linux_archives
      - linux_package
      - mongodb-atlas
    env:
      - TOOL_NAME=atlascli
    artifacts: all
    output: true
release:
  prerelease: auto
  name_template: "MongoDB Atlas CLI {{.Version}}"
  extra_files:
    - glob: ./bin/*.msi
