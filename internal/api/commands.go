// Copyright 2024 MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This code was autogenerated using `make gen-L1-commands`
// Don't make any manual changes to this file.
package api

import "net/http"

var Commands = GroupedAndSortedCommands{
	{
		Name:        `AWS Clusters DNS`,
		Description: `Returns and edits custom DNS configurations for MongoDB Cloud database deployments on AWS. The resource requires your Project ID. If you use the VPC peering on AWS and you use your own DNS servers instead of Amazon Route 53, enable custom DNS. Before 31 March 2020, applications deployed within AWS using custom DNS services and VPC-peered with MongoDB Cloud couldn&#39;t connect over private IP addresses. Custom DNS resolved to public IP addresses. AWS internal DNS resolved to private IP addresses. Applications deployed with custom DNS services in AWS should use Private IP for Peering connection strings.`,
		Commands: []Command{
			{
				OperationID: `getAWSCustomDNS`,
				Description: `Returns the custom DNS configuration for AWS clusters in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/awsCustomDNS`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `toggleAWSCustomDNS`,
				Description: `Enables or disables the custom DNS configuration for AWS clusters in the specified project. Enable custom DNS if you use AWS VPC peering and use your own DNS servers. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/awsCustomDNS`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Access Tracking`,
		Description: `Returns access logs for authentication attempts made to Atlas database deployments. To view database access history, you must have either the Project Owner or Organization Owner role.`,
		Commands: []Command{
			{
				OperationID: `listAccessLogsByClusterName`,
				Description: `Returns the access logs of one cluster identified by the cluster&#39;s name. Access logs contain a list of authentication requests made against your cluster. You can&#39;t use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `authResult`,
							Description: `Flag that indicates whether the response returns the successful authentication attempts only.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when to stop retrieving database history. If you specify end, you must also specify start. This parameter uses UNIX epoch time in milliseconds.`,
							Required:    false,
						},
						{
							Name:        `ipAddress`,
							Description: `One Internet Protocol address that attempted to authenticate with the database.`,
							Required:    false,
						},
						{
							Name:        `nLogs`,
							Description: `Maximum number of lines from the log to return.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins retrieving database history. If you specify start, you must also specify end. This parameter uses UNIX epoch time in milliseconds.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAccessLogsByHostname`,
				Description: `Returns the access logs of one cluster identified by the cluster&#39;s hostname. Access logs contain a list of authentication requests made against your clusters. You can&#39;t use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting API Key must have the Project Monitoring Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dbAccessHistory/processes/{hostname}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `authResult`,
							Description: `Flag that indicates whether the response returns the successful authentication attempts only.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when to stop retrieving database history. If you specify end, you must also specify start. This parameter uses UNIX epoch time in milliseconds.`,
							Required:    false,
						},
						{
							Name:        `ipAddress`,
							Description: `One Internet Protocol address that attempted to authenticate with the database.`,
							Required:    false,
						},
						{
							Name:        `nLogs`,
							Description: `Maximum number of lines from the log to return.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins retrieving database history. If you specify start, you must also specify end. This parameter uses UNIX epoch time in milliseconds.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `hostname`,
							Description: `Fully qualified domain name or IP address of the MongoDB host that stores the log files that you want to download.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Alert Configurations`,
		Description: `Returns and edits the conditions that trigger alerts and how MongoDB Cloud notifies users. This collection remains under revision and may change.`,
		Commands: []Command{
			{
				OperationID: `createAlertConfiguration`,
				Description: `Creates one alert configuration for the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAlertConfiguration`,
				Description: `Removes one alert configuration from the specified project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertConfigId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert configuration. Use the /alertConfigs endpoint to retrieve all alert configurations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAlertConfiguration`,
				Description: `Returns the specified alert configuration from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertConfigId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert configuration. Use the /alertConfigs endpoint to retrieve all alert configurations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAlertConfigurationMatchersFieldNames`,
				Description: `Get all field names that the matchers.fieldName parameter accepts when you create or update an Alert Configuration. You can successfully call this endpoint with any assigned role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/alertConfigs/matchers/fieldNames`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAlertConfigurations`,
				Description: `Returns all alert configurations for one project. These alert configurations apply to any component in the project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAlertConfigurationsByAlertId`,
				Description: `Returns all alert configurations set for the specified alert. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alerts/{alertId}/alertConfigs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert. Use the /alerts endpoint to retrieve all alerts to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `toggleAlertConfiguration`,
				Description: `Enables or disables the specified alert configuration in the specified project. The resource enables the specified alert configuration if currently enabled. The resource disables the specified alert configuration if currently disabled. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.


NOTE: This endpoint updates only the enabled/disabled state for the alert configuration. To update more than just this configuration, see Update One Alert Configuration.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertConfigId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert configuration that triggered this alert. Use the /alertConfigs endpoint to retrieve all alert configurations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAlertConfiguration`,
				Description: `Updates one alert configuration in the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.


NOTE: To enable or disable the alert configuration, see Toggle One State of One Alert Configuration in One Project.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertConfigId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert configuration. Use the /alertConfigs endpoint to retrieve all alert configurations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Alerts`,
		Description: `Returns and acknowledges alerts that MongoDB Cloud triggers based on the alert conditions that you define. This collection remains under revision and may change.`,
		Commands: []Command{
			{
				OperationID: `acknowledgeAlert`,
				Description: `Confirms receipt of one existing alert. This alert applies to any component in one project. Acknowledging an alert prevents successive notifications. You receive an alert when a monitored component meets or exceeds a value you set until you acknowledge the alert. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alerts/{alertId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert. Use the /alerts endpoint to retrieve all alerts to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAlert`,
				Description: `Returns one alert. This alert applies to any component in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alerts/{alertId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert. Use the /alerts endpoint to retrieve all alerts to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAlerts`,
				Description: `Returns all alerts. These alerts apply to all components in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alerts`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `status`,
							Description: `Status of the alerts to return. Omit to return all alerts in all statuses.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAlertsByAlertConfigurationId`,
				Description: `Returns all open alerts that the specified alert configuration triggers. These alert configurations apply to the specified project only. Alert configurations define the triggers and notification methods for alerts. Open alerts have been triggered but remain unacknowledged. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}/alerts`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `alertConfigId`,
							Description: `Unique 24-hexadecimal digit string that identifies the alert configuration. Use the /alertConfigs endpoint to retrieve all alert configurations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Atlas Search`,
		Description: `Returns, adds, edits, and removes Atlas Search indexes for the specified cluster. Also returns and updates user-defined analyzers for the specified cluster.`,
		Commands: []Command{
			{
				OperationID: `createAtlasSearchDeployment`,
				Description: `Creates Search Nodes for the specified cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Label that identifies the cluster to create Search Nodes for.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createAtlasSearchIndex`,
				Description: `Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection on which to create an Atlas Search index.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createAtlasSearchIndexDeprecated`,
				Description: `Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection on which to create an Atlas Search index.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAtlasSearchDeployment`,
				Description: `Deletes the Search Nodes for the specified cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Label that identifies the cluster to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAtlasSearchIndex`,
				Description: `Removes one Atlas Search index that you identified with its unique ID. To use this resource, the requesting API key must have the Project Data Access Admin role. This deletion is eventually consistent.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the database and collection with one or more Application Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the Get All Atlas Search Indexes for a Collection API endpoint to find the IDs of all Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAtlasSearchIndexByName`,
				Description: `Removes one Atlas Search index that you identified with its database, collection, and name. To use this resource, the requesting API key must have the Project Data Access Admin role. This deletion is eventually consistent.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}/{indexName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the database and collection with one or more Application Search indexes.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Name of the collection that contains one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Label that identifies the database that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexName`,
							Description: `Name of the Atlas Search index to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAtlasSearchIndexDeprecated`,
				Description: `Removes one Atlas Search index that you identified with its unique ID. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the database and collection with one or more Application Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the Get All Atlas Search Indexes for a Collection API endpoint to find the IDs of all Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasSearchDeployment`,
				Description: `Return the Search Nodes for the specified cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Label that identifies the cluster to return the Search Nodes for.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasSearchIndex`,
				Description: `Returns one Atlas Search index in the specified project. You identify this index using its unique ID. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Application Search index. Use the Get All Application Search Indexes for a Collection API endpoint to find the IDs of all Application Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasSearchIndexByName`,
				Description: `Returns one Atlas Search index in the specified project. You identify this index using its database, collection and name. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}/{indexName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Name of the collection that contains one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Label that identifies the database that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexName`,
							Description: `Name of the Atlas Search index to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasSearchIndexDeprecated`,
				Description: `Returns one Atlas Search index in the specified project. You identify this index using its unique ID. Atlas Search index contains the indexed fields and the analyzers used to create the index. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Application Search index. Use the Get All Application Search Indexes for a Collection API endpoint to find the IDs of all Application Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAtlasSearchIndexes`,
				Description: `Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Name of the collection that contains one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Label that identifies the database that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAtlasSearchIndexesCluster`,
				Description: `Returns all Atlas Search indexes on the specified cluster. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAtlasSearchIndexesDeprecated`,
				Description: `Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{databaseName}/{collectionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Name of the collection that contains one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAtlasSearchDeployment`,
				Description: `Updates the Search Nodes for the specified cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Label that identifies the cluster to update the Search Nodes for.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAtlasSearchIndex`,
				Description: `Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection whose Atlas Search index you want to update.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the Get All Atlas Search Indexes for a Collection API endpoint to find the IDs of all Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAtlasSearchIndexByName`,
				Description: `Updates one Atlas Search index that you identified with its database, collection name, and index name. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}/{indexName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection whose Atlas Search index you want to update.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Name of the collection that contains one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Label that identifies the database that contains the collection with one or more Atlas Search indexes.`,
							Required:    true,
						},
						{
							Name:        `indexName`,
							Description: `Name of the Atlas Search index to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAtlasSearchIndexDeprecated`,
				Description: `Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Name of the cluster that contains the collection whose Atlas Search index to update.`,
							Required:    true,
						},
						{
							Name:        `indexId`,
							Description: `Unique 24-hexadecimal digit string that identifies the Atlas Search index. Use the Get All Atlas Search Indexes for a Collection API endpoint to find the IDs of all Atlas Search indexes.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Auditing`,
		Description: `Returns and edits database auditing settings for MongoDB Cloud projects.`,
		Commands: []Command{
			{
				OperationID: `getAuditingConfiguration`,
				Description: `Returns the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Owner role. This feature isn&#39;t available for M0, M2, M5, or serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/auditLog`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAuditingConfiguration`,
				Description: `Updates the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting API Key must have the Project Owner role. This feature isn&#39;t available for M0, M2, M5, or serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/auditLog`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Cloud Backups`,
		Description: `Manages Cloud Backup snapshots, snapshot export buckets, restore jobs, and schedules. This resource applies only to clusters that use Cloud Backups.`,
		Commands: []Command{
			{
				OperationID: `cancelBackupRestoreJob`,
				Description: `Cancels one cloud backup restore job of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `restoreJobId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job to remove.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createBackupExportJob`,
				Description: `Exports one backup Snapshot for dedicated Atlas cluster using Cloud Backups to an Export Bucket. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createBackupRestoreJob`,
				Description: `Restores one snapshot of one cluster from the specified project. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of queued or inProgress exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.


To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createExportBucket`,
				Description: `Creates a Snapshot Export Bucket for an AWS S3 Bucket or Azure Blob Storage Container. Once created, an snapshots can be exported to the Export Bucket and its referenced AWS S3 Bucket or Azure Blob Storage Container. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backup/exportBuckets`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createServerlessBackupRestoreJob`,
				Description: `Restores one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the serverless instance whose snapshot you want to restore.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAllBackupSchedules`,
				Description: `Removes all cloud backup schedules for the specified cluster. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteExportBucket`,
				Description: `Deletes an Export Bucket. Auto export must be disabled on all clusters in this Project exporting to this Export Bucket before revoking access. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backup/exportBuckets/{exportBucketId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `exportBucketId`,
							Description: `Unique 24-hexadecimal character string that identifies the Export Bucket.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteReplicaSetBackup`,
				Description: `Removes the specified snapshot. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteShardedClusterBackup`,
				Description: `Removes one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getBackupExportJob`,
				Description: `Returns one Cloud Backup Snapshot Export Job associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports/{exportId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `exportId`,
							Description: `Unique 24-hexadecimal character string that identifies the Export Job.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getBackupRestoreJob`,
				Description: `Returns one cloud backup restore job for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the restore jobs you want to return.`,
							Required:    true,
						},
						{
							Name:        `restoreJobId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getBackupSchedule`,
				Description: `Returns the cloud backup schedule for the specified cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getDataProtectionSettings`,
				Description: `Returns the Backup Compliance Policy settings with the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backupCompliancePolicy`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-10-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getExportBucket`,
				Description: `Returns one Export Bucket associated with the specified Project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backup/exportBuckets/{exportBucketId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `exportBucketId`,
							Description: `Unique 24-hexadecimal character string that identifies the Export Bucket.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getReplicaSetBackup`,
				Description: `Returns one snapshot from the specified cluster. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServerlessBackup`,
				Description: `Returns one snapshot of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServerlessBackupRestoreJob`,
				Description: `Returns one restore job for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs/{restoreJobId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
						{
							Name:        `restoreJobId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getShardedClusterBackup`,
				Description: `Returns one snapshot of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listBackupExportJobs`,
				Description: `Returns all Cloud Backup Snapshot Export Jobs associated with the specified Atlas cluster. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listBackupRestoreJobs`,
				Description: `Returns all cloud backup restore jobs for one cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the restore jobs you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listExportBuckets`,
				Description: `Returns all Export Buckets associated with the specified Project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backup/exportBuckets`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listReplicaSetBackups`,
				Description: `Returns all snapshots of one cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServerlessBackupRestoreJobs`,
				Description: `Returns all restore jobs for one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServerlessBackups`,
				Description: `Returns all snapshots of one serverless instance from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listShardedClusterBackups`,
				Description: `Returns all snapshots of one sharded cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedClusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `takeSnapshot`,
				Description: `Takes one on-demand snapshot for the specified cluster. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of queued or inProgress exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.


To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateBackupSchedule`,
				Description: `Updates the cloud backup schedule for one cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateDataProtectionSettings`,
				Description: `Updates the Backup Compliance Policy settings for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/backupCompliancePolicy`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `overwriteBackupPolicies`,
							Description: `Flag that indicates whether to overwrite non complying backup policies with the new data protection settings or not.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-10-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateSnapshotRetention`,
				Description: `Changes the expiration date for one cloud backup snapshot for one cluster in the specified project.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Cloud Migration Service`,
		Description: `Manages the Cloud Migration Service. Source organizations, projects, and MongoDB clusters reside on Cloud Manager or Ops Manager. Destination organizations, projects, and MongoDB clusters reside on MongoDB Cloud. Source databases can&#39;t use any authentication except SCRAM-SHA.`,
		Commands: []Command{
			{
				OperationID: `createLinkToken`,
				Description: `Create one link-token that contains all the information required to complete the link. MongoDB Atlas uses the link-token for push live migrations only. Live migration (push) allows you to securely push data from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must have the Organization Owner role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/liveMigrations/linkTokens`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createPushMigration`,
				Description: `Migrate one cluster that Cloud or Ops Manager manages to MongoDB Atlas.


Please make sure to validate your migration before initiating it.


You can use this API endpoint for push live migrations only. Your API Key must have the Organization Owner role to successfully call this resource.


NOTE: Migrating time-series collections is not yet supported on MongoDB 6.0 or higher. Migrations on MongoDB 6.0 or higher will skip any time-series collections on the source cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/liveMigrations`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `cutoverMigration`,
				Description: `Cut over the migrated cluster to MongoDB Atlas. Confirm when the cut over completes. When the cut over completes, MongoDB Atlas completes the live migration process and stops synchronizing with the source cluster. Your API Key must have the Organization Owner role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}/cutover`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `liveMigrationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the migration.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteLinkToken`,
				Description: `Remove one organization link and its associated public API key. MongoDB Atlas uses the link-token for push live migrations only. Live migrations (push) let you securely push data from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must have the Organization Owner role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/liveMigrations/linkTokens`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPushMigration`,
				Description: `Return details of one cluster migration job. Each push live migration job uses one migration host. Your API Key must have the Organization Member role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `liveMigrationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the migration.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getValidationStatus`,
				Description: `Return the status of one migration validation job. Your API Key must have the Organization Owner role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/liveMigrations/validate/{validationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `validationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the validation job.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSourceProjects`,
				Description: `Return all projects that you can migrate to the specified organization.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/liveMigrations/availableProjects`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `validateMigration`,
				Description: `Verifies whether the provided credentials, available disk space, MongoDB versions, and so on meet the requirements of the migration request. If the check passes, the migration can proceed. Your API Key must have the Organization Owner role to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/liveMigrations/validate`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Cloud Provider Access`,
		Description: `Returns, adds, authorizes, and removes AWS IAM roles in Atlas.`,
		Commands: []Command{
			{
				OperationID: `authorizeCloudProviderAccessRole`,
				Description: `Grants access to the specified project for the specified access role. To use this resource, the requesting API Key must have the Project Owner role. This API endpoint is one step in a procedure to create unified access for MongoDB Cloud services. This is not required for GCP service account access.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{roleId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `roleId`,
							Description: `Unique 24-hexadecimal digit string that identifies the role.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createCloudProviderAccessRole`,
				Description: `Creates one access role for the specified cloud provider. Some MongoDB Cloud features use these cloud provider access roles for authentication. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/cloudProviderAccess`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deauthorizeCloudProviderAccessRole`,
				Description: `Revokes access to the specified project for the specified access role. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{cloudProvider}/{roleId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Human-readable label that identifies the cloud provider of the role to deauthorize.`,
							Required:    true,
						},
						{
							Name:        `roleId`,
							Description: `Unique 24-hexadecimal digit string that identifies the role.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCloudProviderAccessRole`,
				Description: `Returns the access role with the specified id and with access to the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{roleId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `roleId`,
							Description: `Unique 24-hexadecimal digit string that identifies the role.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listCloudProviderAccessRoles`,
				Description: `Returns all cloud provider access roles with access to the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/cloudProviderAccess`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Cluster Outage Simulation`,
		Description: `Returns, starts, or ends a cluster outage simulation.`,
		Commands: []Command{
			{
				OperationID: `endOutageSimulation`,
				Description: `Ends a cluster outage simulation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that is undergoing outage simulation.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getOutageSimulation`,
				Description: `Returns one outage simulation for one cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that is undergoing outage simulation.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `startOutageSimulation`,
				Description: `Starts a cluster outage simulation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to undergo an outage simulation.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Clusters`,
		Description: `Returns, adds, edits, and removes database deployments. Changes to cluster configurations can affect costs. This resource requires your Project ID.`,
		Commands: []Command{
			{
				OperationID: `createCluster`,
				Description: `Creates one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can create clusters with asymmetrically-sized shards. Each project supports up to 25 database deployments. To use this resource, the requesting API Key must have the Project Owner role. This feature is not available for serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-10-23`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteCluster`,
				Description: `Removes one cluster from the specified project. The cluster must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role. This feature is not available for serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `retainBackups`,
							Description: `Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCluster`,
				Description: `Returns the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. The response includes clusters with asymmetrically-sized shards. To use this resource, the requesting API Key must have the Project Read Only role. This feature is not available for serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getClusterAdvancedConfiguration`,
				Description: `Returns the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. This feature isn&#39;t available for M0 free clusters, M2 and M5 shared-tier clusters, or serverless clusters. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/processArgs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getClusterStatus`,
				Description: `Returns the status of all changes that you made to the specified cluster in the specified project. Use this resource to check the progress MongoDB Cloud has made in processing your changes. The response does not include the deployment of new dedicated clusters. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/status`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getSampleDatasetLoadStatus`,
				Description: `Checks the progress of loading the sample dataset into one cluster. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{sampleDatasetId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `sampleDatasetId`,
							Description: `Unique 24-hexadecimal digit string that identifies the loaded sample dataset.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `grantMongoDBEmployeeAccess`,
				Description: `Grants MongoDB employee cluster access for the given duration and at the specified level for one cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:grantMongoDBEmployeeAccess`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listCloudProviderRegions`,
				Description: `Returns the list of regions available for the specified cloud provider at the specified tier. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/provider/regions`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `providers`,
							Description: `Cloud providers whose regions to retrieve. When you specify multiple providers, the response can return only tiers and regions that support multi-cloud clusters.`,
							Required:    false,
						},
						{
							Name:        `tier`,
							Description: `Cluster tier for which to retrieve the regions.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listClusters`,
				Description: `Returns the details for all clusters in the specific project to which you have access. Clusters contain a group of hosts that maintain the same data set. The response includes clusters with asymmetrically-sized shards. To use this resource, the requesting API Key must have the Project Read Only role. This feature is not  available for serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeDeletedWithRetainedBackups`,
							Description: `Flag that indicates whether to return Clusters with retain backups.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listClustersForAllProjects`,
				Description: `Returns the details for all clusters in all projects to which you have access. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To use this resource, the requesting API Key can have any cluster-level role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/clusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `loadSampleDataset`,
				Description: `Requests loading the MongoDB sample dataset into the specified cluster. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the cluster into which you load the sample dataset.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `pinFeatureCompatibilityVersion`,
				Description: `Pins the Feature Compatibility Version (FCV) to the current MongoDB version and sets the pin expiration date. If an FCV pin already exists for the cluster, calling this method will only update the expiration date of the existing pin and will not repin the FCV.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:pinFeatureCompatibilityVersion`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `revokeMongoDBEmployeeAccess`,
				Description: `Revokes a previously granted MongoDB employee cluster access.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:revokeMongoDBEmployeeAccess`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `testFailover`,
				Description: `Starts a failover test for the specified cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. A failover test checks how MongoDB Cloud handles the failure of the cluster&#39;s primary node. During the test, MongoDB Cloud shuts down the primary node and elects a new primary. To use this resource, the requesting API Key must have the Project Cluster Manager role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restartPrimaries`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `unpinFeatureCompatibilityVersion`,
				Description: `Unpins the current fixed Feature Compatibility Version (FCV). This feature is not available for clusters on rapid release.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:unpinFeatureCompatibilityVersion`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateCluster`,
				Description: `Updates the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can update clusters with asymmetrically-sized shards. To update a cluster&#39;s termination protection, the requesting API Key must have the Project Owner role. For all other updates, the requesting API Key must have the Project Cluster Manager role. You can&#39;t modify a paused cluster (paused : true). You must call this endpoint to set paused : false. After this endpoint responds with paused : false, you can call it again with the changes you want to make to the cluster. This feature is not available for serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-10-23`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateClusterAdvancedConfiguration`,
				Description: `Updates the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. To use this resource, the requesting API Key must have the Project Cluster Manager role. This feature isn&#39;t available for M0 free clusters, M2 and M5 shared-tier clusters, or serverless clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/processArgs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `upgradeSharedCluster`,
				Description: `Upgrades a shared-tier cluster in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role. Each project supports up to 25 clusters.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/tenantUpgrade`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `upgradeSharedClusterToServerless`,
				Description: `Upgrades a shared-tier cluster to a serverless instance in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/tenantUpgradeToServerless`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Collection Level Metrics`,
		Description: `Returns, adds, and edits pinned namespaces for the specified cluster or process. Also returns collection level latency metric data.`,
		Commands: []Command{
			{
				OperationID: `getCollStatsLatencyNamespaceClusterMeasurements`,
				Description: `Get a list of the Coll Stats Latency cluster-level measurements for the given namespace.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/{databaseName}/{collectionName}/collStats/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `metrics`,
							Description: `List that contains the metrics that you want to retrieve for the associated data series. If you don&#39;t set this parameter, this resource returns data series for all Coll Stats Latency metrics.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to retrieve metrics for.`,
							Required:    true,
						},
						{
							Name:        `clusterView`,
							Description: `Human-readable label that identifies the cluster topology to retrieve metrics for.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Human-readable label that identifies the collection.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCollStatsLatencyNamespaceHostMeasurements`,
				Description: `Get a list of the Coll Stats Latency process-level measurements for the given namespace`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/{databaseName}/{collectionName}/collStats/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `metrics`,
							Description: `List that contains the metrics that you want to retrieve for the associated data series. If you don&#39;t set this parameter, this resource returns data series for all Coll Stats Latency metrics.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Human-readable label that identifies the collection.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCollStatsLatencyNamespaceMetrics`,
				Description: `Returns all available Coll Stats Latency metric names and their respective units for the specified project at the time of request.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/collStats/metrics`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCollStatsLatencyNamespacesForCluster`,
				Description: `Return the subset of namespaces from the given cluster sorted by highest total execution time (descending) within the given time window.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/collStats/namespaces`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to pin namespaces to.`,
							Required:    true,
						},
						{
							Name:        `clusterView`,
							Description: `Human-readable label that identifies the cluster topology to retrieve metrics for.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCollStatsLatencyNamespacesForHost`,
				Description: `Return the subset of namespaces from the given process ranked by highest total execution time (descending) within the given time window.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/collStats/namespaces`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPinnedNamespaces`,
				Description: `Returns a list of given cluster&#39;s pinned namespaces, a set of namespaces manually selected by users to collect query latency metrics on.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to retrieve pinned namespaces for.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `pinNamespacesPatch`,
				Description: `Add provided list of namespaces to existing pinned namespaces list for collection-level latency metrics collection for the given Group and Cluster`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to pin namespaces to.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-11-15`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
							`json`,
						},
					},
				},
			},
			{
				OperationID: `pinNamespacesPut`,
				Description: `Pin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster. This initializes a pinned namespaces list or replaces any existing pinned namespaces list for the Group and Cluster.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to pin namespaces to.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-11-15`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
							`json`,
						},
					},
				},
			},
			{
				OperationID: `unpinNamespaces`,
				Description: `Unpin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/unpin`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster to unpin namespaces from.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-11-15`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Custom Database Roles`,
		Description: `Returns, adds, edits, and removes custom database user privilege roles. Use custom roles to specify custom sets of actions that the MongoDB Cloud built-in roles can&#39;t describe. You define custom roles at the project level, for all clusters in the project. This resource supports a subset of MongoDB privilege actions. You can create a subset of custom role actions. To create a wider list of custom role actions, use the MongoDB Cloud user interface. Custom roles must include actions that all project&#39;s clusters support, and that are compatible with each MongoDB version that your project&#39;s clusters use. For example, if your project has MongoDB 4.2 clusters, you can&#39;t create custom roles that use actions introduced in MongoDB 4.4.`,
		Commands: []Command{
			{
				OperationID: `createCustomDatabaseRole`,
				Description: `Creates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/customDBRoles/roles`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteCustomDatabaseRole`,
				Description: `Removes one custom role from the specified project. You can&#39;t remove a custom role that would leave one or more child roles with no parent roles or actions. You also can&#39;t remove a custom role that would leave one or more database users without roles. To use this resource, the requesting API Key must have the Project Atlas Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `roleName`,
							Description: `Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getCustomDatabaseRole`,
				Description: `Returns one custom role for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `roleName`,
							Description: `Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listCustomDatabaseRoles`,
				Description: `Returns all custom roles for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/customDBRoles/roles`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateCustomDatabaseRole`,
				Description: `Updates one custom role in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `roleName`,
							Description: `Human-readable label that identifies the role for the request. This name must beunique for this custom role in this project.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Data Federation`,
		Description: `Returns, adds, edits, and removes Federated Database Instances. This resource requires your project ID. Changes to federated database instance configurations can affect costs.`,
		Commands: []Command{
			{
				OperationID: `createDataFederationPrivateEndpoint`,
				Description: `Adds one private endpoint for Federated Database Instances and Online Archives to the specified projects. If the endpoint ID already exists and the associated comment is unchanged, Atlas Data Federation makes no change to the endpoint ID list. If the endpoint ID already exists and the associated comment is changed, Atlas Data Federation updates the comment value only in the endpoint ID list. If the endpoint ID doesn&#39;t exist, Atlas Data Federation appends the new endpoint to the list of endpoints in the endpoint ID list. Each region has an associated service name for the various endpoints in each region.


us-east-1 is com.amazonaws.vpce.us-east-1.vpce-svc-00e311695874992b4.


us-west-1 is com.amazonaws.vpce.us-west-2.vpce-svc-09d86b19e59d1b4bb.


eu-west-1 is com.amazonaws.vpce.eu-west-1.vpce-svc-0824460b72e1a420e.


eu-west-2 is com.amazonaws.vpce.eu-west-2.vpce-svc-052f1840aa0c4f1f9.


eu-central-1 is com.amazonaws.vpce.eu-central-1.vpce-svc-0ac8ce91871138c0d.


sa-east-1 is com.amazonaws.vpce.sa-east-1.vpce-svc-0b56e75e8cdf50044.


ap-southeast-2 is com.amazonaws.vpce.ap-southeast-2.vpce-svc-036f1de74d761706e.


ap-south-1 is com.amazonaws.vpce.ap-south-1.vpce-svc-03eb8a541f96d356d.


To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createFederatedDatabase`,
				Description: `Creates one federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `skipRoleValidation`,
							Description: `Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createOneDataFederationQueryLimit`,
				Description: `Creates or updates one query limit for one federated database instance. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance to which the query limit applies.`,
							Required:    true,
						},
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this data federation instance limit.


| Limit Name | Description | Default |
| --- | --- | --- |
| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |
| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |
| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |
| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteDataFederationPrivateEndpoint`,
				Description: `Removes one private endpoint for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 22-character alphanumeric string that identifies the private endpoint to remove. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteFederatedDatabase`,
				Description: `Removes one federated database instance from the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance to remove.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteOneDataFederationInstanceQueryLimit`,
				Description: `Deletes one query limit for one federated database instance. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance to which the query limit applies.`,
							Required:    true,
						},
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this data federation instance limit.


| Limit Name | Description | Default |
| --- | --- | --- |
| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |
| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |
| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |
| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `downloadFederatedDatabaseQueryLogs`,
				Description: `Downloads the query logs for the specified federated database instance. To use this resource, the requesting API Key must have the Project Owner or Project Data Access Read Write roles. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: &#34;Accept: application/vnd.atlas.YYYY-MM-DD&#43;gzip&#34;.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/queryLogs.gz`,
					QueryParameters: []Parameter{
						{
							Name:        `endDate`,
							Description: `Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
						{
							Name:        `startDate`,
							Description: `Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance for which you want to download query logs.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`gzip`,
						},
					},
				},
			},
			{
				OperationID: `getDataFederationPrivateEndpoint`,
				Description: `Returns the specified private endpoint for Federated Database Instances or Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 22-character alphanumeric string that identifies the private endpoint to return. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getFederatedDatabase`,
				Description: `Returns the details of one federated database instance within the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the Federated Database to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDataFederationPrivateEndpoints`,
				Description: `Returns all private endpoints for Federated Database Instances and Online Archives in the specified project. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listFederatedDatabases`,
				Description: `Returns the details of all federated database instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only or higher role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `type`,
							Description: `Type of Federated Database Instances to return.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `returnFederatedDatabaseQueryLimit`,
				Description: `Returns the details of one query limit for the specified federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance to which the query limit applies.`,
							Required:    true,
						},
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this data federation instance limit.


| Limit Name | Description | Default |
| --- | --- | --- |
| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |
| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |
| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |
| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `returnFederatedDatabaseQueryLimits`,
				Description: `Returns query limits for a federated databases instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance for which you want to retrieve query limits.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateFederatedDatabase`,
				Description: `Updates the details of one federated database instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or higher role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `skipRoleValidation`,
							Description: `Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the federated database instance to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Data Lake Pipelines`,
		Description: `Returns, edits, and removes Atlas Data Lake Pipelines and associated runs.`,
		Commands: []Command{
			{
				OperationID: `createPipeline`,
				Description: `Creates one Data Lake Pipeline.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePipeline`,
				Description: `Removes one Data Lake Pipeline.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePipelineRunDataset`,
				Description: `Deletes dataset that Atlas generated during the specified pipeline run.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs/{pipelineRunId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
						{
							Name:        `pipelineRunId`,
							Description: `Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPipeline`,
				Description: `Returns the details of one Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPipelineRun`,
				Description: `Returns the details of one Data Lake Pipeline run within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs/{pipelineRunId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
						{
							Name:        `pipelineRunId`,
							Description: `Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPipelineRuns`,
				Description: `Returns a list of past Data Lake Pipeline runs. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `createdBefore`,
							Description: `If specified, Atlas returns only Data Lake Pipeline runs initiated before this time and date.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPipelineSchedules`,
				Description: `Returns a list of backup schedule policy items that you can use as a Data Lake Pipeline source. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSchedules`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPipelineSnapshots`,
				Description: `Returns a list of backup snapshots that you can use to trigger an on demand pipeline run. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSnapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `completedAfter`,
							Description: `Date and time after which MongoDB Cloud created the snapshot. If specified, MongoDB Cloud returns available backup snapshots created after this time and date only. This parameter expresses its value in the ISO 8601 timestamp format in UTC.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPipelines`,
				Description: `Returns a list of Data Lake Pipelines. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `pausePipeline`,
				Description: `Pauses ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/pause`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `resumePipeline`,
				Description: `Resumes ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/resume`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `triggerSnapshotIngestion`,
				Description: `Triggers a Data Lake Pipeline ingestion of a specified snapshot.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/trigger`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updatePipeline`,
				Description: `Updates one Data Lake Pipeline.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `pipelineName`,
							Description: `Human-readable label that identifies the Data Lake Pipeline.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Database Users`,
		Description: `Returns, adds, edits, and removes database users.`,
		Commands: []Command{
			{
				OperationID: `createDatabaseUser`,
				Description: `Creates one database user in the specified project. This MongoDB Cloud supports a maximum of 100 database users per project. If you require more than 100 database users on a project, contact Support. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteDatabaseUser`,
				Description: `Removes one database user from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `databaseName`,
							Description: `The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be $external. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be admin.`,
							Required:    true,
						},
						{
							Name: `username`,
							Description: `Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:


| Authentication Method | Parameter Needed | Parameter Value | username Format |
|---|---|---|---|
| AWS IAM | awsIAMType | ROLE | ARN |
| AWS IAM | awsIAMType | USER | ARN |
| x.509 | x509Type | CUSTOMER | RFC 2253 Distinguished Name |
| x.509 | x509Type | MANAGED | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | USER | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | GROUP | RFC 2253 Distinguished Name |
| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP group name |
| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP user name |
| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getDatabaseUser`,
				Description: `Returns one database user that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `databaseName`,
							Description: `The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be $external. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be admin.`,
							Required:    true,
						},
						{
							Name: `username`,
							Description: `Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:


| Authentication Method | Parameter Needed | Parameter Value | username Format |
|---|---|---|---|
| AWS IAM | awsIAMType | ROLE | ARN |
| AWS IAM | awsIAMType | USER | ARN |
| x.509 | x509Type | CUSTOMER | RFC 2253 Distinguished Name |
| x.509 | x509Type | MANAGED | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | USER | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | GROUP | RFC 2253 Distinguished Name |
| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP group name |
| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP user name |
| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDatabaseUsers`,
				Description: `Returns all database users that belong to the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateDatabaseUser`,
				Description: `Updates one database user that belongs to the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `databaseName`,
							Description: `The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be $external. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be admin.`,
							Required:    true,
						},
						{
							Name: `username`,
							Description: `Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:


| Authentication Method | Parameter Needed | Parameter Value | username Format |
|---|---|---|---|
| AWS IAM | awsIAMType | ROLE | ARN |
| AWS IAM | awsIAMType | USER | ARN |
| x.509 | x509Type | CUSTOMER | RFC 2253 Distinguished Name |
| x.509 | x509Type | MANAGED | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | USER | RFC 2253 Distinguished Name |
| LDAP | ldapAuthType | GROUP | RFC 2253 Distinguished Name |
| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP group name |
| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a &#39;/&#39;, followed by the IdP user name |
| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Encryption at Rest using Customer Key Management`,
		Description: `Returns and edits the Encryption at Rest using Customer Key Management configuration. MongoDB Cloud encrypts all storage whether or not you use your own key management.`,
		Commands: []Command{
			{
				OperationID: `createEncryptionAtRestPrivateEndpoint`,
				Description: `Creates a private endpoint in the specified region for encryption at rest using customer key management.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Human-readable label that identifies the cloud provider for the private endpoint to create.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getEncryptionAtRest`,
				Description: `Returns the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don&#39;t use your own key management. This resource requires the requesting API Key to have the Project Owner role.


LIMITED TO M10 OR GREATER: MongoDB Cloud limits this feature to dedicated cluster tiers of M10 and greater.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getEncryptionAtRestPrivateEndpoint`,
				Description: `Returns one private endpoint, identified by its ID, for encryption at rest using Customer Key Management.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Human-readable label that identifies the cloud provider of the private endpoint.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getEncryptionAtRestPrivateEndpointsForCloudProvider`,
				Description: `Returns the private endpoints of the specified cloud provider for encryption at rest using customer key management.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Human-readable label that identifies the cloud provider for the private endpoints to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `requestEncryptionAtRestPrivateEndpointDeletion`,
				Description: `Deletes one private endpoint, identified by its ID, for encryption at rest using Customer Key Management.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Human-readable label that identifies the cloud provider of the private endpoint to delete.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateEncryptionAtRest`,
				Description: `Updates the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don&#39;t use your own key management. This resource requires the requesting API Key to have the Project Owner role. This feature isn&#39;t available for M0 free clusters, M2, M5, or serverless clusters.


After you configure at least one Encryption at Rest using a Customer Key Management provider for the MongoDB Cloud project, Project Owners can enable Encryption at Rest using Customer Key Management for each MongoDB Cloud cluster for which they require encryption. The Encryption at Rest using Customer Key Management provider doesn&#39;t have to match the cluster cloud service provider. MongoDB Cloud doesn&#39;t automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest using Customer Key Management provider&#39;s documentation and guidance for best practices on key rotation. MongoDB Cloud automatically creates a 90-day key rotation alert when you configure Encryption at Rest using Customer Key Management using your Key Management in an MongoDB Cloud project. MongoDB Cloud encrypts all storage whether or not you use your own key management.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/encryptionAtRest`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Events`,
		Description: `Returns events. This collection remains under revision and may change.`,
		Commands: []Command{
			{
				OperationID: `getOrganizationEvent`,
				Description: `Returns one event for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/events/{eventId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeRaw`,
							Description: `Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `eventId`,
							Description: `Unique 24-hexadecimal digit string that identifies the event that you want to return. Use the /events endpoint to retrieve all events to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectEvent`,
				Description: `Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/events/{eventId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeRaw`,
							Description: `Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `eventId`,
							Description: `Unique 24-hexadecimal digit string that identifies the event that you want to return. Use the /events endpoint to retrieve all events to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listEventTypes`,
				Description: `Returns a list of all event types, along with a description and additional metadata about each event.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/eventTypes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizationEvents`,
				Description: `Returns all events for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Organization Member role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/events`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name: `eventType`,
							Description: `Category of incident recorded at this moment in time.


IMPORTANT: The complete list of event type values changes frequently.`,
							Required: false,
						},
						{
							Name:        `includeRaw`,
							Description: `Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.`,
							Required:    false,
						},
						{
							Name:        `maxDate`,
							Description: `Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.`,
							Required:    false,
						},
						{
							Name:        `minDate`,
							Description: `Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectEvents`,
				Description: `Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting API Key must have the Project Read Only role.


This resource remains under revision and may change.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/events`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `clusterNames`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    false,
						},
						{
							Name: `eventType`,
							Description: `Category of incident recorded at this moment in time.


IMPORTANT: The complete list of event type values changes frequently.`,
							Required: false,
						},
						{
							Name: `excludedEventType`,
							Description: `Category of event that you would like to exclude from query results, such as CLUSTER_CREATED


IMPORTANT: Event type names change frequently. Verify that you specify the event type correctly by checking the complete list of event types.`,
							Required: false,
						},
						{
							Name:        `includeRaw`,
							Description: `Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.`,
							Required:    false,
						},
						{
							Name:        `maxDate`,
							Description: `Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.`,
							Required:    false,
						},
						{
							Name:        `minDate`,
							Description: `Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Federated Authentication`,
		Description: `Returns, adds, edits, and removes federation-related features such as role mappings and connected organization configurations.`,
		Commands: []Command{
			{
				OperationID: `createIdentityProvider`,
				Description: `Creates one identity provider within the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.


Note: This resource only supports the creation of OIDC identity providers.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-11-15`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createRoleMapping`,
				Description: `Adds one role mapping to the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteFederationApp`,
				Description: `Deletes the federation settings instance and all associated data, including identity providers and domains. To use this resource, the requesting API Key must have the Organization Owner role in the last remaining connected organization. Note: requests to this resource will fail if there is more than one connected organization in the federation.`,
				RequestParameters: RequestParameters{
					URL:             `/api/atlas/v2/federationSettings/{federationSettingsId}`,
					QueryParameters: []Parameter{},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteIdentityProvider`,
				Description: `Deletes one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.


Note: Requests to this resource will fail if the identity provider has any connected organizations. Before deleting an identity provider, disconnect all organizations and confirm that no organization in your account uses this identity provider. To learn more, see Manage Organization Mapping for Federated Authentication.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `identityProviderId`,
							Description: `Unique 24-hexadecimal digit string that identifies the identity provider to connect.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteRoleMapping`,
				Description: `Removes one role mapping in the specified organization from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `id`,
							Description: `Unique 24-hexadecimal digit string that identifies the role mapping that you want to remove.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getConnectedOrgConfig`,
				Description: `Returns the specified connected org config from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in the connected org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the connected organization configuration to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getFederationSettings`,
				Description: `Returns information about the federation settings for the specified organization. To use this resource, the requesting API Key must have the Organization Owner role in the connected org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/federationSettings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getIdentityProvider`,
				Description: `Returns one identity provider in the specified federation by the identity provider&#39;s id. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `identityProviderId`,
							Description: `Unique string that identifies the identity provider to connect. If using an API version before 11-15-2023, use the legacy 20-hexadecimal digit id. This id can be found within the Federation Management Console &gt; Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider. For all other versions, use the 24-hexadecimal digit id.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getIdentityProviderMetadata`,
				Description: `Returns the metadata of one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.`,
				RequestParameters: RequestParameters{
					URL:             `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/metadata.xml`,
					QueryParameters: []Parameter{},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `identityProviderId`,
							Description: `Legacy 20-hexadecimal digit string that identifies the identity provider. This id can be found within the Federation Management Console &gt; Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getRoleMapping`,
				Description: `Returns one role mapping from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `id`,
							Description: `Unique 24-hexadecimal digit string that identifies the role mapping that you want to return.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listConnectedOrgConfigs`,
				Description: `Returns all connected org configs in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected orgs.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listIdentityProviders`,
				Description: `Returns all identity providers with the provided protocol and type in the specified federation. If no protocol is specified, only SAML identity providers will be returned. If no idpType is specified, only WORKFORCE identity providers will be returned. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `protocol`,
							Description: `The protocols of the target identity providers.`,
							Required:    false,
						},
						{
							Name:        `idpType`,
							Description: `The types of the target identity providers.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listRoleMappings`,
				Description: `Returns all role mappings from the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeConnectedOrgConfig`,
				Description: `Removes one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role. Note: This request fails if only one connected organization exists in the federation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the connected organization configuration to remove.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `revokeJwksFromIdentityProvider`,
				Description: `Revokes the JWKS tokens from the requested OIDC identity provider. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.


Note: Revoking your JWKS tokens immediately refreshes your IdP public keys from all your Atlas clusters, invalidating previously signed access tokens and logging out all users. You may need to restart your MongoDB clients. All organizations connected to the identity provider will be affected. To learn more, see Configure OIDC Authorization.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/jwks`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `identityProviderId`,
							Description: `Unique 24-hexadecimal digit string that identifies the identity provider to connect.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateConnectedOrgConfig`,
				Description: `Updates one connected organization configuration from the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.


Note If the organization configuration has no associated identity provider, you can&#39;t use this resource to update role mappings or post authorization role grants.


Note: The domainRestrictionEnabled field defaults to false if not provided in the request.


Note: If the identityProviderId field is not provided, you will disconnect the organization and the identity provider.


Note: Currently connected data access identity providers missing from the dataAccessIdentityProviderIds field will be disconnected.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the connected organization configuration to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateIdentityProvider`,
				Description: `Updates one identity provider in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role in one of the connected organizations.


Note: Changing authorization types and/or updating authorization claims can prevent current users and/or groups from accessing the database.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `identityProviderId`,
							Description: `Unique string that identifies the identity provider to connect. If using an API version before 11-15-2023, use the legacy 20-hexadecimal digit id. This id can be found within the Federation Management Console &gt; Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider. For all other versions, use the 24-hexadecimal digit id.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-11-15`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateRoleMapping`,
				Description: `Updates one role mapping in the specified organization in the specified federation. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `federationSettingsId`,
							Description: `Unique 24-hexadecimal digit string that identifies your federation.`,
							Required:    true,
						},
						{
							Name:        `id`,
							Description: `Unique 24-hexadecimal digit string that identifies the role mapping that you want to update.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Flex Clusters`,
		Description: ``,
		Commands: []Command{
			{
				OperationID: `createFlexcluster`,
				Description: `Creates one flex cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-11-13`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteFlexCluster`,
				Description: `Removes one flex cluster from the specified project. The flex cluster must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getFlexCluster`,
				Description: `Returns details for one flex cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listFlexClusters`,
				Description: `Returns details for all flex clusters in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateFlexCluster`,
				Description: `Updates one flex cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-11-13`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `upgradeFlexCluster`,
				Description: `Upgrades a flex cluster in the specified project. To use this resource, the requesting API key must have the Project Cluster Manager role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters:tenantUpgrade`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-11-13`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Flex Restore Jobs`,
		Description: ``,
		Commands: []Command{
			{
				OperationID: `createFlexBackupRestoreJob`,
				Description: `Restores one snapshot of one flex cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster whose snapshot you want to restore.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-11-13`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getFlexBackupRestoreJob`,
				Description: `Returns one restore job for one flex cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/restoreJobs/{restoreJobId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
						{
							Name:        `restoreJobId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listFlexBackupRestoreJobs`,
				Description: `Returns all restore jobs for one flex cluster from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Flex Snapshots`,
		Description: ``,
		Commands: []Command{
			{
				OperationID: `downloadFlexBackup`,
				Description: `Requests one snapshot for the specified flex cluster. This resource returns a snapshotURL that you can use to download the snapshot. This snapshotURL remains active for four hours after you make the request. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/download`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-11-13`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getFlexBackup`,
				Description: `Returns one snapshot of one flex cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listFlexBackups`,
				Description: `Returns all snapshots of one flex cluster from the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the flex cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-11-13`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name: `Global Clusters`,
		Description: `Returns, adds, and removes Global Cluster managed namespaces and custom zone mappings. Each collection in a Global Cluster is associated with a managed namespace. When you create a managed namespace for a Global Cluster, MongoDB Cloud creates an empty collection for that namespace. Creating a managed namespace doesn&#39;t populate a collection with data. Similarly, deleting a managed namespace doesn&#39;t delete the associated collection.
MongoDB Cloud shards the empty collection using the required location field and a custom shard key. For example, if your custom shard key is city, the compound shard key is location, city. Each Global Cluster is also associated with one or more Global Writes Zones. When a user creates a Global Cluster, MongoDB Cloud automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. For example, a use case might require mapping a location code to a geographically distant zone. Administrators can manage custom zone mappings with the APIs below and the Global Cluster Configuration pane when you create or modify your Global Cluster.`,
		Commands: []Command{
			{
				OperationID: `createCustomZoneMapping`,
				Description: `Creates one custom zone mapping for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createManagedNamespace`,
				Description: `Creates one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAllCustomZoneMappings`,
				Description: `Removes all custom zone mappings for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. Removing the custom zone mappings restores the default mapping. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteManagedNamespace`,
				Description: `Removes one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. Deleting a managed namespace does not remove the associated collection or data. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `db`,
							Description: `Human-readable label that identifies the database that contains the collection.`,
							Required:    false,
						},
						{
							Name:        `collection`,
							Description: `Human-readable label that identifies the collection associated with the managed namespace.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getManagedNamespace`,
				Description: `Returns one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies this cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Invoices`,
		Description: `Returns invoices.`,
		Commands: []Command{
			{
				OperationID: `createCostExplorerQueryProcess`,
				Description: `Creates a query process within the Cost Explorer for the given parameters. A token is returned that can be used to poll the status of the query and eventually retrieve the results.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createCostExplorerQueryProcess_1`,
				Description: `Returns the usage details for a Cost Explorer query, if the query is finished and the data is ready to be viewed. If the data is not ready, a &#39;processing&#39; response willindicate that another request should be sent later to view the data.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage/{token}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `token`,
							Description: `Unique 64 digit string that identifies the Cost Explorer query.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`csv`,
							`json`,
						},
					},
				},
			},
			{
				OperationID: `downloadInvoiceCSV`,
				Description: `Returns one invoice that MongoDB issued to the specified organization in CSV format. A unique 24-hexadecimal digit string identifies the invoice. To use this resource, the requesting API Key have at least the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner Role.
To compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment&#39;s owed amount - use formula totalBilledCents * unitPrice &#43; salesTax - startingBalanceCents.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/csv`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invoiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`csv`,
						},
					},
				},
			},
			{
				OperationID: `getInvoice`,
				Description: `Returns one invoice that MongoDB issued to the specified organization. A unique 24-hexadecimal digit string identifies the invoice. You can choose to receive this invoice in JSON or CSV format. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner role.
To compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment&#39;s owed amount - use formula totalBilledCents * unitPrice &#43; salesTax - startingBalanceCents.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invoiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`csv`,
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listInvoices`,
				Description: `Returns all invoices that MongoDB issued to the specified organization. This list includes all invoices regardless of invoice status. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner role.
To compute the total owed amount of the invoices - sum up total owed of each invoice. It could be computed as a sum of owed amount of each payment included into the invoice. To compute payment&#39;s owed amount - use formula totalBilledCents * unitPrice &#43; salesTax - startingBalanceCents.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invoices`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `viewLinkedInvoices`,
							Description: `Flag that indicates whether to return linked invoices in the linkedInvoices field.`,
							Required:    false,
						},
						{
							Name:        `statusNames`,
							Description: `Statuses of the invoice to be retrieved. Omit to return invoices of all statuses.`,
							Required:    false,
						},
						{
							Name:        `fromDate`,
							Description: `Retrieve the invoices the startDates of which are greater than or equal to the fromDate. If omit, the invoices return will go back to earliest startDate.`,
							Required:    false,
						},
						{
							Name:        `toDate`,
							Description: `Retrieve the invoices the endDates of which are smaller than or equal to the toDate. If omit, the invoices return will go further to latest endDate.`,
							Required:    false,
						},
						{
							Name:        `sortBy`,
							Description: `Field used to sort the returned invoices by. Use in combination with orderBy parameter to control the order of the result.`,
							Required:    false,
						},
						{
							Name:        `orderBy`,
							Description: `Field used to order the returned invoices by. Use in combination of sortBy parameter to control the order of the result.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPendingInvoices`,
				Description: `Returns all invoices accruing charges for the current billing cycle for the specified organization. To use this resource, the requesting API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner Role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invoices/pending`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `queryLineItemsFromSingleInvoice`,
				Description: `Query the lineItems of the specified invoice and return the result JSON. A unique 24-hexadecimal digit string identifies the invoice.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/lineItems:search`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invoiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `LDAP Configuration`,
		Description: `Returns, edits, verifies, and removes LDAP configurations. An LDAP configuration defines settings for MongoDB Cloud to connect to your LDAP server over TLS for user authentication and authorization. Your LDAP server must be visible to the internet or connected to your MongoDB Cloud cluster with VPC Peering. Also, your LDAP server must use TLS. You must have the MongoDB Cloud admin user privilege to use these endpoints. Also, to configure user authentication and authorization with LDAPS, your cluster must run MongoDB 3.6 or higher. Groups for which you have configured LDAPS can&#39;t create a cluster using a version of MongoDB 3.6 or lower.`,
		Commands: []Command{
			{
				OperationID: `deleteLDAPConfiguration`,
				Description: `Removes the current LDAP Distinguished Name mapping captured in the userToDNMapping document from the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity/ldap/userToDNMapping`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLDAPConfiguration`,
				Description: `Returns the current LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLDAPConfigurationStatus`,
				Description: `Returns the status of one request to verify one LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify/{requestId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `requestId`,
							Description: `Unique string that identifies the request to verify an LDAP configuration.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `saveLDAPConfiguration`,
				Description: `Edits the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.


Updating this configuration triggers a rolling restart of the database.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `verifyLDAPConfiguration`,
				Description: `Verifies the LDAP configuration for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Legacy Backup`,
		Description: `Manages Legacy Backup snapshots, restore jobs, schedules and checkpoints.`,
		Commands: []Command{
			{
				OperationID: `createLegacyBackupRestoreJob`,
				Description: `Restores one legacy backup for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation. This endpoint doesn&#39;t support creating checkpoint restore jobs for sharded clusters, or creating restore jobs for queryable backup snapshots. If you create an automated restore job by specifying delivery.methodName of AUTOMATED_RESTORE in your request body, MongoDB Cloud removes all existing data on the target cluster prior to the restore.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the snapshot you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteLegacySnapshot`,
				Description: `Removes one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLegacyBackupCheckpoint`,
				Description: `Returns one legacy backup checkpoint for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints/{checkpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `checkpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the checkpoint.`,
							Required:    true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the checkpoints that you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLegacyBackupRestoreJob`,
				Description: `Returns one legacy backup restore job for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.


Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs/{jobId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the snapshot you want to return.`,
							Required:    true,
						},
						{
							Name:        `jobId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLegacySnapshot`,
				Description: `Returns one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getLegacySnapshotSchedule`,
				Description: `Returns the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.


Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshotSchedule`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the snapshot you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listLegacyBackupCheckpoints`,
				Description: `Returns all legacy backup checkpoints for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the checkpoints that you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listLegacyBackupRestoreJobs`,
				Description: `Returns all legacy backup restore jobs for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.


Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation. If you use the BATCH-ID query parameter, you can retrieve all restore jobs in the specified batch. When creating a restore job for a sharded cluster, MongoDB Cloud creates a separate job for each shard, plus another for the config server. Each of those jobs are part of a batch. However, a batch can&#39;t include a restore job for a replica set.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `batchId`,
							Description: `Unique 24-hexadecimal digit string that identifies the batch of restore jobs to return. Timestamp in ISO 8601 date and time format in UTC when creating a restore job for a sharded cluster, Application creates a separate job for each shard, plus another for the config host. Each of these jobs comprise one batch. A restore job for a replica set can&#39;t be part of a batch.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the snapshot you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listLegacySnapshots`,
				Description: `Returns all legacy backup snapshots for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Read Only role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `completed`,
							Description: `Human-readable label that specifies whether to return only completed, incomplete, or all snapshots. By default, MongoDB Cloud only returns completed snapshots.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateLegacySnapshotRetention`,
				Description: `Changes the expiration date for one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateLegacySnapshotSchedule`,
				Description: `Updates the snapshot schedule for one cluster in the specified project. To use this resource, the requesting API Key must have the Project Owner role.


Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshotSchedule`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster with the snapshot you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Maintenance Windows`,
		Description: `Returns, edits, and removes maintenance windows. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. You can defer a scheduled maintenance event for a project up to two times. Deferred maintenance events occur during your preferred maintenance window exactly one week after the previously scheduled date and time.`,
		Commands: []Command{
			{
				OperationID: `deferMaintenanceWindow`,
				Description: `Defers the maintenance window for the specified project. Urgent maintenance activities such as security patches can&#39;t wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can&#39;t change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/maintenanceWindow/defer`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getMaintenanceWindow`,
				Description: `Returns the maintenance window for the specified project. MongoDB Cloud starts those maintenance activities when needed. You can&#39;t change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/maintenanceWindow`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `resetMaintenanceWindow`,
				Description: `Resets the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Owner role. Urgent maintenance activities such as security patches can&#39;t wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can&#39;t change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/maintenanceWindow`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `toggleMaintenanceAutoDefer`,
				Description: `Toggles automatic deferral of the maintenance window for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/maintenanceWindow/autoDefer`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateMaintenanceWindow`,
				Description: `Updates the maintenance window for the specified project. Urgent maintenance activities such as security patches can&#39;t wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can&#39;t change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/maintenanceWindow`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `MongoDB Cloud Users`,
		Description: `Returns, adds, and edits MongoDB Cloud users.`,
		Commands: []Command{
			{
				OperationID: `addOrganizationRole`,
				Description: `Adds one organization level role to the MongoDB Cloud user. You can add a role to an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting API Key must have the Organization Owner role.


Note: This operation is atomic.


Note: This resource cannot be used to add a role to users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}:addRole`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `role`,
							Description: `Organization level role to assign to the MongoDB Cloud user.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user&#39;s userId or verify a user&#39;s status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2025-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `addUserToTeam`,
				Description: `Adds one MongoDB Cloud user to one team. You can add an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting API Key must have the Organization Owner role.


Note: This resource cannot be used to add a user invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}:addUser`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team to add the MongoDB Cloud user to.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2025-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createOrganizationUser`,
				Description: `Invites one new or existing MongoDB Cloud user to join the organization. The invitation to join the organization will be sent to the username provided and must be accepted within 30 days. To use this resource, the requesting API Key must have the Organization Owner role.


Note: If the user does not have an existing MongoDB Cloud account, they will be prompted to finish setting up an account upon accepting the invitation. If the user already has an account, they will still receive an invitation to access the organization.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2025-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createUser`,
				Description: `Creates one MongoDB Cloud user account. A MongoDB Cloud user account grants access to only the MongoDB Cloud application. To grant database access, create a database user. MongoDB Cloud sends an email to the users you specify, inviting them to join the project. Invited users don&#39;t have access to the project until they accept the invitation. Invitations expire after 30 days.


MongoDB Cloud limits MongoDB Cloud user membership to a maximum of 250 MongoDB Cloud users per team. MongoDB Cloud limits MongoDB Cloud user membership to 500 MongoDB Cloud users per project and 500 MongoDB Cloud users per organization, which includes the combined membership of all projects in the organization. MongoDB Cloud raises an error if an operation exceeds these limits. For example, if you have an organization with five projects, and each project has 100 MongoDB Cloud users, and each MongoDB Cloud user belongs to only one project, you can&#39;t add any MongoDB Cloud users to this organization without first removing existing MongoDB Cloud users from the organization.


To use this resource, the requesting API Key can have any role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getOrganizationUser`,
				Description: `Returns information about the specified MongoDB Cloud user within the context of the specified organization. To use this resource, the requesting API Key must have the Organization Read Only role.


Note: This resource can only be used to fetch information about MongoDB Cloud human users. To return information about an API Key, use the Return One Organization API Key endpoint.


Note: This resource does not return information about pending users invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user&#39;s userId or verify a user&#39;s status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2025-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getUser`,
				Description: `Returns the details for one MongoDB Cloud user account with the specified unique identifier for the user. You can&#39;t use this endpoint to return information on an API Key. To return information about an API Key, use the Return One Organization API Key endpoint. You can always retrieve your own user account. If you are the owner of a MongoDB Cloud organization or project, you can also retrieve the user profile for any user with membership in that organization or project. To use this resource, the requesting API Key can have any role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies this user.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getUserByUsername`,
				Description: `Returns the details for one MongoDB Cloud user account with the specified username. You can&#39;t use this endpoint to return information about an API Key. To return information about an API Key, use the Return One Organization API Key endpoint. To use this resource, the requesting API Key can have any role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/users/byName/{userName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `userName`,
							Description: `Email address that belongs to the MongoDB Cloud user account. You cannot modify this address after creating the user.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeOrganizationRole`,
				Description: `Removes one organization level role from the MongoDB Cloud user. You can remove a role from an active user or a user that has not yet accepted the invitation to join the organization. To replace a user&#39;s only role, add the new role before removing the old role. A user must have at least one role at all times. To use this resource, the requesting API Key must have the Organization Owner role.


Note: This operation is atomic.


Note: This resource cannot be used to remove a role from users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}:removeRole`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `role`,
							Description: `Organization level role to remove from the MongoDB Cloud user.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user&#39;s userId or verify a user&#39;s status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2025-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOrganizationUser`,
				Description: `Updates one MongoDB Cloud user in the specified organization. You can update an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting API Key must have the Organization Owner role.


Note: Only include the fields you wish to update in the request body. Supplying a field with an empty value will reset that field on the user.


Note: This resource cannot be used to update pending users invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user&#39;s userId or verify a user&#39;s status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2025-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Monitoring and Logs`,
		Description: `Returns database deployment monitoring and logging data.`,
		Commands: []Command{
			{
				OperationID: `getAtlasProcess`,
				Description: `Returns the processes for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getDatabase`,
				Description: `Returns one database running on the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database that the specified MongoDB process serves.`,
							Required:    true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getDatabaseMeasurements`,
				Description: `Returns the measurements of one database for the specified host for the specified project. Returns the database&#39;s on-disk storage space based on the MongoDB dbStats command output. To calculate some metric series, Atlas takes the rate between every two adjacent points. For these metric series, the first data point has a null value because Atlas can&#39;t calculate a rate for the first data point given the query time range. Atlas retrieves database metrics every 20 minutes but reduces frequency when necessary to optimize database performance. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `m`,
							Description: `One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for m, repeat the m parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.`,
							Required:    false,
						},
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database that the specified MongoDB process serves.`,
							Required:    true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getDiskMeasurements`,
				Description: `Returns the measurements of one disk or partition for the specified host for the specified project. Returned value can be one of the following:



Throughput of I/O operations for the disk partition used for the MongoDB process


Percentage of time during which requests the partition issued and serviced


Latency per operation type of the disk partition used for the MongoDB process


Amount of free and used disk space on the disk partition used for the MongoDB process



To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `m`,
							Description: `One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for m, repeat the m parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.`,
							Required:    false,
						},
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `partitionName`,
							Description: `Human-readable label of the disk or partition to which the measurements apply.`,
							Required:    true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getHostLogs`,
				Description: `Returns a compressed (.gz) log file that contains a range of log messages for the specified host for the specified project. MongoDB updates process and audit logs from the cluster backend infrastructure every five minutes. Logs are stored in chunks approximately five minutes in length, but this duration may vary. If you poll the API for log files, we recommend polling every five minutes even though consecutive polls could contain some overlapping logs. This feature isn&#39;t available for M0 free clusters, M2, M5, or serverless clusters. To use this resource, the requesting API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: &#34;Accept: application/vnd.atlas.YYYY-MM-DD&#43;gzip&#34;.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `endDate`,
							Description: `Specifies the date and time for the ending point of the range of log messages to retrieve, in the number of seconds that have elapsed since the UNIX epoch. This value will default to 24 hours after the start date. If the start date is also unspecified, the value will default to the time of the request.`,
							Required:    false,
						},
						{
							Name:        `startDate`,
							Description: `Specifies the date and time for the starting point of the range of log messages to retrieve, in the number of seconds that have elapsed since the UNIX epoch. This value will default to 24 hours prior to the end date. If the end date is also unspecified, the value will default to 24 hours prior to the time of the request.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `hostName`,
							Description: `Human-readable label that identifies the host that stores the log files that you want to download.`,
							Required:    true,
						},
						{
							Name:        `logName`,
							Description: `Human-readable label that identifies the log file that you want to return. To return audit logs, enable Database Auditing for the specified project.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`gzip`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`gzip`,
						},
					},
				},
			},
			{
				OperationID: `getHostMeasurements`,
				Description: `Returns disk, partition, or host measurements per process for the specified host for the specified project. Returned value can be one of the following:



Throughput of I/O operations for the disk partition used for the MongoDB process


Percentage of time during which requests the partition issued and serviced


Latency per operation type of the disk partition used for the MongoDB process


Amount of free and used disk space on the disk partition used for the MongoDB process


Measurements for the host, such as CPU usage or number of I/O operations



To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `m`,
							Description: `One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for m, repeat the m parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.`,
							Required:    false,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getIndexMetrics`,
				Description: `Returns the Atlas Search metrics data series within the provided time range for one namespace and index name on the specified process. You must have the Project Read Only or higher role to view the Atlas Search metric types.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/{indexName}/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `metrics`,
							Description: `List that contains the measurements that MongoDB Atlas reports for the associated data series.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
						{
							Name:        `indexName`,
							Description: `Human-readable label that identifies the index.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Human-readable label that identifies the collection.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getMeasurements`,
				Description: `Returns the Atlas Search hardware and status data series within the provided time range for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `metrics`,
							Description: `List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don&#39;t set this parameter, this resource returns all hardware and status metrics for the associated data series.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listAtlasProcesses`,
				Description: `Returns details of all processes for the specified project. A MongoDB process can be either a mongod or mongos. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDatabases`,
				Description: `Returns the list of databases running on the specified host for the specified project. M0 free clusters, M2, M5, and serverless clusters have some operational limits. The MongoDB Cloud process must be a mongod. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/databases`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDiskMeasurements`,
				Description: `Returns measurement details for one disk or partition for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `partitionName`,
							Description: `Human-readable label of the disk or partition to which the measurements apply.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDiskPartitions`,
				Description: `Returns the list of disks or partitions for the specified host for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/disks`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listIndexMetrics`,
				Description: `Returns the Atlas Search index metrics within the specified time range for one namespace in the specified process.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/measurements`,
					QueryParameters: []Parameter{
						{
							Name:        `granularity`,
							Description: `Duration that specifies the interval at which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC.`,
							Required:    true,
						},
						{
							Name:        `period`,
							Description: `Duration over which Atlas reports the metrics. This parameter expresses its value in the ISO 8601 duration format in UTC. Include this parameter when you do not set start and end.`,
							Required:    false,
						},
						{
							Name:        `start`,
							Description: `Date and time when MongoDB Cloud begins reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `end`,
							Description: `Date and time when MongoDB Cloud stops reporting the metrics. This parameter expresses its value in the ISO 8601 timestamp format in UTC. Include this parameter when you do not set period.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `metrics`,
							Description: `List that contains the measurements that MongoDB Atlas reports for the associated data series.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
						{
							Name:        `databaseName`,
							Description: `Human-readable label that identifies the database.`,
							Required:    true,
						},
						{
							Name:        `collectionName`,
							Description: `Human-readable label that identifies the collection.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listMetricTypes`,
				Description: `Returns all Atlas Search metric types available for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `processId`,
							Description: `Combination of hostname and IANA port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name: `Network Peering`,
		Description: `Returns, adds, edits, and removes network peering containers and peering connections.
When you deploy an M10&#43; dedicated cluster, Atlas creates a VPC for the selected provider and region or regions if no existing VPC or VPC peering connection exists for that provider and region. Atlas assigns the VPC a Classless Inter-Domain Routing (CIDR) block.`,
		Commands: []Command{
			{
				OperationID: `createPeeringConnection`,
				Description: `Creates one new network peering connection in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Owner role. To learn more about considerations and prerequisites, see the Network Peering Documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/peers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createPeeringContainer`,
				Description: `Creates one new network peering container in the specified project. MongoDB Cloud can deploy Network Peering connections in a network peering container. GCP can have one container per project. AWS and Azure can have one container per cloud provider region. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePeeringConnection`,
				Description: `Removes one network peering connection in the specified project. If you Removes the last network peering connection associated with a project, MongoDB Cloud also removes any AWS security groups from the project IP access list. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/peers/{peerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `peerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the network peering connection that you want to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePeeringContainer`,
				Description: `Removes one network peering container in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers/{containerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `containerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `disablePeering`,
				Description: `Disables Connect via Peering Only mode for the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateIpMode`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPeeringConnection`,
				Description: `Returns details about one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/peers/{peerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `peerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the network peering connection that you want to retrieve.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPeeringContainer`,
				Description: `Returns details about one network peering container in one specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers/{containerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `containerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPeeringConnections`,
				Description: `Returns details about all network peering connections in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/peers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `providerName`,
							Description: `Cloud service provider to use for this VPC peering connection.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPeeringContainerByCloudProvider`,
				Description: `Returns details about all network peering containers in the specified project for the specified cloud provider. If you do not specify the cloud provider, MongoDB Cloud returns details about all network peering containers in the project for Amazon Web Services (AWS). To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `providerName`,
							Description: `Cloud service provider that serves the desired network peering containers.`,
							Required:    true,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPeeringContainers`,
				Description: `Returns details about all network peering containers in the specified project. Network peering containers contain network peering connections. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers/all`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updatePeeringConnection`,
				Description: `Updates one specified network peering connection in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/peers/{peerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `peerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the network peering connection that you want to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updatePeeringContainer`,
				Description: `Updates the network details and labels of one specified network peering container in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/containers/{containerId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `containerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `verifyConnectViaPeeringOnlyModeForOneProject`,
				Description: `Verifies if someone set the specified project to Connect via Peering Only mode. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateIpMode`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Online Archive`,
		Description: `Returns, adds, edits, or removes an online archive.`,
		Commands: []Command{
			{
				OperationID: `createOnlineArchive`,
				Description: `Creates one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the collection for which you want to create one online archive.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteOnlineArchive`,
				Description: `Removes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `archiveId`,
							Description: `Unique 24-hexadecimal digit string that identifies the online archive to delete.`,
							Required:    true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the collection from which you want to remove an online archive.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `downloadOnlineArchiveQueryLogs`,
				Description: `Downloads query logs for the specified online archive. To use this resource, the requesting API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: &#34;Accept: application/vnd.atlas.YYYY-MM-DD&#43;gzip&#34;.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/queryLogs.gz`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `startDate`,
							Description: `Date and time that specifies the starting point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
						{
							Name:        `endDate`,
							Description: `Date and time that specifies the end point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
						{
							Name:        `archiveOnly`,
							Description: `Flag that indicates whether to download logs for queries against your online archive only or both your online archive and cluster.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the collection for which you want to return the query logs from one online archive.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`gzip`,
						},
					},
				},
			},
			{
				OperationID: `getOnlineArchive`,
				Description: `Returns one online archive for one cluster. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `archiveId`,
							Description: `Unique 24-hexadecimal digit string that identifies the online archive to return.`,
							Required:    true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOnlineArchives`,
				Description: `Returns details of all online archives. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the collection for which you want to return the online archives.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOnlineArchive`,
				Description: `Updates, pauses, or resumes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `archiveId`,
							Description: `Unique 24-hexadecimal digit string that identifies the online archive to update.`,
							Required:    true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `OpenAPI`,
		Description: `Returns information about the MongoDB Atlas Specification.`,
		Commands: []Command{
			{
				OperationID: `getApiVersions`,
				Description: `API that provides a list of available versionsfor a given environment.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/unauth/openapi/versions`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `env`,
							Description: `The environment to get the versions from. If not provided, it returnsthe versions for the given MongoDB URL. (E.g. prod for cloud.mongodb.com)`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
							`yaml`,
						},
					},
				},
			},
			{
				OperationID: `getOpenApiInfo`,
				Description: `This resource returns general information about the MongoDB Atlas Administration API OpenAPI Specification.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/openapi/info`,
					QueryParameters: []Parameter{
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2025-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Organizations`,
		Description: `Returns, adds, and edits organizational units in MongoDB Cloud.`,
		Commands: []Command{
			{
				OperationID: `createOrganization`,
				Description: `Creates one organization in MongoDB Cloud and links it to the requesting API Key&#39;s organization. To use this resource, the requesting API Key must have the Organization Owner role. The requesting API Key&#39;s organization must be a paying organization. To learn more, see Configure a Paying Organization in the MongoDB Atlas documentation.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createOrganizationInvitation`,
				Description: `Invites one MongoDB Cloud user to join the specified organization. The user must accept the invitation to access information within the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteOrganization`,
				Description: `Removes one specified organization. MongoDB Cloud imposes the following limits on this resource:



Organizations with active projects cannot be removed.


All projects in the organization must be removed before you can remove the organization.
To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteOrganizationInvitation`,
				Description: `Cancels one pending invitation sent to the specified MongoDB Cloud user to join an organization. You can&#39;t cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getOrganization`,
				Description: `Returns one organization to which the requesting API key has access. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getOrganizationInvitation`,
				Description: `Returns the details of one pending invitation to the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getOrganizationSettings`,
				Description: `Returns details about the specified organization&#39;s settings. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/settings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizationInvitations`,
				Description: `Returns all pending invitations to the specified organization. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `username`,
							Description: `Email address of the user account invited to this organization. If you exclude this parameter, this resource returns all pending invitations.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizationProjects`,
				Description: `Returns multiple projects in the specified organization. Each organization can have multiple projects. Use projects to:



Isolate different environments, such as development, test, or production environments, from each other.


Associate different MongoDB Cloud users or teams with different environments, or give different permission to MongoDB Cloud users in different environments.


Maintain separate cluster security configurations.


Create different alert settings.



To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/groups`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `name`,
							Description: `Human-readable label of the project to use to filter the returned list. Performs a case-insensitive search for a project within the organization which is prefixed by the specified name.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizationUsers`,
				Description: `Returns details about the MongoDB Cloud users associated with the specified organization. Each MongoDB Cloud user returned must belong to the specified organization or to a project within the specified organization. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizations`,
				Description: `Returns all organizations to which the requesting API Key has access. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `name`,
							Description: `Human-readable label of the organization to use to filter the returned list. Performs a case-insensitive search for an organization that starts with the specified name.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeOrganizationUser`,
				Description: `Removes one MongoDB Cloud user from the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the user to be deleted.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2025-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `renameOrganization`,
				Description: `Renames one organization. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOrganizationInvitation`,
				Description: `Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the username of the invited user. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOrganizationInvitationById`,
				Description: `Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the unique identification string for that invitation. Use the Return All Organization Invitations endpoint to retrieve IDs for all pending organization invitations. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOrganizationRoles`,
				Description: `Updates the roles of the specified user in the specified organization. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified organization. To use this resource, the requesting API Key must have the Organization User Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/users/{userId}/roles`,
					QueryParameters: []Parameter{
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the user to modify.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateOrganizationSettings`,
				Description: `Updates the organization&#39;s settings. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/settings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Performance Advisor`,
		Description: `Returns suggested indexes and slow query data for a database deployment. Also enables or disables MongoDB Cloud-managed slow operation thresholds. To view field values in a sample query, you must have the Project Data Access Read Only role or higher. Otherwise, MongoDB Cloud returns redacted data rather than the field values.`,
		Commands: []Command{
			{
				OperationID: `disableSlowOperationThresholding`,
				Description: `Disables the slow operation threshold that MongoDB Cloud calculated for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10&#43;). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/managedSlowMs/disable`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `enableSlowOperationThresholding`,
				Description: `Enables MongoDB Cloud to use its slow operation threshold for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10&#43;). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/managedSlowMs/enable`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getManagedSlowMs`,
				Description: `Get whether the Managed Slow MS feature is enabled.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/managedSlowMs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServerlessAutoIndexing`,
				Description: `Get whether the Serverless Auto Indexing feature is enabled.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSlowQueries`,
				Description: `Returns log lines for slow queries that the Performance Advisor and Query Profiler identified. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. MongoDB Cloud bases the threshold for slow queries on the average time of operations on your cluster. This enables workload-relevant recommendations. To use this resource, the requesting API Key must have the Project Data Access Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/slowQueryLogs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name: `duration`,
							Description: `Length of time expressed during which the query finds slow queries among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.



If you don&#39;t specify the since parameter, the endpoint returns data covering the duration before the current time.


If you specify neither the duration nor since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
						{
							Name:        `namespaces`,
							Description: `Namespaces from which to retrieve slow queries. A namespace consists of one database and one collection resource written as .: &lt;database&gt;.&lt;collection&gt;. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (&amp;) between each namespace. Omit this parameter to return results for all namespaces.`,
							Required:    false,
						},
						{
							Name:        `nLogs`,
							Description: `Maximum number of lines from the log to return.`,
							Required:    false,
						},
						{
							Name: `since`,
							Description: `Date and time from which the query retrieves the slow queries. This parameter expresses its value in the number of milliseconds that have elapsed since the UNIX epoch.



If you don&#39;t specify the duration parameter, the endpoint returns data covering from the since value and the current time.


If you specify neither the duration nor the since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSlowQueryNamespaces`,
				Description: `Returns up to 20 namespaces for collections experiencing slow queries on the specified host. If you specify a secondary member of a replica set that hasn&#39;t received any database read operations, the endpoint doesn&#39;t return any namespaces. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/namespaces`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name: `duration`,
							Description: `Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.



If you don&#39;t specify the since parameter, the endpoint returns data covering the duration before the current time.


If you specify neither the duration nor since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
						{
							Name: `since`,
							Description: `Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the UNIX epoch.



If you don&#39;t specify the duration parameter, the endpoint returns data covering from the since value and the current time.


If you specify neither the duration nor the since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSuggestedIndexes`,
				Description: `Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/suggestedIndexes`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name: `duration`,
							Description: `Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.



If you don&#39;t specify the since parameter, the endpoint returns data covering the duration before the current time.


If you specify neither the duration nor since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
						{
							Name:        `namespaces`,
							Description: `Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as .: &lt;database&gt;.&lt;collection&gt;. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (&amp;) between each namespace. Omit this parameter to return results for all namespaces.`,
							Required:    false,
						},
						{
							Name:        `nExamples`,
							Description: `Maximum number of example queries that benefit from the suggested index.`,
							Required:    false,
						},
						{
							Name:        `nIndexes`,
							Description: `Number that indicates the maximum indexes to suggest.`,
							Required:    false,
						},
						{
							Name: `since`,
							Description: `Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the UNIX epoch.



If you don&#39;t specify the duration parameter, the endpoint returns data covering from the since value and the current time.


If you specify neither the duration nor the since parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `processId`,
							Description: `Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSuggestedIndexes_1`,
				Description: `Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/performanceAdvisor/suggestedIndexes`,
					QueryParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `processIds`,
							Description: `ProcessIds from which to retrieve suggested indexes. A processId is a combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (mongod or mongos). The port must be the IANA port on which the MongoDB process listens for requests. To include multiple processIds, pass the parameter multiple times delimited with an ampersand (&amp;) between each processId.`,
							Required:    false,
						},
						{
							Name:        `namespaces`,
							Description: `Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as .: &lt;database&gt;.&lt;collection&gt;. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (&amp;) between each namespace. Omit this parameter to return results for all namespaces.`,
							Required:    false,
						},
						{
							Name: `since`,
							Description: `Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the UNIX epoch.



If you don&#39;t specify the until parameter, the endpoint returns data covering from the since value and the current time.


If you specify neither the since nor the until parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
						{
							Name: `until`,
							Description: `Date and time up until which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the UNIX epoch.



If you specify the until parameter, you must specify the since parameter.


If you specify neither the since nor the until parameters, the endpoint returns data from the previous 24 hours.`,
							Required: false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `setServerlessAutoIndexing`,
				Description: `Set whether the Serverless Auto Indexing feature is enabled.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing`,
					QueryParameters: []Parameter{
						{
							Name:        `enable`,
							Description: `Value that we want to set for the Serverless Auto Indexing toggle.`,
							Required:    true,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Private Endpoint Services`,
		Description: `Returns, adds, edits, and removes private endpoint services.`,
		Commands: []Command{
			{
				OperationID: `createPrivateEndpoint`,
				Description: `Creates one private endpoint for the specified cloud service provider. This cloud service provider manages the private endpoint service, which in turn manages the private endpoints for the project. To use this resource, the requesting API Key must have the Project Owner role. To learn more about considerations, limitations, and prerequisites, see the MongoDB documentation for setting up a private endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint.`,
							Required:    true,
						},
						{
							Name:        `endpointServiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createPrivateEndpointService`,
				Description: `Creates one private endpoint service for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. When you create a private endpoint service, MongoDB Cloud creates a network container in the project for the cloud provider for which you create the private endpoint service if one doesn&#39;t already exist. To learn more about private endpoint terminology in MongoDB Cloud, see Private Endpoint Concepts. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/endpointService`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePrivateEndpoint`,
				Description: `Removes one private endpoint from the specified project and private endpoint service, as managed by the specified cloud service provider. When the last private endpoint is removed from a given private endpoint service, that private endpoint service is also removed. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique string that identifies the private endpoint you want to delete. The format of the endpointId parameter differs for AWS and Azure. You must URL encode the endpointId for Azure private endpoints.`,
							Required:    true,
						},
						{
							Name:        `endpointServiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint service from which you want to delete a private endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePrivateEndpointService`,
				Description: `Removes one private endpoint service from the specified project. This cloud service provider manages the private endpoint service that belongs to the project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint service.`,
							Required:    true,
						},
						{
							Name:        `endpointServiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPrivateEndpoint`,
				Description: `Returns the connection state of the specified private endpoint. The private endpoint service manages this private endpoint which belongs to one project hosted from one cloud service provider. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique string that identifies the private endpoint you want to return. The format of the endpointId parameter differs for AWS and Azure. You must URL encode the endpointId for Azure private endpoints.`,
							Required:    true,
						},
						{
							Name:        `endpointServiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to return a private endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPrivateEndpointService`,
				Description: `Returns the name, interfaces, and state of the specified private endpoint service from one project. The cloud service provider hosted this private endpoint service that belongs to the project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint service.`,
							Required:    true,
						},
						{
							Name:        `endpointServiceId`,
							Description: `Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getRegionalizedPrivateEndpointSetting`,
				Description: `Checks whether each region in the specified cloud service provider can create multiple private endpoints per region. The cloud service provider manages the private endpoint for the project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/regionalMode`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPrivateEndpointServices`,
				Description: `Returns the name, interfaces, and state of all private endpoint services for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `cloudProvider`,
							Description: `Cloud service provider that manages this private endpoint service.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `toggleRegionalizedPrivateEndpointSetting`,
				Description: `Enables or disables the ability to create multiple private endpoints per region in all cloud service providers in one project. The cloud service provider manages the private endpoints for the project. Connection strings to existing multi-region and global sharded clusters change when you enable this setting. You must update your applications to use the new connection strings. This might cause downtime. To use this resource, the requesting API Key must have the Project Owner role and all clusters in the deployment must be sharded clusters. Once enabled, you cannot create replica sets.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/regionalMode`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Programmatic API Keys`,
		Description: `Returns, adds, edits, and removes access tokens to use the MongoDB Cloud API. MongoDB Cloud applies these keys to organizations. These resources can return, assign, or revoke use of these keys within a specified project.`,
		Commands: []Command{
			{
				OperationID: `addProjectApiKey`,
				Description: `Assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can then use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createApiKey`,
				Description: `Creates one API key for the specified organization. An organization API key grants programmatic access to an organization. You can&#39;t use the API key to log into the console. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createApiKeyAccessList`,
				Description: `Creates the access list entries for the specified organization API key. Resources require all API requests originate from IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key for which you want to create a new access list entry.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProjectApiKey`,
				Description: `Creates and assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/apiKeys`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteApiKey`,
				Description: `Removes one organization API key from the specified organization. When you remove an API key from an organization, MongoDB Cloud also removes that key from any projects that use that key. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteApiKeyAccessListEntry`,
				Description: `Removes the specified access list entry from the specified organization API key. Resources require all API requests originate from the IP addresses on the API access list. To use this resource, the requesting API Key must have the Read Write role. In addition, you cannot remove the requesting IP address from the requesting organization API key.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key for which you want to remove access list entries.`,
							Required:    true,
						},
						{
							Name:        `ipAddress`,
							Description: `One IP address or multiple IP addresses represented as one CIDR block to limit requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getApiKey`,
				Description: `Returns one organization API key. The organization API keys grant programmatic access to an organization. You can&#39;t use the API key to log into MongoDB Cloud through the user interface. To use this resource, the requesting API Key must have the  Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key that  you want to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getApiKeyAccessList`,
				Description: `Returns one access list entry for the specified organization API key. Resources require  all API requests originate from IP addresses on the API access list. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `ipAddress`,
							Description: `One IP address or multiple IP addresses represented as one CIDR block to limit  requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as  192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key for  which you want to return access list entries.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listApiKeyAccessListsEntries`,
				Description: `Returns all access list entries that you configured for the specified organization API key. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key for which you want to return access list entries.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listApiKeys`,
				Description: `Returns all organization API keys for the specified organization. The organization API keys grant programmatic access to an organization. You can&#39;t use the API key to log into MongoDB Cloud through the console. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectApiKeys`,
				Description: `Returns all organization API keys that you assigned to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/apiKeys`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeProjectApiKey`,
				Description: `Removes one organization API key from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key that you want to unassign from one project.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateApiKey`,
				Description: `Updates one organization API key in the specified organization. The organization API keys  grant programmatic access to an organization. To use this resource, the requesting  API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key you  want to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateApiKeyRoles`,
				Description: `Updates the roles of the organization API key that you specify for the project that you specify. You must specify at least one valid role for the project. The application removes any roles that you do not include in this request if they were previously set in the organization API key that you specify for the project.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}`,
					QueryParameters: []Parameter{
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `apiUserId`,
							Description: `Unique 24-hexadecimal digit string that identifies this organization API key that you want to unassign from one project.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Project IP Access List`,
		Description: `Returns, adds, edits, and removes network access limits to database deployments in Atlas. This resource replaces the whitelist resource. Atlas removed whitelists in July 2021. Update your applications to use this new resource. This resource manages a project&#39;s IP Access List and supports creating temporary Access List entries that automatically expire within a user-configurable 7-day period.`,
		Commands: []Command{
			{
				OperationID: `createProjectIpAccessList`,
				Description: `Adds one or more access list entries to the specified project. MongoDB Cloud only allows client connections to the cluster from entries in the project&#39;s IP access list. Write each entry as either one IP address or one CIDR-notated block of IP addresses. To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The /groups/{GROUP-ID}/accessList endpoint manages the database IP access list. This endpoint is distinct from the orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist endpoint, which manages the access list for MongoDB Cloud organizations. This endpoint doesn&#39;t support concurrent POST requests. You must submit multiple POST requests synchronously.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectIpAccessList`,
				Description: `Removes one access list entry from the specified project&#39;s IP access list. Each entry in the project&#39;s IP access list contains one IP address, one CIDR-notated block of IP addresses, or one AWS Security Group ID. MongoDB Cloud only allows client connections to the cluster from entries in the project&#39;s IP access list. To use this resource, the requesting API Key must have the Project Owner role. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The /groups/{GROUP-ID}/accessList endpoint manages the database IP access list. This endpoint is distinct from the orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist endpoint, which manages the access list for MongoDB Cloud organizations.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/accessList/{entryValue}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name: `entryValue`,
							Description: `Access list entry that you want to remove from the project&#39;s IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (/) with its URL-encoded value (%2F). When you remove an entry from the IP access list, existing connections from the removed address or addresses may remain open for a variable amount of time. The amount of time it takes MongoDB Cloud to close the connection depends upon several factors, including:



how your application established the connection,


how MongoDB Cloud or the driver using the address behaves, and


which protocol (like TCP or UDP) the connection uses.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectIpAccessListStatus`,
				Description: `Returns the status of one project IP access list entry. This resource checks if the provided project IP access list entry applies to all cloud providers serving clusters from the specified project.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/accessList/{entryValue}/status`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `entryValue`,
							Description: `Network address or cloud provider security construct that identifies which project access list entry to be verified.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectIpList`,
				Description: `Returns one access list entry from the specified project&#39;s IP access list. Each entry in the project&#39;s IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project&#39;s IP access list. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. This endpoint (/groups/{GROUP-ID}/accessList) manages the Project IP Access List. It doesn&#39;t manage the access list for MongoDB Cloud organizations. TheProgrammatic API Keys endpoint (/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist) manages those access lists.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/accessList/{entryValue}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `entryValue`,
							Description: `Access list entry that you want to return from the project&#39;s IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (/) with its URL-encoded value (%2F).`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectIpAccessLists`,
				Description: `Returns all access list entries from the specified project&#39;s IP access list. Each entry in the project&#39;s IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project&#39;s IP access list. To use this resource, the requesting API Key must have the Project Read Only or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The /groups/{GROUP-ID}/accessList endpoint manages the database IP access list. This endpoint is distinct from the orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist endpoint, which manages the access list for MongoDB Cloud organizations.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Projects`,
		Description: `Returns, adds, and edits collections of clusters and users in MongoDB Cloud.`,
		Commands: []Command{
			{
				OperationID: `addUserToProject`,
				Description: `Adds one MongoDB Cloud user to the specified project. If the MongoDB Cloud user is not a member of the project&#39;s organization, then the user must accept their invitation to the organization to access information within the specified project. If the MongoDB Cloud User is already a member of the project&#39;s organization, then they will be added to the project immediately and an invitation will not be returned by this resource. To use this resource, the requesting API Key must have the Group User Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/access`,
					QueryParameters: []Parameter{
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProject`,
				Description: `Creates one project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Read Write role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `projectOwnerId`,
							Description: `Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user to whom to grant the Project Owner role on the specified project. If you set this parameter, it overrides the default value of the oldest Organization Owner.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProjectInvitation`,
				Description: `Invites one MongoDB Cloud user to join the specified project. The MongoDB Cloud user must accept the invitation to access information within the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProject`,
				Description: `Removes the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. You can delete a project only if there are no Online Archives for the clusters in the project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectInvitation`,
				Description: `Cancels one pending invitation sent to the specified MongoDB Cloud user to join a project. You can&#39;t cancel an invitation that the user accepted. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectLimit`,
				Description: `Removes the specified project limit. Depending on the limit, Atlas either resets the limit to its default value or removes the limit entirely. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this project limit.


| Limit Name | Description | Default | API Override Limit |
| --- | --- | --- | --- |
| atlas.project.deployment.clusters | Limit on the number of clusters in this project if the org is not sales-sold (If org is sales-sold, the limit is 100) | 25 | 90 |
| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |
| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |
| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |
| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |
| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |
| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |
| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |
| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |
| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |
| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Service Connections per Region Group | 50 | 100|
| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
| atlas.project.deployment.salesSoldM0s | Limit on the number of M0 clusters in this project if the org is sales-sold | 100 | 100 |`,
							Required: true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProject`,
				Description: `Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectByName`,
				Description: `Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/byName/{groupName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `groupName`,
							Description: `Human-readable label that identifies this project.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectInvitation`,
				Description: `Returns the details of one pending invitation to the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectLTSVersions`,
				Description: `Returns the MongoDB Long Term Support Major Versions available to new clusters in this project.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/mongoDBVersions`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `cloudProvider`,
							Description: `Filter results to only one cloud provider.`,
							Required:    false,
						},
						{
							Name:        `instanceSize`,
							Description: `Filter results to only one instance size.`,
							Required:    false,
						},
						{
							Name:        `defaultStatus`,
							Description: `Filter results to only the default values per tier. This value must be DEFAULT.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectLimit`,
				Description: `Returns the specified limit for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this project limit.


| Limit Name | Description | Default | API Override Limit |
| --- | --- | --- | --- |
| atlas.project.deployment.clusters | Limit on the number of clusters in this project if the org is not sales-sold (If org is sales-sold, the limit is 100) | 25 | 90 |
| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |
| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |
| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |
| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |
| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |
| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |
| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |
| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |
| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |
| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Service Connections per Region Group | 50 | 100|
| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
| atlas.project.deployment.salesSoldM0s | Limit on the number of M0 clusters in this project if the org is sales-sold | 100 | 100 |`,
							Required: true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectSettings`,
				Description: `Returns details about the specified project&#39;s settings. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/settings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectInvitations`,
				Description: `Returns all pending invitations to the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `username`,
							Description: `Email address of the user account invited to this project.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectLimits`,
				Description: `Returns all the limits for the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/limits`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectUsers`,
				Description: `Returns details about all users in the specified project. Users belong to an organization. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `flattenTeams`,
							Description: `Flag that indicates whether the returned list should include users who belong to a team with a role in this project. You might not have assigned the individual users a role in this project. If &#34;flattenTeams&#34; : false, this resource returns only users with a role in the project.  If &#34;flattenTeams&#34; : true, this resource returns both users with roles in the project and users who belong to teams with roles in the project.`,
							Required:    false,
						},
						{
							Name:        `includeOrgUsers`,
							Description: `Flag that indicates whether the returned list should include users with implicit access to the project, the Organization Owner or Organization Read Only role. You might not have assigned the individual users a role in this project. If &#34;includeOrgUsers&#34;: false, this resource returns only users with a role in the project. If &#34;includeOrgUsers&#34;: true, this resource returns both users with roles in the project and users who have implicit access to the project through their organization role.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjects`,
				Description: `Returns details about all projects. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting API Key must have the Organization Read Only role or higher.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `migrateProjectToAnotherOrg`,
				Description: `Migrates a project from its current organization to another organization. All project users and their roles will be copied to the same project in the destination organization. You must include an organization API key with the Organization Owner role for the destination organization to verify access to the destination organization when you authenticate with Programmatic API Keys. Otherwise, the requesting user must have the Organization Owner role in both organizations. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}:migrate`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeProjectUser`,
				Description: `Removes the specified user from the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal string that identifies MongoDB Cloud user you want to remove from the specified project. To return a application user&#39;s ID using their application username, use the Get All application users in One Project endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `returnAllIPAddresses`,
				Description: `Returns all IP addresses for this project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/ipAddresses`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `setProjectLimit`,
				Description: `Sets the specified project limit. To use this resource, the requesting API Key must have the Project Owner role.


NOTE: Increasing the following configuration limits might lead to slower response times in the MongoDB Cloud UI or increased user management overhead leading to authentication or authorization re-architecture. If possible, we recommend that you create additional projects to gain access to more of these resources for a more sustainable growth pattern.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/limits/{limitName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `limitName`,
							Description: `Human-readable label that identifies this project limit.


| Limit Name | Description | Default | API Override Limit |
| --- | --- | --- | --- |
| atlas.project.deployment.clusters | Limit on the number of clusters in this project if the org is not sales-sold (If org is sales-sold, the limit is 100) | 25 | 90 |
| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |
| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |
| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |
| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |
| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |
| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |
| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |
| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |
| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |
| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Service Connections per Region Group | 50 | 100|
| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
| atlas.project.deployment.salesSoldM0s | Limit on the number of M0 clusters in this project if the org is sales-sold | 100 | 100 |`,
							Required: true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProject`,
				Description: `Updates the human-readable label that identifies the specified project, or the tags associated with the project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProjectInvitation`,
				Description: `Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the username of the invited user. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProjectInvitationById`,
				Description: `Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the unique identification string for that invitation. Use the Return All Project Invitations endpoint to retrieve IDs for all pending project invitations. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/invites/{invitationId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `invitationId`,
							Description: `Unique 24-hexadecimal digit string that identifies the invitation.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProjectRoles`,
				Description: `Updates the roles of the specified user in the specified project. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified project. To use this resource, the requesting API Key must have the Group User Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/users/{userId}/roles`,
					QueryParameters: []Parameter{
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies the user to modify.`,
							Required:    true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProjectSettings`,
				Description: `Updates the settings of the specified project. You can update any of the options available. MongoDB cloud only updates the options provided in the request. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/settings`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Push-Based Log Export`,
		Description: `You can continually push logs from mongod, mongos, and audit logs to an AWS S3 bucket. Atlas exports logs every 5 minutes.`,
		Commands: []Command{
			{
				OperationID: `createPushBasedLogConfiguration`,
				Description: `Configures the project level settings for the push-based log export feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pushBasedLogExport`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePushBasedLogConfiguration`,
				Description: `Disables the push-based log export feature by resetting the project level settings to its default configuration.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pushBasedLogExport`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getPushBasedLogConfiguration`,
				Description: `Fetches the current project level settings for the push-based log export feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pushBasedLogExport`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updatePushBasedLogConfiguration`,
				Description: `Updates the project level settings for the push-based log export feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/pushBasedLogExport`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Resource Policies`,
		Description: `Configure and manage Atlas Resource Policies within your organization.`,
		Commands: []Command{
			{
				OperationID: `createAtlasResourcePolicy`,
				Description: `Create one Atlas Resource Policy for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteAtlasResourcePolicy`,
				Description: `Delete one Atlas Resource Policy for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies/{resourcePolicyId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `resourcePolicyId`,
							Description: `Unique 24-hexadecimal digit string that identifies an atlas resource policy.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasResourcePolicies`,
				Description: `Return all Atlas Resource Policies for the org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getAtlasResourcePolicy`,
				Description: `Return one Atlas Resource Policy for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies/{resourcePolicyId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `resourcePolicyId`,
							Description: `Unique 24-hexadecimal digit string that identifies an atlas resource policy.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getResourcesNonCompliant`,
				Description: `Return all non-compliant resources for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/nonCompliantResources`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateAtlasResourcePolicy`,
				Description: `Update one Atlas Resource Policy for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies/{resourcePolicyId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `resourcePolicyId`,
							Description: `Unique 24-hexadecimal digit string that identifies an atlas resource policy.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `validateAtlasResourcePolicy`,
				Description: `Validate one Atlas Resource Policy for an org.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/resourcePolicies:validate`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Rolling Index`,
		Description: `Creates one index to a database deployment in a rolling manner. You can&#39;t create a rolling index on an M0 free cluster or M2/M5 shared cluster.`,
		Commands: []Command{
			{
				OperationID: `createRollingIndex`,
				Description: `Creates an index on the cluster identified by its name in a rolling manner. Creating the index in this way allows index builds on one replica set member as a standalone at a time, starting with the secondary members. Creating indexes in this way requires at least one replica set election. To use this resource, the requesting API Key must have the Project Data Access Admin role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/index`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster on which MongoDB Cloud creates an index.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Root`,
		Description: `Returns details that describe the MongoDB Cloud build and the access token that requests this resource. This starts the MongoDB Cloud API.`,
		Commands: []Command{
			{
				OperationID: `getSystemStatus`,
				Description: `This resource returns information about the MongoDB application along with API key meta data.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `returnAllControlPlaneIPAddresses`,
				Description: `Returns all control plane IP addresses.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/unauth/controlPlaneIPAddresses`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-11-15`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Serverless Instances`,
		Description: `Returns, adds, edits, and removes serverless instances.`,
		Commands: []Command{
			{
				OperationID: `createServerlessInstance`,
				Description: `Creates one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteServerlessInstance`,
				Description: `Removes one serverless instance from the specified project. The serverless instance must have termination protection disabled in order to be deleted. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServerlessInstance`,
				Description: `Returns details for one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServerlessInstances`,
				Description: `Returns details for all serverless instances in the specified project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateServerlessInstance`,
				Description: `Updates one serverless instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serverless/{name}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `name`,
							Description: `Human-readable label that identifies the serverless instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Serverless Private Endpoints`,
		Description: `Returns, adds, edits, and removes private endpoints for serverless instances. To learn more, see the Atlas Administration API tab on the following tutorial.`,
		Commands: []Command{
			{
				OperationID: `createServerlessPrivateEndpoint`,
				Description: `Creates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.


A new endpoint won&#39;t be immediately available after creation.  Read the steps in the linked tutorial for detailed guidance.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `instanceName`,
							Description: `Human-readable label that identifies the serverless instance for which the tenant endpoint will be created.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteServerlessPrivateEndpoint`,
				Description: `Remove one private endpoint from one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `instanceName`,
							Description: `Human-readable label that identifies the serverless instance from which the tenant endpoint will be removed.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be removed.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServerlessPrivateEndpoint`,
				Description: `Return one private endpoint for one serverless instance. Identify this endpoint using its unique ID. You must have at least the Project Read Only role for the project to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `instanceName`,
							Description: `Human-readable label that identifies the serverless instance associated with the tenant endpoint.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the tenant endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServerlessPrivateEndpoints`,
				Description: `Returns all private endpoints for one serverless instance. You must have at least the Project Read Only role for the project to successfully call this resource.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `instanceName`,
							Description: `Human-readable label that identifies the serverless instance associated with the tenant endpoint.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateServerlessPrivateEndpoint`,
				Description: `Updates one private endpoint for one serverless instance. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `instanceName`,
							Description: `Human-readable label that identifies the serverless instance associated with the tenant endpoint that will be updated.`,
							Required:    true,
						},
						{
							Name:        `endpointId`,
							Description: `Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be updated.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Service Accounts`,
		Description: `Endpoints for managing Service Accounts and secrets. Service Accounts are used for programmatic access to the Atlas Admin API through the OAuth 2.0 Client Credentials flow. This feature is available as a Preview feature.`,
		Commands: []Command{
			{
				OperationID: `addProjectServiceAccount`,
				Description: `Assigns the specified Service Account to the specified Project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}:invite`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProjectServiceAccount`,
				Description: `Creates one Service Account for the specified Project. The Service Account will automatically be added as an Organization Member to the Organization that the specified Project is a part of. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProjectServiceAccountAccessList`,
				Description: `Add Access List Entries for the specified Service Account for the project. Resources require all API requests to originate from IP addresses on the API access list. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createProjectServiceAccountSecret`,
				Description: `Create a secret for the specified Service Account in the specified Project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/secrets`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createServiceAccount`,
				Description: `Creates one Service Account for the specified Organization. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createServiceAccountAccessList`,
				Description: `Add Access List Entries for the specified Service Account for the organization. Resources require all API requests to originate from IP addresses on the API access list. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createServiceAccountSecret`,
				Description: `Create a secret for the specified Service Account. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/secrets`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectServiceAccount`,
				Description: `Removes the specified Service Account from the specified project. The Service Account will still be a part of the Organization it was created in, and the credentials will remain active until expired or manually revoked. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectServiceAccountAccessListEntry`,
				Description: `Removes the specified access list entry from the specified Service Account for the project. You can&#39;t remove the requesting IP address from the access list. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/accessList/{ipAddress}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `ipAddress`,
							Description: `One IP address or multiple IP addresses represented as one CIDR block. When specifying a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteProjectServiceAccountSecret`,
				Description: `Deletes the specified Service Account secret. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/secrets/{secretId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `secretId`,
							Description: `Unique 24-hexadecimal digit string that identifies the secret.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteServiceAccount`,
				Description: `Deletes the specified Service Account. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteServiceAccountAccessListEntry`,
				Description: `Removes the specified access list entry from the specified Service Account for the organization. You can&#39;t remove the requesting IP address from the access list. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/accessList/{ipAddress}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `ipAddress`,
							Description: `One IP address or multiple IP addresses represented as one CIDR block. When specifying a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteServiceAccountSecret`,
				Description: `Deletes the specified Service Account secret. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/secrets/{secretId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `secretId`,
							Description: `Unique 24-hexadecimal digit string that identifies the secret.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getProjectServiceAccount`,
				Description: `Returns one Service Account in the specified Project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getServiceAccount`,
				Description: `Returns the specified Service Account. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectServiceAccountAccessList`,
				Description: `Returns all access list entries that you configured for the specified Service Account for the project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectServiceAccounts`,
				Description: `Returns all Service Accounts for the specified Project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts`,
					QueryParameters: []Parameter{
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServiceAccountAccessList`,
				Description: `Returns all access list entries that you configured for the specified Service Account for the organization. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/accessList`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServiceAccountProjects`,
				Description: `Returns a list of all projects the specified Service Account is a part of. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/groups`,
					QueryParameters: []Parameter{
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listServiceAccounts`,
				Description: `Returns all Service Accounts for the specified Organization. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts`,
					QueryParameters: []Parameter{
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-08-05`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateProjectServiceAccount`,
				Description: `Updates one Service Account in the specified Project. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateServiceAccount`,
				Description: `Updates the specified Service Account in the specified Organization. Available as a preview feature.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clientId`,
							Description: `The Client ID of the Service Account.`,
							Required:    true,
						},
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Shared-Tier Restore Jobs`,
		Description: `Returns and adds restore jobs for shared-tier database deployments.`,
		Commands: []Command{
			{
				OperationID: `createSharedClusterBackupRestoreJob`,
				Description: `Restores the specified cluster. MongoDB Cloud limits which clusters can be the target clusters of a restore. The target cluster can&#39;t use encryption at rest, run a major release MongoDB version different than the snapshot, or receive client requests during restores. MongoDB Cloud deletes all existing data on the target cluster prior to the restore operation. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restore`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getSharedClusterBackupRestoreJob`,
				Description: `Returns the specified restore job. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores/{restoreId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `restoreId`,
							Description: `Unique 24-hexadecimal digit string that identifies the restore job to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSharedClusterBackupRestoreJobs`,
				Description: `Returns all restore jobs for the specified M2 or M5 cluster. Restore jobs restore a cluster using a snapshot. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Shared-Tier Snapshots`,
		Description: `Returns and requests to download shared-tier database deployment snapshots.`,
		Commands: []Command{
			{
				OperationID: `downloadSharedClusterBackup`,
				Description: `Requests one snapshot for the specified shared cluster. This resource returns a snapshotURL that you can use to download the snapshot. This snapshotURL remains active for four hours after you make the request. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/download`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getSharedClusterBackup`,
				Description: `Returns details for one snapshot for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots/{snapshotId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
						{
							Name:        `snapshotId`,
							Description: `Unique 24-hexadecimal digit string that identifies the desired snapshot.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listSharedClusterBackups`,
				Description: `Returns details for all snapshots for the specified shared cluster. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `clusterName`,
							Description: `Human-readable label that identifies the cluster.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Streams`,
		Description: `Returns, adds, edits, and removes Streams Instances. This resource requires your project ID.`,
		Commands: []Command{
			{
				OperationID: `acceptVPCPeeringConnection`,
				Description: `Requests the acceptance of an incoming VPC Peering connection.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}:accept`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `id`,
							Description: `The VPC Peering Connection id.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createPrivateLinkConnection`,
				Description: `Creates one Private Link in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createStreamConnection`,
				Description: `Creates one connection for a stream instance in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createStreamInstance`,
				Description: `Creates one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createStreamInstanceWithSampleConnections`,
				Description: `Creates one stream instance in the specified project with sample connections. To use this resource the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams:withSampleConnections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-08-05`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createStreamProcessor`,
				Description: `Create one Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2024-05-30`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deletePrivateLinkConnection`,
				Description: `Deletes one Private Link in the specified project. To use this resource, the requesting API Key must have the Project Owner or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections/{connectionId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `connectionId`,
							Description: `Unique ID that identifies the Private Link connection.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteStreamConnection`,
				Description: `Delete one connection of the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `connectionName`,
							Description: `Human-readable label that identifies the stream connection.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteStreamInstance`,
				Description: `Delete one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteStreamProcessor`,
				Description: `Delete a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `processorName`,
							Description: `Human-readable label that identifies the stream processor.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteVPCPeeringConnection`,
				Description: `Deletes an incoming VPC Peering connection.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `id`,
							Description: `The VPC Peering Connection id.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `downloadStreamTenantAuditLogs`,
				Description: `Downloads the audit logs for the specified Atlas Streams Processing instance. By default, logs cover periods of 30 days. To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: &#34;Accept: application/vnd.atlas.YYYY-MM-DD&#43;gzip&#34;.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/auditLogs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `endDate`,
							Description: `Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
						{
							Name:        `startDate`,
							Description: `Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`gzip`,
						},
					},
				},
			},
			{
				OperationID: `getPrivateLinkConnection`,
				Description: `Returns the details of one Private Link connection within the project. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections/{connectionId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `connectionId`,
							Description: `Unique ID that identifies the Private Link connection.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getStreamConnection`,
				Description: `Returns the details of one stream connection within the specified stream instance. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance to return.`,
							Required:    true,
						},
						{
							Name:        `connectionName`,
							Description: `Human-readable label that identifies the stream connection to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getStreamInstance`,
				Description: `Returns the details of one stream instance within the specified project. To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeConnections`,
							Description: `Flag to indicate whether connections information should be included in the stream instance.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getStreamProcessor`,
				Description: `Get one Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `processorName`,
							Description: `Human-readable label that identifies the stream processor.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getVPCPeeringConnections`,
				Description: `Returns a list of incoming VPC Peering Connections.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listPrivateLinkConnections`,
				Description: `Returns all Private Link connections for the specified project.To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listStreamConnections`,
				Description: `Returns all connections of the stream instance for the specified project.To use this resource, the requesting API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listStreamInstances`,
				Description: `Returns all stream instances for the specified project.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listStreamProcessors`,
				Description: `Returns all Stream Processors within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processors`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `rejectVPCPeeringConnection`,
				Description: `Requests the rejection of an incoming VPC Peering connection.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}:reject`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `id`,
							Description: `The VPC Peering Connection id.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `startStreamProcessor`,
				Description: `Start a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:start`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `processorName`,
							Description: `Human-readable label that identifies the stream processor.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `stopStreamProcessor`,
				Description: `Stop a Stream Processor within the specified stream instance. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:stop`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `processorName`,
							Description: `Human-readable label that identifies the stream processor.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version:             `2024-05-30`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateStreamConnection`,
				Description: `Update one connection for the specified stream instance in the specified project. To use this resource, the requesting API Key must have the Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance.`,
							Required:    true,
						},
						{
							Name:        `connectionName`,
							Description: `Human-readable label that identifies the stream connection.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateStreamInstance`,
				Description: `Update one stream instance in the specified project. To use this resource, the requesting API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/streams/{tenantName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `tenantName`,
							Description: `Human-readable label that identifies the stream instance to update.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-02-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Teams`,
		Description: `Returns, adds, edits, or removes teams.`,
		Commands: []Command{
			{
				OperationID: `addAllTeamsToProject`,
				Description: `Adds one team to the specified project. All members of the team share the same project access. MongoDB Cloud limits the number of users to a maximum of 100 teams per project and a maximum of 250 teams per organization. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/teams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `addTeamUser`,
				Description: `Adds one or more MongoDB Cloud users from the specified organization to the specified team. Teams enable you to grant project access roles to MongoDB Cloud users. You can assign up to 250 MongoDB Cloud users from one organization to one team. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal character string that identifies the team to which you want to add MongoDB Cloud users.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `createTeam`,
				Description: `Creates one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud limits the number of teams to a maximum of 250 teams per organization. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteTeam`,
				Description: `Removes one team specified using its unique 24-hexadecimal digit identifier from the organization specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team that you want to delete.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getTeamById`,
				Description: `Returns one team that you identified using its unique 24-hexadecimal digit ID. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team whose information you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getTeamByName`,
				Description: `Returns one team that you identified using its human-readable name. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/byName/{teamName}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamName`,
							Description: `Name of the team whose information you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listOrganizationTeams`,
				Description: `Returns all teams that belong to the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud only returns teams for which you have access. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listProjectTeams`,
				Description: `Returns all teams to which the authenticated user has access in the project specified using its unique 24-hexadecimal digit identifier. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/teams`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listTeamUsers`,
				Description: `Returns all MongoDB Cloud users assigned to the team specified using its unique 24-hexadecimal digit identifier. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Member role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team whose application users you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeProjectTeam`,
				Description: `Removes one team specified using its unique 24-hexadecimal digit identifier from the project specified using its unique 24-hexadecimal digit identifier. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/teams/{teamId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team that you want to remove from the specified project.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `removeTeamUser`,
				Description: `Removes one MongoDB Cloud user from the specified team. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users/{userId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team from which you want to remove one database application user.`,
							Required:    true,
						},
						{
							Name:        `userId`,
							Description: `Unique 24-hexadecimal digit string that identifies MongoDB Cloud user that you want to remove from the specified team.`,
							Required:    true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `renameTeam`,
				Description: `Renames one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting API Key must have the Organization Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/orgs/{orgId}/teams/{teamId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `orgId`,
							Description: `Unique 24-hexadecimal digit string that identifies the organization that contains your projects. Use the /orgs endpoint to retrieve all organizations to which the authenticated user has access.`,
							Required:    true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team that you want to rename.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateTeamRoles`,
				Description: `Updates the project roles assigned to the specified team. You can grant team roles for specific projects and grant project access roles to users in the team. All members of the team share the same project access. To use this resource, the requesting API Key must have the Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/teams/{teamId}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `teamId`,
							Description: `Unique 24-hexadecimal digit string that identifies the team for which you want to update roles.`,
							Required:    true,
						},
					},
					Verb: http.MethodPatch,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `Test`,
		Description: `Atlas test endpoints.`,
		Commands: []Command{
			{
				OperationID: `versionedExample`,
				Description: `Returns some text dummy data for test purposes.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/example/info`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `additionalInfo`,
							Description: `Show more info.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{},
					Verb:          http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
					{
						Version:             `2023-02-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name: `Third-Party Integrations`,
		Description: `Returns, adds, edits, and removes third-party service integration configurations. MongoDB Cloud sends alerts to each third-party service that you configure.


IMPORTANT: Each project can only have one configuration per integrationType.`,
		Commands: []Command{
			{
				OperationID: `createThirdPartyIntegration`,
				Description: `Adds the settings for configuring one third-party service integration. These settings apply to all databases managed in the specified MongoDB Cloud project. Each project can have only one configuration per {INTEGRATION-TYPE}. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/integrations/{integrationType}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `integrationType`,
							Description: `Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `deleteThirdPartyIntegration`,
				Description: `Removes the settings that permit configuring one third-party service integration. These settings apply to all databases managed in one MongoDB Cloud project. If you delete an integration from a project, you remove that integration configuration only for that project. This action doesn&#39;t affect any other project or organization&#39;s configured {INTEGRATION-TYPE} integrations. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/integrations/{integrationType}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `integrationType`,
							Description: `Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `getThirdPartyIntegration`,
				Description: `Returns the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/integrations/{integrationType}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `integrationType`,
							Description: `Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listThirdPartyIntegrations`,
				Description: `Returns the settings that permit integrations with all configured third-party services. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/integrations`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `updateThirdPartyIntegration`,
				Description: `Updates the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting API Key must have the Organization Owner or Project Owner role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/integrations/{integrationType}`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name:        `integrationType`,
							Description: `Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.`,
							Required:    true,
						},
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodPut,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
	{
		Name:        `X.509 Authentication`,
		Description: `Returns, edits, and removes user-managed X.509 configurations. Also returns and generates MongoDB Cloud-managed X.509 certificates for database users. The following resources help manage database users who authenticate using X.509 certificates. You can manage these X.509 certificates or let MongoDB Cloud do it for you. If MongoDB Cloud manages your certificates, it also manages your Certificate Authority and can generate certificates for your database users. No additional X.509 configuration is required. If you manage your certificates, you must provide a Certificate Authority and generate certificates for your database users.`,
		Commands: []Command{
			{
				OperationID: `createDatabaseUserCertificate`,
				Description: `Generates one X.509 certificate for the specified MongoDB user. Atlas manages the certificate and MongoDB user that belong to one project. To use this resource, the requesting API Key must have the Project Owner role.


To get MongoDB Cloud to generate a managed certificate for a database user, set &#34;x509Type&#34; : &#34;MANAGED&#34; on the desired MongoDB Database User.


If you are managing your own Certificate Authority (CA) in Self-Managed X.509 mode, you must generate certificates for database users using your own CA.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers/{username}/certs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `username`,
							Description: `Human-readable label that represents the MongoDB database user account for whom to create a certificate.`,
							Required:    true,
						},
					},
					Verb: http.MethodPost,
				},
				Versions: []Version{
					{
						Version: `2023-01-01`,
						RequestContentTypes: []string{
							`json`,
						},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `disableCustomerManagedX509`,
				Description: `Clears the customer-managed X.509 settings on a project, including the uploaded Certificate Authority, which disables self-managed X.509.


Updating this configuration triggers a rolling restart of the database. You must have the Project Owner role to use this endpoint.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/userSecurity/customerX509`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
					},
					Verb: http.MethodDelete,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
			{
				OperationID: `listDatabaseUserCertificates`,
				Description: `Returns all unexpired X.509 certificates for the specified MongoDB user. This MongoDB user belongs to one project. Atlas manages these certificates and the MongoDB user. To use this resource, the requesting API Key must have the Project Read Only role.`,
				RequestParameters: RequestParameters{
					URL: `/api/atlas/v2/groups/{groupId}/databaseUsers/{username}/certs`,
					QueryParameters: []Parameter{
						{
							Name:        `envelope`,
							Description: `Flag that indicates whether Application wraps the response in an envelope JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.`,
							Required:    false,
						},
						{
							Name:        `includeCount`,
							Description: `Flag that indicates whether the response returns the total number of items (totalCount) in the response.`,
							Required:    false,
						},
						{
							Name:        `itemsPerPage`,
							Description: `Number of items that the response returns per page.`,
							Required:    false,
						},
						{
							Name:        `pageNum`,
							Description: `Number of the page that displays the current set of the total objects that the response returns.`,
							Required:    false,
						},
						{
							Name:        `pretty`,
							Description: `Flag that indicates whether the response body should be in the prettyprint format.`,
							Required:    false,
						},
					},
					URLParameters: []Parameter{
						{
							Name: `groupId`,
							Description: `Unique 24-hexadecimal digit string that identifies your project. Use the /groups endpoint to retrieve all projects to which the authenticated user has access.


NOTE: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.`,
							Required: true,
						},
						{
							Name:        `username`,
							Description: `Human-readable label that represents the MongoDB database user account whose certificates you want to return.`,
							Required:    true,
						},
					},
					Verb: http.MethodGet,
				},
				Versions: []Version{
					{
						Version:             `2023-01-01`,
						RequestContentTypes: []string{},
						ResponseContentTypes: []string{
							`json`,
						},
					},
				},
			},
		},
	},
}
