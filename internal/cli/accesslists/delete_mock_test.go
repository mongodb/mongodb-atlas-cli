// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/accesslists (interfaces: ProjectIPAccessListDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=accesslists . ProjectIPAccessListDeleter
//

// Package accesslists is a generated GoMock package.
package accesslists

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockProjectIPAccessListDeleter is a mock of ProjectIPAccessListDeleter interface.
type MockProjectIPAccessListDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockProjectIPAccessListDeleterMockRecorder
	isgomock struct{}
}

// MockProjectIPAccessListDeleterMockRecorder is the mock recorder for MockProjectIPAccessListDeleter.
type MockProjectIPAccessListDeleterMockRecorder struct {
	mock *MockProjectIPAccessListDeleter
}

// NewMockProjectIPAccessListDeleter creates a new mock instance.
func NewMockProjectIPAccessListDeleter(ctrl *gomock.Controller) *MockProjectIPAccessListDeleter {
	mock := &MockProjectIPAccessListDeleter{ctrl: ctrl}
	mock.recorder = &MockProjectIPAccessListDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectIPAccessListDeleter) EXPECT() *MockProjectIPAccessListDeleterMockRecorder {
	return m.recorder
}

// DeleteProjectIPAccessList mocks base method.
func (m *MockProjectIPAccessListDeleter) DeleteProjectIPAccessList(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProjectIPAccessList", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProjectIPAccessList indicates an expected call of DeleteProjectIPAccessList.
func (mr *MockProjectIPAccessListDeleterMockRecorder) DeleteProjectIPAccessList(arg0, arg1 any) *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProjectIPAccessList", reflect.TypeOf((*MockProjectIPAccessListDeleter)(nil).DeleteProjectIPAccessList), arg0, arg1)
	return &MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall{Call: call}
}

// MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall wrap *gomock.Call
type MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall) Return(arg0 error) *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall) Do(f func(string, string) error) *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall) DoAndReturn(f func(string, string) error) *MockProjectIPAccessListDeleterDeleteProjectIPAccessListCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
