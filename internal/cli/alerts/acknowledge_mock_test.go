// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts (interfaces: AlertAcknowledger)
//
// Generated by this command:
//
//	mockgen -typed -destination=acknowledge_mock_test.go -package=alerts . AlertAcknowledger
//

// Package alerts is a generated GoMock package.
package alerts

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertAcknowledger is a mock of AlertAcknowledger interface.
type MockAlertAcknowledger struct {
	ctrl     *gomock.Controller
	recorder *MockAlertAcknowledgerMockRecorder
	isgomock struct{}
}

// MockAlertAcknowledgerMockRecorder is the mock recorder for MockAlertAcknowledger.
type MockAlertAcknowledgerMockRecorder struct {
	mock *MockAlertAcknowledger
}

// NewMockAlertAcknowledger creates a new mock instance.
func NewMockAlertAcknowledger(ctrl *gomock.Controller) *MockAlertAcknowledger {
	mock := &MockAlertAcknowledger{ctrl: ctrl}
	mock.recorder = &MockAlertAcknowledgerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertAcknowledger) EXPECT() *MockAlertAcknowledgerMockRecorder {
	return m.recorder
}

// AcknowledgeAlert mocks base method.
func (m *MockAlertAcknowledger) AcknowledgeAlert(arg0 *admin.AcknowledgeAlertApiParams) (*admin.AlertViewForNdsGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AcknowledgeAlert", arg0)
	ret0, _ := ret[0].(*admin.AlertViewForNdsGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcknowledgeAlert indicates an expected call of AcknowledgeAlert.
func (mr *MockAlertAcknowledgerMockRecorder) AcknowledgeAlert(arg0 any) *MockAlertAcknowledgerAcknowledgeAlertCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcknowledgeAlert", reflect.TypeOf((*MockAlertAcknowledger)(nil).AcknowledgeAlert), arg0)
	return &MockAlertAcknowledgerAcknowledgeAlertCall{Call: call}
}

// MockAlertAcknowledgerAcknowledgeAlertCall wrap *gomock.Call
type MockAlertAcknowledgerAcknowledgeAlertCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAlertAcknowledgerAcknowledgeAlertCall) Return(arg0 *admin.AlertViewForNdsGroup, arg1 error) *MockAlertAcknowledgerAcknowledgeAlertCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAlertAcknowledgerAcknowledgeAlertCall) Do(f func(*admin.AcknowledgeAlertApiParams) (*admin.AlertViewForNdsGroup, error)) *MockAlertAcknowledgerAcknowledgeAlertCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAlertAcknowledgerAcknowledgeAlertCall) DoAndReturn(f func(*admin.AcknowledgeAlertApiParams) (*admin.AlertViewForNdsGroup, error)) *MockAlertAcknowledgerAcknowledgeAlertCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
