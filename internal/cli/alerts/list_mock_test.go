// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts (interfaces: AlertLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=alerts . AlertLister
//

// Package alerts is a generated GoMock package.
package alerts

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertLister is a mock of AlertLister interface.
type MockAlertLister struct {
	ctrl     *gomock.Controller
	recorder *MockAlertListerMockRecorder
	isgomock struct{}
}

// MockAlertListerMockRecorder is the mock recorder for MockAlertLister.
type MockAlertListerMockRecorder struct {
	mock *MockAlertLister
}

// NewMockAlertLister creates a new mock instance.
func NewMockAlertLister(ctrl *gomock.Controller) *MockAlertLister {
	mock := &MockAlertLister{ctrl: ctrl}
	mock.recorder = &MockAlertListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertLister) EXPECT() *MockAlertListerMockRecorder {
	return m.recorder
}

// Alerts mocks base method.
func (m *MockAlertLister) Alerts(arg0 *admin.ListAlertsApiParams) (*admin.PaginatedAlert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Alerts", arg0)
	ret0, _ := ret[0].(*admin.PaginatedAlert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Alerts indicates an expected call of Alerts.
func (mr *MockAlertListerMockRecorder) Alerts(arg0 any) *MockAlertListerAlertsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Alerts", reflect.TypeOf((*MockAlertLister)(nil).Alerts), arg0)
	return &MockAlertListerAlertsCall{Call: call}
}

// MockAlertListerAlertsCall wrap *gomock.Call
type MockAlertListerAlertsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAlertListerAlertsCall) Return(arg0 *admin.PaginatedAlert, arg1 error) *MockAlertListerAlertsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAlertListerAlertsCall) Do(f func(*admin.ListAlertsApiParams) (*admin.PaginatedAlert, error)) *MockAlertListerAlertsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAlertListerAlertsCall) DoAndReturn(f func(*admin.ListAlertsApiParams) (*admin.PaginatedAlert, error)) *MockAlertListerAlertsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
