// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts/settings (interfaces: AlertConfigurationCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=settings . AlertConfigurationCreator
//

// Package settings is a generated GoMock package.
package settings

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertConfigurationCreator is a mock of AlertConfigurationCreator interface.
type MockAlertConfigurationCreator struct {
	ctrl     *gomock.Controller
	recorder *MockAlertConfigurationCreatorMockRecorder
	isgomock struct{}
}

// MockAlertConfigurationCreatorMockRecorder is the mock recorder for MockAlertConfigurationCreator.
type MockAlertConfigurationCreatorMockRecorder struct {
	mock *MockAlertConfigurationCreator
}

// NewMockAlertConfigurationCreator creates a new mock instance.
func NewMockAlertConfigurationCreator(ctrl *gomock.Controller) *MockAlertConfigurationCreator {
	mock := &MockAlertConfigurationCreator{ctrl: ctrl}
	mock.recorder = &MockAlertConfigurationCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertConfigurationCreator) EXPECT() *MockAlertConfigurationCreatorMockRecorder {
	return m.recorder
}

// CreateAlertConfiguration mocks base method.
func (m *MockAlertConfigurationCreator) CreateAlertConfiguration(arg0 *admin.GroupAlertsConfig) (*admin.GroupAlertsConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAlertConfiguration", arg0)
	ret0, _ := ret[0].(*admin.GroupAlertsConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAlertConfiguration indicates an expected call of CreateAlertConfiguration.
func (mr *MockAlertConfigurationCreatorMockRecorder) CreateAlertConfiguration(arg0 any) *MockAlertConfigurationCreatorCreateAlertConfigurationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAlertConfiguration", reflect.TypeOf((*MockAlertConfigurationCreator)(nil).CreateAlertConfiguration), arg0)
	return &MockAlertConfigurationCreatorCreateAlertConfigurationCall{Call: call}
}

// MockAlertConfigurationCreatorCreateAlertConfigurationCall wrap *gomock.Call
type MockAlertConfigurationCreatorCreateAlertConfigurationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAlertConfigurationCreatorCreateAlertConfigurationCall) Return(arg0 *admin.GroupAlertsConfig, arg1 error) *MockAlertConfigurationCreatorCreateAlertConfigurationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAlertConfigurationCreatorCreateAlertConfigurationCall) Do(f func(*admin.GroupAlertsConfig) (*admin.GroupAlertsConfig, error)) *MockAlertConfigurationCreatorCreateAlertConfigurationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAlertConfigurationCreatorCreateAlertConfigurationCall) DoAndReturn(f func(*admin.GroupAlertsConfig) (*admin.GroupAlertsConfig, error)) *MockAlertConfigurationCreatorCreateAlertConfigurationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
