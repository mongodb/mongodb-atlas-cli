// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts/settings (interfaces: AlertConfigurationDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=settings . AlertConfigurationDescriber
//

// Package settings is a generated GoMock package.
package settings

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertConfigurationDescriber is a mock of AlertConfigurationDescriber interface.
type MockAlertConfigurationDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockAlertConfigurationDescriberMockRecorder
	isgomock struct{}
}

// MockAlertConfigurationDescriberMockRecorder is the mock recorder for MockAlertConfigurationDescriber.
type MockAlertConfigurationDescriberMockRecorder struct {
	mock *MockAlertConfigurationDescriber
}

// NewMockAlertConfigurationDescriber creates a new mock instance.
func NewMockAlertConfigurationDescriber(ctrl *gomock.Controller) *MockAlertConfigurationDescriber {
	mock := &MockAlertConfigurationDescriber{ctrl: ctrl}
	mock.recorder = &MockAlertConfigurationDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertConfigurationDescriber) EXPECT() *MockAlertConfigurationDescriberMockRecorder {
	return m.recorder
}

// AlertConfiguration mocks base method.
func (m *MockAlertConfigurationDescriber) AlertConfiguration(arg0, arg1 string) (*admin.GroupAlertsConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlertConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*admin.GroupAlertsConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AlertConfiguration indicates an expected call of AlertConfiguration.
func (mr *MockAlertConfigurationDescriberMockRecorder) AlertConfiguration(arg0, arg1 any) *MockAlertConfigurationDescriberAlertConfigurationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlertConfiguration", reflect.TypeOf((*MockAlertConfigurationDescriber)(nil).AlertConfiguration), arg0, arg1)
	return &MockAlertConfigurationDescriberAlertConfigurationCall{Call: call}
}

// MockAlertConfigurationDescriberAlertConfigurationCall wrap *gomock.Call
type MockAlertConfigurationDescriberAlertConfigurationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAlertConfigurationDescriberAlertConfigurationCall) Return(arg0 *admin.GroupAlertsConfig, arg1 error) *MockAlertConfigurationDescriberAlertConfigurationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAlertConfigurationDescriberAlertConfigurationCall) Do(f func(string, string) (*admin.GroupAlertsConfig, error)) *MockAlertConfigurationDescriberAlertConfigurationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAlertConfigurationDescriberAlertConfigurationCall) DoAndReturn(f func(string, string) (*admin.GroupAlertsConfig, error)) *MockAlertConfigurationDescriberAlertConfigurationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
