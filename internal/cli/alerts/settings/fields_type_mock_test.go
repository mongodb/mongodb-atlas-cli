// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts/settings (interfaces: MatcherFieldsLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=fields_type_mock_test.go -package=settings . MatcherFieldsLister
//

// Package settings is a generated GoMock package.
package settings

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMatcherFieldsLister is a mock of MatcherFieldsLister interface.
type MockMatcherFieldsLister struct {
	ctrl     *gomock.Controller
	recorder *MockMatcherFieldsListerMockRecorder
	isgomock struct{}
}

// MockMatcherFieldsListerMockRecorder is the mock recorder for MockMatcherFieldsLister.
type MockMatcherFieldsListerMockRecorder struct {
	mock *MockMatcherFieldsLister
}

// NewMockMatcherFieldsLister creates a new mock instance.
func NewMockMatcherFieldsLister(ctrl *gomock.Controller) *MockMatcherFieldsLister {
	mock := &MockMatcherFieldsLister{ctrl: ctrl}
	mock.recorder = &MockMatcherFieldsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMatcherFieldsLister) EXPECT() *MockMatcherFieldsListerMockRecorder {
	return m.recorder
}

// MatcherFields mocks base method.
func (m *MockMatcherFieldsLister) MatcherFields() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MatcherFields")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MatcherFields indicates an expected call of MatcherFields.
func (mr *MockMatcherFieldsListerMockRecorder) MatcherFields() *MockMatcherFieldsListerMatcherFieldsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MatcherFields", reflect.TypeOf((*MockMatcherFieldsLister)(nil).MatcherFields))
	return &MockMatcherFieldsListerMatcherFieldsCall{Call: call}
}

// MockMatcherFieldsListerMatcherFieldsCall wrap *gomock.Call
type MockMatcherFieldsListerMatcherFieldsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockMatcherFieldsListerMatcherFieldsCall) Return(arg0 []string, arg1 error) *MockMatcherFieldsListerMatcherFieldsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockMatcherFieldsListerMatcherFieldsCall) Do(f func() ([]string, error)) *MockMatcherFieldsListerMatcherFieldsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockMatcherFieldsListerMatcherFieldsCall) DoAndReturn(f func() ([]string, error)) *MockMatcherFieldsListerMatcherFieldsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
