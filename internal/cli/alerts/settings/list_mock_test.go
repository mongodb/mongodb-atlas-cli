// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/alerts/settings (interfaces: AlertConfigurationLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=settings . AlertConfigurationLister
//

// Package settings is a generated GoMock package.
package settings

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAlertConfigurationLister is a mock of AlertConfigurationLister interface.
type MockAlertConfigurationLister struct {
	ctrl     *gomock.Controller
	recorder *MockAlertConfigurationListerMockRecorder
	isgomock struct{}
}

// MockAlertConfigurationListerMockRecorder is the mock recorder for MockAlertConfigurationLister.
type MockAlertConfigurationListerMockRecorder struct {
	mock *MockAlertConfigurationLister
}

// NewMockAlertConfigurationLister creates a new mock instance.
func NewMockAlertConfigurationLister(ctrl *gomock.Controller) *MockAlertConfigurationLister {
	mock := &MockAlertConfigurationLister{ctrl: ctrl}
	mock.recorder = &MockAlertConfigurationListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertConfigurationLister) EXPECT() *MockAlertConfigurationListerMockRecorder {
	return m.recorder
}

// AlertConfigurations mocks base method.
func (m *MockAlertConfigurationLister) AlertConfigurations(arg0 *admin.ListAlertConfigurationsApiParams) (*admin.PaginatedAlertConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlertConfigurations", arg0)
	ret0, _ := ret[0].(*admin.PaginatedAlertConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AlertConfigurations indicates an expected call of AlertConfigurations.
func (mr *MockAlertConfigurationListerMockRecorder) AlertConfigurations(arg0 any) *MockAlertConfigurationListerAlertConfigurationsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlertConfigurations", reflect.TypeOf((*MockAlertConfigurationLister)(nil).AlertConfigurations), arg0)
	return &MockAlertConfigurationListerAlertConfigurationsCall{Call: call}
}

// MockAlertConfigurationListerAlertConfigurationsCall wrap *gomock.Call
type MockAlertConfigurationListerAlertConfigurationsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAlertConfigurationListerAlertConfigurationsCall) Return(arg0 *admin.PaginatedAlertConfig, arg1 error) *MockAlertConfigurationListerAlertConfigurationsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAlertConfigurationListerAlertConfigurationsCall) Do(f func(*admin.ListAlertConfigurationsApiParams) (*admin.PaginatedAlertConfig, error)) *MockAlertConfigurationListerAlertConfigurationsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAlertConfigurationListerAlertConfigurationsCall) DoAndReturn(f func(*admin.ListAlertConfigurationsApiParams) (*admin.PaginatedAlertConfig, error)) *MockAlertConfigurationListerAlertConfigurationsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
