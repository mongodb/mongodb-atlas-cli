// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/compliancepolicy/copyprotection (interfaces: CompliancePolicyCopyProtectionEnabler)
//
// Generated by this command:
//
//	mockgen -typed -destination=enable_mock_test.go -package=copyprotection . CompliancePolicyCopyProtectionEnabler
//

// Package copyprotection is a generated GoMock package.
package copyprotection

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCompliancePolicyCopyProtectionEnabler is a mock of CompliancePolicyCopyProtectionEnabler interface.
type MockCompliancePolicyCopyProtectionEnabler struct {
	ctrl     *gomock.Controller
	recorder *MockCompliancePolicyCopyProtectionEnablerMockRecorder
	isgomock struct{}
}

// MockCompliancePolicyCopyProtectionEnablerMockRecorder is the mock recorder for MockCompliancePolicyCopyProtectionEnabler.
type MockCompliancePolicyCopyProtectionEnablerMockRecorder struct {
	mock *MockCompliancePolicyCopyProtectionEnabler
}

// NewMockCompliancePolicyCopyProtectionEnabler creates a new mock instance.
func NewMockCompliancePolicyCopyProtectionEnabler(ctrl *gomock.Controller) *MockCompliancePolicyCopyProtectionEnabler {
	mock := &MockCompliancePolicyCopyProtectionEnabler{ctrl: ctrl}
	mock.recorder = &MockCompliancePolicyCopyProtectionEnablerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCompliancePolicyCopyProtectionEnabler) EXPECT() *MockCompliancePolicyCopyProtectionEnablerMockRecorder {
	return m.recorder
}

// DescribeCompliancePolicy mocks base method.
func (m *MockCompliancePolicyCopyProtectionEnabler) DescribeCompliancePolicy(projectID string) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCompliancePolicy", projectID)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCompliancePolicy indicates an expected call of DescribeCompliancePolicy.
func (mr *MockCompliancePolicyCopyProtectionEnablerMockRecorder) DescribeCompliancePolicy(projectID any) *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCompliancePolicy", reflect.TypeOf((*MockCompliancePolicyCopyProtectionEnabler)(nil).DescribeCompliancePolicy), projectID)
	return &MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall{Call: call}
}

// MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall wrap *gomock.Call
type MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall) Do(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall) DoAndReturn(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyCopyProtectionEnablerDescribeCompliancePolicyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// EnableCopyProtection mocks base method.
func (m *MockCompliancePolicyCopyProtectionEnabler) EnableCopyProtection(projectID string) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnableCopyProtection", projectID)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnableCopyProtection indicates an expected call of EnableCopyProtection.
func (mr *MockCompliancePolicyCopyProtectionEnablerMockRecorder) EnableCopyProtection(projectID any) *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnableCopyProtection", reflect.TypeOf((*MockCompliancePolicyCopyProtectionEnabler)(nil).EnableCopyProtection), projectID)
	return &MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall{Call: call}
}

// MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall wrap *gomock.Call
type MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall) Do(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall) DoAndReturn(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyCopyProtectionEnablerEnableCopyProtectionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
