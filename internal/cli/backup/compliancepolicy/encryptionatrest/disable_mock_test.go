// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/compliancepolicy/encryptionatrest (interfaces: CompliancePolicyEncryptionAtRestDisabler)
//
// Generated by this command:
//
//	mockgen -typed -destination=disable_mock_test.go -package=encryptionatrest . CompliancePolicyEncryptionAtRestDisabler
//

// Package encryptionatrest is a generated GoMock package.
package encryptionatrest

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCompliancePolicyEncryptionAtRestDisabler is a mock of CompliancePolicyEncryptionAtRestDisabler interface.
type MockCompliancePolicyEncryptionAtRestDisabler struct {
	ctrl     *gomock.Controller
	recorder *MockCompliancePolicyEncryptionAtRestDisablerMockRecorder
	isgomock struct{}
}

// MockCompliancePolicyEncryptionAtRestDisablerMockRecorder is the mock recorder for MockCompliancePolicyEncryptionAtRestDisabler.
type MockCompliancePolicyEncryptionAtRestDisablerMockRecorder struct {
	mock *MockCompliancePolicyEncryptionAtRestDisabler
}

// NewMockCompliancePolicyEncryptionAtRestDisabler creates a new mock instance.
func NewMockCompliancePolicyEncryptionAtRestDisabler(ctrl *gomock.Controller) *MockCompliancePolicyEncryptionAtRestDisabler {
	mock := &MockCompliancePolicyEncryptionAtRestDisabler{ctrl: ctrl}
	mock.recorder = &MockCompliancePolicyEncryptionAtRestDisablerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCompliancePolicyEncryptionAtRestDisabler) EXPECT() *MockCompliancePolicyEncryptionAtRestDisablerMockRecorder {
	return m.recorder
}

// DescribeCompliancePolicy mocks base method.
func (m *MockCompliancePolicyEncryptionAtRestDisabler) DescribeCompliancePolicy(projectID string) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCompliancePolicy", projectID)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCompliancePolicy indicates an expected call of DescribeCompliancePolicy.
func (mr *MockCompliancePolicyEncryptionAtRestDisablerMockRecorder) DescribeCompliancePolicy(projectID any) *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCompliancePolicy", reflect.TypeOf((*MockCompliancePolicyEncryptionAtRestDisabler)(nil).DescribeCompliancePolicy), projectID)
	return &MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall{Call: call}
}

// MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall wrap *gomock.Call
type MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall) Do(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall) DoAndReturn(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyEncryptionAtRestDisablerDescribeCompliancePolicyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// DisableEncryptionAtRest mocks base method.
func (m *MockCompliancePolicyEncryptionAtRestDisabler) DisableEncryptionAtRest(projectID string) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisableEncryptionAtRest", projectID)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisableEncryptionAtRest indicates an expected call of DisableEncryptionAtRest.
func (mr *MockCompliancePolicyEncryptionAtRestDisablerMockRecorder) DisableEncryptionAtRest(projectID any) *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisableEncryptionAtRest", reflect.TypeOf((*MockCompliancePolicyEncryptionAtRestDisabler)(nil).DisableEncryptionAtRest), projectID)
	return &MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall{Call: call}
}

// MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall wrap *gomock.Call
type MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall) Do(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall) DoAndReturn(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyEncryptionAtRestDisablerDisableEncryptionAtRestCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
