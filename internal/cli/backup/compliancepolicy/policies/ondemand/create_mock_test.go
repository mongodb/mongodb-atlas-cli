// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/compliancepolicy/policies/ondemand (interfaces: CompliancePolicyOnDemandPolicyCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=ondemand . CompliancePolicyOnDemandPolicyCreator
//

// Package ondemand is a generated GoMock package.
package ondemand

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCompliancePolicyOnDemandPolicyCreator is a mock of CompliancePolicyOnDemandPolicyCreator interface.
type MockCompliancePolicyOnDemandPolicyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCompliancePolicyOnDemandPolicyCreatorMockRecorder
	isgomock struct{}
}

// MockCompliancePolicyOnDemandPolicyCreatorMockRecorder is the mock recorder for MockCompliancePolicyOnDemandPolicyCreator.
type MockCompliancePolicyOnDemandPolicyCreatorMockRecorder struct {
	mock *MockCompliancePolicyOnDemandPolicyCreator
}

// NewMockCompliancePolicyOnDemandPolicyCreator creates a new mock instance.
func NewMockCompliancePolicyOnDemandPolicyCreator(ctrl *gomock.Controller) *MockCompliancePolicyOnDemandPolicyCreator {
	mock := &MockCompliancePolicyOnDemandPolicyCreator{ctrl: ctrl}
	mock.recorder = &MockCompliancePolicyOnDemandPolicyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCompliancePolicyOnDemandPolicyCreator) EXPECT() *MockCompliancePolicyOnDemandPolicyCreatorMockRecorder {
	return m.recorder
}

// CreateOnDemandPolicy mocks base method.
func (m *MockCompliancePolicyOnDemandPolicyCreator) CreateOnDemandPolicy(projectID string, policy *admin.BackupComplianceOnDemandPolicyItem) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOnDemandPolicy", projectID, policy)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOnDemandPolicy indicates an expected call of CreateOnDemandPolicy.
func (mr *MockCompliancePolicyOnDemandPolicyCreatorMockRecorder) CreateOnDemandPolicy(projectID, policy any) *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOnDemandPolicy", reflect.TypeOf((*MockCompliancePolicyOnDemandPolicyCreator)(nil).CreateOnDemandPolicy), projectID, policy)
	return &MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall{Call: call}
}

// MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall wrap *gomock.Call
type MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall) Do(f func(string, *admin.BackupComplianceOnDemandPolicyItem) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall) DoAndReturn(f func(string, *admin.BackupComplianceOnDemandPolicyItem) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyOnDemandPolicyCreatorCreateOnDemandPolicyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// DescribeCompliancePolicy mocks base method.
func (m *MockCompliancePolicyOnDemandPolicyCreator) DescribeCompliancePolicy(projectID string) (*admin.DataProtectionSettings20231001, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCompliancePolicy", projectID)
	ret0, _ := ret[0].(*admin.DataProtectionSettings20231001)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCompliancePolicy indicates an expected call of DescribeCompliancePolicy.
func (mr *MockCompliancePolicyOnDemandPolicyCreatorMockRecorder) DescribeCompliancePolicy(projectID any) *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCompliancePolicy", reflect.TypeOf((*MockCompliancePolicyOnDemandPolicyCreator)(nil).DescribeCompliancePolicy), projectID)
	return &MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall{Call: call}
}

// MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall wrap *gomock.Call
type MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall) Return(arg0 *admin.DataProtectionSettings20231001, arg1 error) *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall) Do(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall) DoAndReturn(f func(string) (*admin.DataProtectionSettings20231001, error)) *MockCompliancePolicyOnDemandPolicyCreatorDescribeCompliancePolicyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
