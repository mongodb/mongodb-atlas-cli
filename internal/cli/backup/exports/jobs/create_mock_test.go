// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/exports/jobs (interfaces: ExportJobsCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=jobs . ExportJobsCreator
//

// Package jobs is a generated GoMock package.
package jobs

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockExportJobsCreator is a mock of ExportJobsCreator interface.
type MockExportJobsCreator struct {
	ctrl     *gomock.Controller
	recorder *MockExportJobsCreatorMockRecorder
	isgomock struct{}
}

// MockExportJobsCreatorMockRecorder is the mock recorder for MockExportJobsCreator.
type MockExportJobsCreatorMockRecorder struct {
	mock *MockExportJobsCreator
}

// NewMockExportJobsCreator creates a new mock instance.
func NewMockExportJobsCreator(ctrl *gomock.Controller) *MockExportJobsCreator {
	mock := &MockExportJobsCreator{ctrl: ctrl}
	mock.recorder = &MockExportJobsCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExportJobsCreator) EXPECT() *MockExportJobsCreatorMockRecorder {
	return m.recorder
}

// CreateExportJob mocks base method.
func (m *MockExportJobsCreator) CreateExportJob(arg0, arg1 string, arg2 *admin.DiskBackupExportJobRequest) (*admin.DiskBackupExportJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateExportJob", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.DiskBackupExportJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateExportJob indicates an expected call of CreateExportJob.
func (mr *MockExportJobsCreatorMockRecorder) CreateExportJob(arg0, arg1, arg2 any) *MockExportJobsCreatorCreateExportJobCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateExportJob", reflect.TypeOf((*MockExportJobsCreator)(nil).CreateExportJob), arg0, arg1, arg2)
	return &MockExportJobsCreatorCreateExportJobCall{Call: call}
}

// MockExportJobsCreatorCreateExportJobCall wrap *gomock.Call
type MockExportJobsCreatorCreateExportJobCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockExportJobsCreatorCreateExportJobCall) Return(arg0 *admin.DiskBackupExportJob, arg1 error) *MockExportJobsCreatorCreateExportJobCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockExportJobsCreatorCreateExportJobCall) Do(f func(string, string, *admin.DiskBackupExportJobRequest) (*admin.DiskBackupExportJob, error)) *MockExportJobsCreatorCreateExportJobCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockExportJobsCreatorCreateExportJobCall) DoAndReturn(f func(string, string, *admin.DiskBackupExportJobRequest) (*admin.DiskBackupExportJob, error)) *MockExportJobsCreatorCreateExportJobCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
