// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/exports/jobs (interfaces: ExportJobsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=jobs . ExportJobsDescriber
//

// Package jobs is a generated GoMock package.
package jobs

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockExportJobsDescriber is a mock of ExportJobsDescriber interface.
type MockExportJobsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockExportJobsDescriberMockRecorder
	isgomock struct{}
}

// MockExportJobsDescriberMockRecorder is the mock recorder for MockExportJobsDescriber.
type MockExportJobsDescriberMockRecorder struct {
	mock *MockExportJobsDescriber
}

// NewMockExportJobsDescriber creates a new mock instance.
func NewMockExportJobsDescriber(ctrl *gomock.Controller) *MockExportJobsDescriber {
	mock := &MockExportJobsDescriber{ctrl: ctrl}
	mock.recorder = &MockExportJobsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExportJobsDescriber) EXPECT() *MockExportJobsDescriberMockRecorder {
	return m.recorder
}

// ExportJob mocks base method.
func (m *MockExportJobsDescriber) ExportJob(arg0, arg1, arg2 string) (*admin.DiskBackupExportJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportJob", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.DiskBackupExportJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportJob indicates an expected call of ExportJob.
func (mr *MockExportJobsDescriberMockRecorder) ExportJob(arg0, arg1, arg2 any) *MockExportJobsDescriberExportJobCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportJob", reflect.TypeOf((*MockExportJobsDescriber)(nil).ExportJob), arg0, arg1, arg2)
	return &MockExportJobsDescriberExportJobCall{Call: call}
}

// MockExportJobsDescriberExportJobCall wrap *gomock.Call
type MockExportJobsDescriberExportJobCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockExportJobsDescriberExportJobCall) Return(arg0 *admin.DiskBackupExportJob, arg1 error) *MockExportJobsDescriberExportJobCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockExportJobsDescriberExportJobCall) Do(f func(string, string, string) (*admin.DiskBackupExportJob, error)) *MockExportJobsDescriberExportJobCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockExportJobsDescriberExportJobCall) DoAndReturn(f func(string, string, string) (*admin.DiskBackupExportJob, error)) *MockExportJobsDescriberExportJobCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
