// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/exports/jobs (interfaces: ExportJobsLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=jobs . ExportJobsLister
//

// Package jobs is a generated GoMock package.
package jobs

import (
	reflect "reflect"

	store "github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store"
	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockExportJobsLister is a mock of ExportJobsLister interface.
type MockExportJobsLister struct {
	ctrl     *gomock.Controller
	recorder *MockExportJobsListerMockRecorder
	isgomock struct{}
}

// MockExportJobsListerMockRecorder is the mock recorder for MockExportJobsLister.
type MockExportJobsListerMockRecorder struct {
	mock *MockExportJobsLister
}

// NewMockExportJobsLister creates a new mock instance.
func NewMockExportJobsLister(ctrl *gomock.Controller) *MockExportJobsLister {
	mock := &MockExportJobsLister{ctrl: ctrl}
	mock.recorder = &MockExportJobsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExportJobsLister) EXPECT() *MockExportJobsListerMockRecorder {
	return m.recorder
}

// ExportJobs mocks base method.
func (m *MockExportJobsLister) ExportJobs(arg0, arg1 string, arg2 *store.ListOptions) (*admin.PaginatedApiAtlasDiskBackupExportJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportJobs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.PaginatedApiAtlasDiskBackupExportJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportJobs indicates an expected call of ExportJobs.
func (mr *MockExportJobsListerMockRecorder) ExportJobs(arg0, arg1, arg2 any) *MockExportJobsListerExportJobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportJobs", reflect.TypeOf((*MockExportJobsLister)(nil).ExportJobs), arg0, arg1, arg2)
	return &MockExportJobsListerExportJobsCall{Call: call}
}

// MockExportJobsListerExportJobsCall wrap *gomock.Call
type MockExportJobsListerExportJobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockExportJobsListerExportJobsCall) Return(arg0 *admin.PaginatedApiAtlasDiskBackupExportJob, arg1 error) *MockExportJobsListerExportJobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockExportJobsListerExportJobsCall) Do(f func(string, string, *store.ListOptions) (*admin.PaginatedApiAtlasDiskBackupExportJob, error)) *MockExportJobsListerExportJobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockExportJobsListerExportJobsCall) DoAndReturn(f func(string, string, *store.ListOptions) (*admin.PaginatedApiAtlasDiskBackupExportJob, error)) *MockExportJobsListerExportJobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
