// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/restores (interfaces: RestoreJobsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=restores . RestoreJobsDescriber
//

// Package restores is a generated GoMock package.
package restores

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockRestoreJobsDescriber is a mock of RestoreJobsDescriber interface.
type MockRestoreJobsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockRestoreJobsDescriberMockRecorder
	isgomock struct{}
}

// MockRestoreJobsDescriberMockRecorder is the mock recorder for MockRestoreJobsDescriber.
type MockRestoreJobsDescriberMockRecorder struct {
	mock *MockRestoreJobsDescriber
}

// NewMockRestoreJobsDescriber creates a new mock instance.
func NewMockRestoreJobsDescriber(ctrl *gomock.Controller) *MockRestoreJobsDescriber {
	mock := &MockRestoreJobsDescriber{ctrl: ctrl}
	mock.recorder = &MockRestoreJobsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestoreJobsDescriber) EXPECT() *MockRestoreJobsDescriberMockRecorder {
	return m.recorder
}

// RestoreFlexClusterJob mocks base method.
func (m *MockRestoreJobsDescriber) RestoreFlexClusterJob(arg0, arg1, arg2 string) (*admin.FlexBackupRestoreJob20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestoreFlexClusterJob", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.FlexBackupRestoreJob20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RestoreFlexClusterJob indicates an expected call of RestoreFlexClusterJob.
func (mr *MockRestoreJobsDescriberMockRecorder) RestoreFlexClusterJob(arg0, arg1, arg2 any) *MockRestoreJobsDescriberRestoreFlexClusterJobCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreFlexClusterJob", reflect.TypeOf((*MockRestoreJobsDescriber)(nil).RestoreFlexClusterJob), arg0, arg1, arg2)
	return &MockRestoreJobsDescriberRestoreFlexClusterJobCall{Call: call}
}

// MockRestoreJobsDescriberRestoreFlexClusterJobCall wrap *gomock.Call
type MockRestoreJobsDescriberRestoreFlexClusterJobCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRestoreJobsDescriberRestoreFlexClusterJobCall) Return(arg0 *admin.FlexBackupRestoreJob20241113, arg1 error) *MockRestoreJobsDescriberRestoreFlexClusterJobCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRestoreJobsDescriberRestoreFlexClusterJobCall) Do(f func(string, string, string) (*admin.FlexBackupRestoreJob20241113, error)) *MockRestoreJobsDescriberRestoreFlexClusterJobCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRestoreJobsDescriberRestoreFlexClusterJobCall) DoAndReturn(f func(string, string, string) (*admin.FlexBackupRestoreJob20241113, error)) *MockRestoreJobsDescriberRestoreFlexClusterJobCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// RestoreJob mocks base method.
func (m *MockRestoreJobsDescriber) RestoreJob(arg0, arg1, arg2 string) (*admin.DiskBackupSnapshotRestoreJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RestoreJob", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.DiskBackupSnapshotRestoreJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RestoreJob indicates an expected call of RestoreJob.
func (mr *MockRestoreJobsDescriberMockRecorder) RestoreJob(arg0, arg1, arg2 any) *MockRestoreJobsDescriberRestoreJobCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreJob", reflect.TypeOf((*MockRestoreJobsDescriber)(nil).RestoreJob), arg0, arg1, arg2)
	return &MockRestoreJobsDescriberRestoreJobCall{Call: call}
}

// MockRestoreJobsDescriberRestoreJobCall wrap *gomock.Call
type MockRestoreJobsDescriberRestoreJobCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRestoreJobsDescriberRestoreJobCall) Return(arg0 *admin.DiskBackupSnapshotRestoreJob, arg1 error) *MockRestoreJobsDescriberRestoreJobCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRestoreJobsDescriberRestoreJobCall) Do(f func(string, string, string) (*admin.DiskBackupSnapshotRestoreJob, error)) *MockRestoreJobsDescriberRestoreJobCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRestoreJobsDescriberRestoreJobCall) DoAndReturn(f func(string, string, string) (*admin.DiskBackupSnapshotRestoreJob, error)) *MockRestoreJobsDescriberRestoreJobCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
