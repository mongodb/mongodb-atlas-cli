// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/restores (interfaces: RestoreJobsCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=start_mock_test.go -package=restores . RestoreJobsCreator
//

// Package restores is a generated GoMock package.
package restores

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	admin0 "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockRestoreJobsCreator is a mock of RestoreJobsCreator interface.
type MockRestoreJobsCreator struct {
	ctrl     *gomock.Controller
	recorder *MockRestoreJobsCreatorMockRecorder
	isgomock struct{}
}

// MockRestoreJobsCreatorMockRecorder is the mock recorder for MockRestoreJobsCreator.
type MockRestoreJobsCreatorMockRecorder struct {
	mock *MockRestoreJobsCreator
}

// NewMockRestoreJobsCreator creates a new mock instance.
func NewMockRestoreJobsCreator(ctrl *gomock.Controller) *MockRestoreJobsCreator {
	mock := &MockRestoreJobsCreator{ctrl: ctrl}
	mock.recorder = &MockRestoreJobsCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestoreJobsCreator) EXPECT() *MockRestoreJobsCreatorMockRecorder {
	return m.recorder
}

// AtlasCluster mocks base method.
func (m *MockRestoreJobsCreator) AtlasCluster(arg0, arg1 string) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasCluster indicates an expected call of AtlasCluster.
func (mr *MockRestoreJobsCreatorMockRecorder) AtlasCluster(arg0, arg1 any) *MockRestoreJobsCreatorAtlasClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasCluster", reflect.TypeOf((*MockRestoreJobsCreator)(nil).AtlasCluster), arg0, arg1)
	return &MockRestoreJobsCreatorAtlasClusterCall{Call: call}
}

// MockRestoreJobsCreatorAtlasClusterCall wrap *gomock.Call
type MockRestoreJobsCreatorAtlasClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRestoreJobsCreatorAtlasClusterCall) Return(arg0 *admin.AdvancedClusterDescription, arg1 error) *MockRestoreJobsCreatorAtlasClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRestoreJobsCreatorAtlasClusterCall) Do(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockRestoreJobsCreatorAtlasClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRestoreJobsCreatorAtlasClusterCall) DoAndReturn(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockRestoreJobsCreatorAtlasClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// CreateRestoreFlexClusterJobs mocks base method.
func (m *MockRestoreJobsCreator) CreateRestoreFlexClusterJobs(arg0, arg1 string, arg2 *admin0.FlexBackupRestoreJobCreate20241113) (*admin0.FlexBackupRestoreJob20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRestoreFlexClusterJobs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin0.FlexBackupRestoreJob20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRestoreFlexClusterJobs indicates an expected call of CreateRestoreFlexClusterJobs.
func (mr *MockRestoreJobsCreatorMockRecorder) CreateRestoreFlexClusterJobs(arg0, arg1, arg2 any) *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRestoreFlexClusterJobs", reflect.TypeOf((*MockRestoreJobsCreator)(nil).CreateRestoreFlexClusterJobs), arg0, arg1, arg2)
	return &MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall{Call: call}
}

// MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall wrap *gomock.Call
type MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall) Return(arg0 *admin0.FlexBackupRestoreJob20241113, arg1 error) *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall) Do(f func(string, string, *admin0.FlexBackupRestoreJobCreate20241113) (*admin0.FlexBackupRestoreJob20241113, error)) *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall) DoAndReturn(f func(string, string, *admin0.FlexBackupRestoreJobCreate20241113) (*admin0.FlexBackupRestoreJob20241113, error)) *MockRestoreJobsCreatorCreateRestoreFlexClusterJobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// CreateRestoreJobs mocks base method.
func (m *MockRestoreJobsCreator) CreateRestoreJobs(arg0, arg1 string, arg2 *admin0.DiskBackupSnapshotRestoreJob) (*admin0.DiskBackupSnapshotRestoreJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRestoreJobs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin0.DiskBackupSnapshotRestoreJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRestoreJobs indicates an expected call of CreateRestoreJobs.
func (mr *MockRestoreJobsCreatorMockRecorder) CreateRestoreJobs(arg0, arg1, arg2 any) *MockRestoreJobsCreatorCreateRestoreJobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRestoreJobs", reflect.TypeOf((*MockRestoreJobsCreator)(nil).CreateRestoreJobs), arg0, arg1, arg2)
	return &MockRestoreJobsCreatorCreateRestoreJobsCall{Call: call}
}

// MockRestoreJobsCreatorCreateRestoreJobsCall wrap *gomock.Call
type MockRestoreJobsCreatorCreateRestoreJobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRestoreJobsCreatorCreateRestoreJobsCall) Return(arg0 *admin0.DiskBackupSnapshotRestoreJob, arg1 error) *MockRestoreJobsCreatorCreateRestoreJobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRestoreJobsCreatorCreateRestoreJobsCall) Do(f func(string, string, *admin0.DiskBackupSnapshotRestoreJob) (*admin0.DiskBackupSnapshotRestoreJob, error)) *MockRestoreJobsCreatorCreateRestoreJobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRestoreJobsCreatorCreateRestoreJobsCall) DoAndReturn(f func(string, string, *admin0.DiskBackupSnapshotRestoreJob) (*admin0.DiskBackupSnapshotRestoreJob, error)) *MockRestoreJobsCreatorCreateRestoreJobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
