// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/schedule (interfaces: DescribeUpdater)
//
// Generated by this command:
//
//	mockgen -typed -destination=update_mock_test.go -package=schedule . DescribeUpdater
//

// Package schedule is a generated GoMock package.
package schedule

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockDescribeUpdater is a mock of DescribeUpdater interface.
type MockDescribeUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockDescribeUpdaterMockRecorder
	isgomock struct{}
}

// MockDescribeUpdaterMockRecorder is the mock recorder for MockDescribeUpdater.
type MockDescribeUpdaterMockRecorder struct {
	mock *MockDescribeUpdater
}

// NewMockDescribeUpdater creates a new mock instance.
func NewMockDescribeUpdater(ctrl *gomock.Controller) *MockDescribeUpdater {
	mock := &MockDescribeUpdater{ctrl: ctrl}
	mock.recorder = &MockDescribeUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDescribeUpdater) EXPECT() *MockDescribeUpdaterMockRecorder {
	return m.recorder
}

// DescribeSchedule mocks base method.
func (m *MockDescribeUpdater) DescribeSchedule(arg0, arg1 string) (*admin.DiskBackupSnapshotSchedule, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSchedule", arg0, arg1)
	ret0, _ := ret[0].(*admin.DiskBackupSnapshotSchedule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSchedule indicates an expected call of DescribeSchedule.
func (mr *MockDescribeUpdaterMockRecorder) DescribeSchedule(arg0, arg1 any) *MockDescribeUpdaterDescribeScheduleCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSchedule", reflect.TypeOf((*MockDescribeUpdater)(nil).DescribeSchedule), arg0, arg1)
	return &MockDescribeUpdaterDescribeScheduleCall{Call: call}
}

// MockDescribeUpdaterDescribeScheduleCall wrap *gomock.Call
type MockDescribeUpdaterDescribeScheduleCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDescribeUpdaterDescribeScheduleCall) Return(arg0 *admin.DiskBackupSnapshotSchedule, arg1 error) *MockDescribeUpdaterDescribeScheduleCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDescribeUpdaterDescribeScheduleCall) Do(f func(string, string) (*admin.DiskBackupSnapshotSchedule, error)) *MockDescribeUpdaterDescribeScheduleCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDescribeUpdaterDescribeScheduleCall) DoAndReturn(f func(string, string) (*admin.DiskBackupSnapshotSchedule, error)) *MockDescribeUpdaterDescribeScheduleCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// UpdateSchedule mocks base method.
func (m *MockDescribeUpdater) UpdateSchedule(arg0, arg1 string, arg2 *admin.DiskBackupSnapshotSchedule) (*admin.DiskBackupSnapshotSchedule, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSchedule", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.DiskBackupSnapshotSchedule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSchedule indicates an expected call of UpdateSchedule.
func (mr *MockDescribeUpdaterMockRecorder) UpdateSchedule(arg0, arg1, arg2 any) *MockDescribeUpdaterUpdateScheduleCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSchedule", reflect.TypeOf((*MockDescribeUpdater)(nil).UpdateSchedule), arg0, arg1, arg2)
	return &MockDescribeUpdaterUpdateScheduleCall{Call: call}
}

// MockDescribeUpdaterUpdateScheduleCall wrap *gomock.Call
type MockDescribeUpdaterUpdateScheduleCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDescribeUpdaterUpdateScheduleCall) Return(arg0 *admin.DiskBackupSnapshotSchedule, arg1 error) *MockDescribeUpdaterUpdateScheduleCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDescribeUpdaterUpdateScheduleCall) Do(f func(string, string, *admin.DiskBackupSnapshotSchedule) (*admin.DiskBackupSnapshotSchedule, error)) *MockDescribeUpdaterUpdateScheduleCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDescribeUpdaterUpdateScheduleCall) DoAndReturn(f func(string, string, *admin.DiskBackupSnapshotSchedule) (*admin.DiskBackupSnapshotSchedule, error)) *MockDescribeUpdaterUpdateScheduleCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
