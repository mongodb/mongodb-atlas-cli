// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/backup/snapshots (interfaces: Lister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=snapshots . Lister
//

// Package snapshots is a generated GoMock package.
package snapshots

import (
	reflect "reflect"

	store "github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store"
	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockLister is a mock of Lister interface.
type MockLister struct {
	ctrl     *gomock.Controller
	recorder *MockListerMockRecorder
	isgomock struct{}
}

// MockListerMockRecorder is the mock recorder for MockLister.
type MockListerMockRecorder struct {
	mock *MockLister
}

// NewMockLister creates a new mock instance.
func NewMockLister(ctrl *gomock.Controller) *MockLister {
	mock := &MockLister{ctrl: ctrl}
	mock.recorder = &MockListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLister) EXPECT() *MockListerMockRecorder {
	return m.recorder
}

// FlexClusterSnapshots mocks base method.
func (m *MockLister) FlexClusterSnapshots(arg0 *admin.ListFlexBackupsApiParams) (*admin.PaginatedApiAtlasFlexBackupSnapshot20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlexClusterSnapshots", arg0)
	ret0, _ := ret[0].(*admin.PaginatedApiAtlasFlexBackupSnapshot20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlexClusterSnapshots indicates an expected call of FlexClusterSnapshots.
func (mr *MockListerMockRecorder) FlexClusterSnapshots(arg0 any) *MockListerFlexClusterSnapshotsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlexClusterSnapshots", reflect.TypeOf((*MockLister)(nil).FlexClusterSnapshots), arg0)
	return &MockListerFlexClusterSnapshotsCall{Call: call}
}

// MockListerFlexClusterSnapshotsCall wrap *gomock.Call
type MockListerFlexClusterSnapshotsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockListerFlexClusterSnapshotsCall) Return(arg0 *admin.PaginatedApiAtlasFlexBackupSnapshot20241113, arg1 error) *MockListerFlexClusterSnapshotsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockListerFlexClusterSnapshotsCall) Do(f func(*admin.ListFlexBackupsApiParams) (*admin.PaginatedApiAtlasFlexBackupSnapshot20241113, error)) *MockListerFlexClusterSnapshotsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockListerFlexClusterSnapshotsCall) DoAndReturn(f func(*admin.ListFlexBackupsApiParams) (*admin.PaginatedApiAtlasFlexBackupSnapshot20241113, error)) *MockListerFlexClusterSnapshotsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Snapshots mocks base method.
func (m *MockLister) Snapshots(arg0, arg1 string, arg2 *store.ListOptions) (*admin.PaginatedCloudBackupReplicaSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Snapshots", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.PaginatedCloudBackupReplicaSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Snapshots indicates an expected call of Snapshots.
func (mr *MockListerMockRecorder) Snapshots(arg0, arg1, arg2 any) *MockListerSnapshotsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Snapshots", reflect.TypeOf((*MockLister)(nil).Snapshots), arg0, arg1, arg2)
	return &MockListerSnapshotsCall{Call: call}
}

// MockListerSnapshotsCall wrap *gomock.Call
type MockListerSnapshotsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockListerSnapshotsCall) Return(arg0 *admin.PaginatedCloudBackupReplicaSet, arg1 error) *MockListerSnapshotsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockListerSnapshotsCall) Do(f func(string, string, *store.ListOptions) (*admin.PaginatedCloudBackupReplicaSet, error)) *MockListerSnapshotsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockListerSnapshotsCall) DoAndReturn(f func(string, string, *store.ListOptions) (*admin.PaginatedCloudBackupReplicaSet, error)) *MockListerSnapshotsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
