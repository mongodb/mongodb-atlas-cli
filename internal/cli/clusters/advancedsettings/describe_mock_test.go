// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters/advancedsettings (interfaces: AtlasClusterConfigurationOptionsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=advancedsettings . AtlasClusterConfigurationOptionsDescriber
//

// Package advancedsettings is a generated GoMock package.
package advancedsettings

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockAtlasClusterConfigurationOptionsDescriber is a mock of AtlasClusterConfigurationOptionsDescriber interface.
type MockAtlasClusterConfigurationOptionsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockAtlasClusterConfigurationOptionsDescriberMockRecorder
	isgomock struct{}
}

// MockAtlasClusterConfigurationOptionsDescriberMockRecorder is the mock recorder for MockAtlasClusterConfigurationOptionsDescriber.
type MockAtlasClusterConfigurationOptionsDescriberMockRecorder struct {
	mock *MockAtlasClusterConfigurationOptionsDescriber
}

// NewMockAtlasClusterConfigurationOptionsDescriber creates a new mock instance.
func NewMockAtlasClusterConfigurationOptionsDescriber(ctrl *gomock.Controller) *MockAtlasClusterConfigurationOptionsDescriber {
	mock := &MockAtlasClusterConfigurationOptionsDescriber{ctrl: ctrl}
	mock.recorder = &MockAtlasClusterConfigurationOptionsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAtlasClusterConfigurationOptionsDescriber) EXPECT() *MockAtlasClusterConfigurationOptionsDescriberMockRecorder {
	return m.recorder
}

// AtlasClusterConfigurationOptions mocks base method.
func (m *MockAtlasClusterConfigurationOptionsDescriber) AtlasClusterConfigurationOptions(arg0, arg1 string) (*admin.ClusterDescriptionProcessArgs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasClusterConfigurationOptions", arg0, arg1)
	ret0, _ := ret[0].(*admin.ClusterDescriptionProcessArgs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasClusterConfigurationOptions indicates an expected call of AtlasClusterConfigurationOptions.
func (mr *MockAtlasClusterConfigurationOptionsDescriberMockRecorder) AtlasClusterConfigurationOptions(arg0, arg1 any) *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasClusterConfigurationOptions", reflect.TypeOf((*MockAtlasClusterConfigurationOptionsDescriber)(nil).AtlasClusterConfigurationOptions), arg0, arg1)
	return &MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall{Call: call}
}

// MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall wrap *gomock.Call
type MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall) Return(arg0 *admin.ClusterDescriptionProcessArgs, arg1 error) *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall) Do(f func(string, string) (*admin.ClusterDescriptionProcessArgs, error)) *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall) DoAndReturn(f func(string, string) (*admin.ClusterDescriptionProcessArgs, error)) *MockAtlasClusterConfigurationOptionsDescriberAtlasClusterConfigurationOptionsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
