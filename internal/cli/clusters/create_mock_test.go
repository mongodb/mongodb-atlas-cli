// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters (interfaces: ClusterCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=clusters . ClusterCreator
//

// Package clusters is a generated GoMock package.
package clusters

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	admin0 "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockClusterCreator is a mock of ClusterCreator interface.
type MockClusterCreator struct {
	ctrl     *gomock.Controller
	recorder *MockClusterCreatorMockRecorder
	isgomock struct{}
}

// MockClusterCreatorMockRecorder is the mock recorder for MockClusterCreator.
type MockClusterCreatorMockRecorder struct {
	mock *MockClusterCreator
}

// NewMockClusterCreator creates a new mock instance.
func NewMockClusterCreator(ctrl *gomock.Controller) *MockClusterCreator {
	mock := &MockClusterCreator{ctrl: ctrl}
	mock.recorder = &MockClusterCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterCreator) EXPECT() *MockClusterCreatorMockRecorder {
	return m.recorder
}

// CreateCluster mocks base method.
func (m *MockClusterCreator) CreateCluster(v15 *admin.AdvancedClusterDescription) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCluster", v15)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCluster indicates an expected call of CreateCluster.
func (mr *MockClusterCreatorMockRecorder) CreateCluster(v15 any) *MockClusterCreatorCreateClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCluster", reflect.TypeOf((*MockClusterCreator)(nil).CreateCluster), v15)
	return &MockClusterCreatorCreateClusterCall{Call: call}
}

// MockClusterCreatorCreateClusterCall wrap *gomock.Call
type MockClusterCreatorCreateClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterCreatorCreateClusterCall) Return(arg0 *admin.AdvancedClusterDescription, arg1 error) *MockClusterCreatorCreateClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterCreatorCreateClusterCall) Do(f func(*admin.AdvancedClusterDescription) (*admin.AdvancedClusterDescription, error)) *MockClusterCreatorCreateClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterCreatorCreateClusterCall) DoAndReturn(f func(*admin.AdvancedClusterDescription) (*admin.AdvancedClusterDescription, error)) *MockClusterCreatorCreateClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// CreateClusterLatest mocks base method.
func (m *MockClusterCreator) CreateClusterLatest(arg0 *admin0.ClusterDescription20240805) (*admin0.ClusterDescription20240805, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClusterLatest", arg0)
	ret0, _ := ret[0].(*admin0.ClusterDescription20240805)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateClusterLatest indicates an expected call of CreateClusterLatest.
func (mr *MockClusterCreatorMockRecorder) CreateClusterLatest(arg0 any) *MockClusterCreatorCreateClusterLatestCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClusterLatest", reflect.TypeOf((*MockClusterCreator)(nil).CreateClusterLatest), arg0)
	return &MockClusterCreatorCreateClusterLatestCall{Call: call}
}

// MockClusterCreatorCreateClusterLatestCall wrap *gomock.Call
type MockClusterCreatorCreateClusterLatestCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterCreatorCreateClusterLatestCall) Return(arg0 *admin0.ClusterDescription20240805, arg1 error) *MockClusterCreatorCreateClusterLatestCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterCreatorCreateClusterLatestCall) Do(f func(*admin0.ClusterDescription20240805) (*admin0.ClusterDescription20240805, error)) *MockClusterCreatorCreateClusterLatestCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterCreatorCreateClusterLatestCall) DoAndReturn(f func(*admin0.ClusterDescription20240805) (*admin0.ClusterDescription20240805, error)) *MockClusterCreatorCreateClusterLatestCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// CreateFlexCluster mocks base method.
func (m *MockClusterCreator) CreateFlexCluster(arg0 string, arg1 *admin0.FlexClusterDescriptionCreate20241113) (*admin0.FlexClusterDescription20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFlexCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin0.FlexClusterDescription20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFlexCluster indicates an expected call of CreateFlexCluster.
func (mr *MockClusterCreatorMockRecorder) CreateFlexCluster(arg0, arg1 any) *MockClusterCreatorCreateFlexClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFlexCluster", reflect.TypeOf((*MockClusterCreator)(nil).CreateFlexCluster), arg0, arg1)
	return &MockClusterCreatorCreateFlexClusterCall{Call: call}
}

// MockClusterCreatorCreateFlexClusterCall wrap *gomock.Call
type MockClusterCreatorCreateFlexClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterCreatorCreateFlexClusterCall) Return(arg0 *admin0.FlexClusterDescription20241113, arg1 error) *MockClusterCreatorCreateFlexClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterCreatorCreateFlexClusterCall) Do(f func(string, *admin0.FlexClusterDescriptionCreate20241113) (*admin0.FlexClusterDescription20241113, error)) *MockClusterCreatorCreateFlexClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterCreatorCreateFlexClusterCall) DoAndReturn(f func(string, *admin0.FlexClusterDescriptionCreate20241113) (*admin0.FlexClusterDescription20241113, error)) *MockClusterCreatorCreateFlexClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
