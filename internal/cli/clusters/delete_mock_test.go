// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters (interfaces: ClusterDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=clusters . ClusterDeleter
//

// Package clusters is a generated GoMock package.
package clusters

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClusterDeleter is a mock of ClusterDeleter interface.
type MockClusterDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockClusterDeleterMockRecorder
	isgomock struct{}
}

// MockClusterDeleterMockRecorder is the mock recorder for MockClusterDeleter.
type MockClusterDeleterMockRecorder struct {
	mock *MockClusterDeleter
}

// NewMockClusterDeleter creates a new mock instance.
func NewMockClusterDeleter(ctrl *gomock.Controller) *MockClusterDeleter {
	mock := &MockClusterDeleter{ctrl: ctrl}
	mock.recorder = &MockClusterDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterDeleter) EXPECT() *MockClusterDeleterMockRecorder {
	return m.recorder
}

// DeleteCluster mocks base method.
func (m *MockClusterDeleter) DeleteCluster(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCluster indicates an expected call of DeleteCluster.
func (mr *MockClusterDeleterMockRecorder) DeleteCluster(arg0, arg1 any) *MockClusterDeleterDeleteClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockClusterDeleter)(nil).DeleteCluster), arg0, arg1)
	return &MockClusterDeleterDeleteClusterCall{Call: call}
}

// MockClusterDeleterDeleteClusterCall wrap *gomock.Call
type MockClusterDeleterDeleteClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterDeleterDeleteClusterCall) Return(arg0 error) *MockClusterDeleterDeleteClusterCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterDeleterDeleteClusterCall) Do(f func(string, string) error) *MockClusterDeleterDeleteClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterDeleterDeleteClusterCall) DoAndReturn(f func(string, string) error) *MockClusterDeleterDeleteClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// DeleteFlexCluster mocks base method.
func (m *MockClusterDeleter) DeleteFlexCluster(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFlexCluster", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFlexCluster indicates an expected call of DeleteFlexCluster.
func (mr *MockClusterDeleterMockRecorder) DeleteFlexCluster(arg0, arg1 any) *MockClusterDeleterDeleteFlexClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFlexCluster", reflect.TypeOf((*MockClusterDeleter)(nil).DeleteFlexCluster), arg0, arg1)
	return &MockClusterDeleterDeleteFlexClusterCall{Call: call}
}

// MockClusterDeleterDeleteFlexClusterCall wrap *gomock.Call
type MockClusterDeleterDeleteFlexClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterDeleterDeleteFlexClusterCall) Return(arg0 error) *MockClusterDeleterDeleteFlexClusterCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterDeleterDeleteFlexClusterCall) Do(f func(string, string) error) *MockClusterDeleterDeleteFlexClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterDeleterDeleteFlexClusterCall) DoAndReturn(f func(string, string) error) *MockClusterDeleterDeleteFlexClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
