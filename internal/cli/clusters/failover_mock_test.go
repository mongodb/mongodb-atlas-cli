// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters (interfaces: ClusterTester)
//
// Generated by this command:
//
//	mockgen -typed -destination=failover_mock_test.go -package=clusters . ClusterTester
//

// Package clusters is a generated GoMock package.
package clusters

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClusterTester is a mock of ClusterTester interface.
type MockClusterTester struct {
	ctrl     *gomock.Controller
	recorder *MockClusterTesterMockRecorder
	isgomock struct{}
}

// MockClusterTesterMockRecorder is the mock recorder for MockClusterTester.
type MockClusterTesterMockRecorder struct {
	mock *MockClusterTester
}

// NewMockClusterTester creates a new mock instance.
func NewMockClusterTester(ctrl *gomock.Controller) *MockClusterTester {
	mock := &MockClusterTester{ctrl: ctrl}
	mock.recorder = &MockClusterTesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterTester) EXPECT() *MockClusterTesterMockRecorder {
	return m.recorder
}

// TestClusterFailover mocks base method.
func (m *MockClusterTester) TestClusterFailover(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestClusterFailover", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// TestClusterFailover indicates an expected call of TestClusterFailover.
func (mr *MockClusterTesterMockRecorder) TestClusterFailover(arg0, arg1 any) *MockClusterTesterTestClusterFailoverCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestClusterFailover", reflect.TypeOf((*MockClusterTester)(nil).TestClusterFailover), arg0, arg1)
	return &MockClusterTesterTestClusterFailoverCall{Call: call}
}

// MockClusterTesterTestClusterFailoverCall wrap *gomock.Call
type MockClusterTesterTestClusterFailoverCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterTesterTestClusterFailoverCall) Return(arg0 error) *MockClusterTesterTestClusterFailoverCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterTesterTestClusterFailoverCall) Do(f func(string, string) error) *MockClusterTesterTestClusterFailoverCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterTesterTestClusterFailoverCall) DoAndReturn(f func(string, string) error) *MockClusterTesterTestClusterFailoverCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
