// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters (interfaces: ClusterLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=clusters . ClusterLister
//

// Package clusters is a generated GoMock package.
package clusters

import (
	reflect "reflect"

	store "github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store"
	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	admin0 "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockClusterLister is a mock of ClusterLister interface.
type MockClusterLister struct {
	ctrl     *gomock.Controller
	recorder *MockClusterListerMockRecorder
	isgomock struct{}
}

// MockClusterListerMockRecorder is the mock recorder for MockClusterLister.
type MockClusterListerMockRecorder struct {
	mock *MockClusterLister
}

// NewMockClusterLister creates a new mock instance.
func NewMockClusterLister(ctrl *gomock.Controller) *MockClusterLister {
	mock := &MockClusterLister{ctrl: ctrl}
	mock.recorder = &MockClusterListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterLister) EXPECT() *MockClusterListerMockRecorder {
	return m.recorder
}

// GetClusterAutoScalingConfig mocks base method.
func (m *MockClusterLister) GetClusterAutoScalingConfig(arg0, arg1 string) (*admin0.ClusterDescriptionAutoScalingModeConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterAutoScalingConfig", arg0, arg1)
	ret0, _ := ret[0].(*admin0.ClusterDescriptionAutoScalingModeConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterAutoScalingConfig indicates an expected call of GetClusterAutoScalingConfig.
func (mr *MockClusterListerMockRecorder) GetClusterAutoScalingConfig(arg0, arg1 any) *MockClusterListerGetClusterAutoScalingConfigCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterAutoScalingConfig", reflect.TypeOf((*MockClusterLister)(nil).GetClusterAutoScalingConfig), arg0, arg1)
	return &MockClusterListerGetClusterAutoScalingConfigCall{Call: call}
}

// MockClusterListerGetClusterAutoScalingConfigCall wrap *gomock.Call
type MockClusterListerGetClusterAutoScalingConfigCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterListerGetClusterAutoScalingConfigCall) Return(arg0 *admin0.ClusterDescriptionAutoScalingModeConfiguration, arg1 error) *MockClusterListerGetClusterAutoScalingConfigCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterListerGetClusterAutoScalingConfigCall) Do(f func(string, string) (*admin0.ClusterDescriptionAutoScalingModeConfiguration, error)) *MockClusterListerGetClusterAutoScalingConfigCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterListerGetClusterAutoScalingConfigCall) DoAndReturn(f func(string, string) (*admin0.ClusterDescriptionAutoScalingModeConfiguration, error)) *MockClusterListerGetClusterAutoScalingConfigCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// LatestProjectClusters mocks base method.
func (m *MockClusterLister) LatestProjectClusters(arg0 string, arg1 *store.ListOptions) (*admin0.PaginatedClusterDescription20240805, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LatestProjectClusters", arg0, arg1)
	ret0, _ := ret[0].(*admin0.PaginatedClusterDescription20240805)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LatestProjectClusters indicates an expected call of LatestProjectClusters.
func (mr *MockClusterListerMockRecorder) LatestProjectClusters(arg0, arg1 any) *MockClusterListerLatestProjectClustersCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LatestProjectClusters", reflect.TypeOf((*MockClusterLister)(nil).LatestProjectClusters), arg0, arg1)
	return &MockClusterListerLatestProjectClustersCall{Call: call}
}

// MockClusterListerLatestProjectClustersCall wrap *gomock.Call
type MockClusterListerLatestProjectClustersCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterListerLatestProjectClustersCall) Return(arg0 *admin0.PaginatedClusterDescription20240805, arg1 error) *MockClusterListerLatestProjectClustersCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterListerLatestProjectClustersCall) Do(f func(string, *store.ListOptions) (*admin0.PaginatedClusterDescription20240805, error)) *MockClusterListerLatestProjectClustersCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterListerLatestProjectClustersCall) DoAndReturn(f func(string, *store.ListOptions) (*admin0.PaginatedClusterDescription20240805, error)) *MockClusterListerLatestProjectClustersCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// ListFlexClusters mocks base method.
func (m *MockClusterLister) ListFlexClusters(arg0 *admin0.ListFlexClustersApiParams) (*admin0.PaginatedFlexClusters20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFlexClusters", arg0)
	ret0, _ := ret[0].(*admin0.PaginatedFlexClusters20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFlexClusters indicates an expected call of ListFlexClusters.
func (mr *MockClusterListerMockRecorder) ListFlexClusters(arg0 any) *MockClusterListerListFlexClustersCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFlexClusters", reflect.TypeOf((*MockClusterLister)(nil).ListFlexClusters), arg0)
	return &MockClusterListerListFlexClustersCall{Call: call}
}

// MockClusterListerListFlexClustersCall wrap *gomock.Call
type MockClusterListerListFlexClustersCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterListerListFlexClustersCall) Return(arg0 *admin0.PaginatedFlexClusters20241113, arg1 error) *MockClusterListerListFlexClustersCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterListerListFlexClustersCall) Do(f func(*admin0.ListFlexClustersApiParams) (*admin0.PaginatedFlexClusters20241113, error)) *MockClusterListerListFlexClustersCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterListerListFlexClustersCall) DoAndReturn(f func(*admin0.ListFlexClustersApiParams) (*admin0.PaginatedFlexClusters20241113, error)) *MockClusterListerListFlexClustersCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// ProjectClusters mocks base method.
func (m *MockClusterLister) ProjectClusters(arg0 string, arg1 *store.ListOptions) (*admin.PaginatedAdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProjectClusters", arg0, arg1)
	ret0, _ := ret[0].(*admin.PaginatedAdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProjectClusters indicates an expected call of ProjectClusters.
func (mr *MockClusterListerMockRecorder) ProjectClusters(arg0, arg1 any) *MockClusterListerProjectClustersCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProjectClusters", reflect.TypeOf((*MockClusterLister)(nil).ProjectClusters), arg0, arg1)
	return &MockClusterListerProjectClustersCall{Call: call}
}

// MockClusterListerProjectClustersCall wrap *gomock.Call
type MockClusterListerProjectClustersCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterListerProjectClustersCall) Return(arg0 *admin.PaginatedAdvancedClusterDescription, arg1 error) *MockClusterListerProjectClustersCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterListerProjectClustersCall) Do(f func(string, *store.ListOptions) (*admin.PaginatedAdvancedClusterDescription, error)) *MockClusterListerProjectClustersCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterListerProjectClustersCall) DoAndReturn(f func(string, *store.ListOptions) (*admin.PaginatedAdvancedClusterDescription, error)) *MockClusterListerProjectClustersCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
