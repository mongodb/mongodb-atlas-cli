// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/clusters (interfaces: AtlasSharedClusterGetterUpgrader)
//
// Generated by this command:
//
//	mockgen -typed -destination=upgrade_mock_test.go -package=clusters . AtlasSharedClusterGetterUpgrader
//

// Package clusters is a generated GoMock package.
package clusters

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	gomock "go.uber.org/mock/gomock"
)

// MockAtlasSharedClusterGetterUpgrader is a mock of AtlasSharedClusterGetterUpgrader interface.
type MockAtlasSharedClusterGetterUpgrader struct {
	ctrl     *gomock.Controller
	recorder *MockAtlasSharedClusterGetterUpgraderMockRecorder
	isgomock struct{}
}

// MockAtlasSharedClusterGetterUpgraderMockRecorder is the mock recorder for MockAtlasSharedClusterGetterUpgrader.
type MockAtlasSharedClusterGetterUpgraderMockRecorder struct {
	mock *MockAtlasSharedClusterGetterUpgrader
}

// NewMockAtlasSharedClusterGetterUpgrader creates a new mock instance.
func NewMockAtlasSharedClusterGetterUpgrader(ctrl *gomock.Controller) *MockAtlasSharedClusterGetterUpgrader {
	mock := &MockAtlasSharedClusterGetterUpgrader{ctrl: ctrl}
	mock.recorder = &MockAtlasSharedClusterGetterUpgraderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAtlasSharedClusterGetterUpgrader) EXPECT() *MockAtlasSharedClusterGetterUpgraderMockRecorder {
	return m.recorder
}

// AtlasSharedCluster mocks base method.
func (m *MockAtlasSharedClusterGetterUpgrader) AtlasSharedCluster(arg0, arg1 string) (*mongodbatlas.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasSharedCluster", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasSharedCluster indicates an expected call of AtlasSharedCluster.
func (mr *MockAtlasSharedClusterGetterUpgraderMockRecorder) AtlasSharedCluster(arg0, arg1 any) *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasSharedCluster", reflect.TypeOf((*MockAtlasSharedClusterGetterUpgrader)(nil).AtlasSharedCluster), arg0, arg1)
	return &MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall{Call: call}
}

// MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall wrap *gomock.Call
type MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall) Return(arg0 *mongodbatlas.Cluster, arg1 error) *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall) Do(f func(string, string) (*mongodbatlas.Cluster, error)) *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall) DoAndReturn(f func(string, string) (*mongodbatlas.Cluster, error)) *MockAtlasSharedClusterGetterUpgraderAtlasSharedClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// FlexCluster mocks base method.
func (m *MockAtlasSharedClusterGetterUpgrader) FlexCluster(arg0, arg1 string) (*admin.FlexClusterDescription20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlexCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.FlexClusterDescription20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlexCluster indicates an expected call of FlexCluster.
func (mr *MockAtlasSharedClusterGetterUpgraderMockRecorder) FlexCluster(arg0, arg1 any) *MockAtlasSharedClusterGetterUpgraderFlexClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlexCluster", reflect.TypeOf((*MockAtlasSharedClusterGetterUpgrader)(nil).FlexCluster), arg0, arg1)
	return &MockAtlasSharedClusterGetterUpgraderFlexClusterCall{Call: call}
}

// MockAtlasSharedClusterGetterUpgraderFlexClusterCall wrap *gomock.Call
type MockAtlasSharedClusterGetterUpgraderFlexClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAtlasSharedClusterGetterUpgraderFlexClusterCall) Return(arg0 *admin.FlexClusterDescription20241113, arg1 error) *MockAtlasSharedClusterGetterUpgraderFlexClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAtlasSharedClusterGetterUpgraderFlexClusterCall) Do(f func(string, string) (*admin.FlexClusterDescription20241113, error)) *MockAtlasSharedClusterGetterUpgraderFlexClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAtlasSharedClusterGetterUpgraderFlexClusterCall) DoAndReturn(f func(string, string) (*admin.FlexClusterDescription20241113, error)) *MockAtlasSharedClusterGetterUpgraderFlexClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// UpgradeCluster mocks base method.
func (m *MockAtlasSharedClusterGetterUpgrader) UpgradeCluster(arg0 string, arg1 *mongodbatlas.Cluster) (*mongodbatlas.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpgradeCluster", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpgradeCluster indicates an expected call of UpgradeCluster.
func (mr *MockAtlasSharedClusterGetterUpgraderMockRecorder) UpgradeCluster(arg0, arg1 any) *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeCluster", reflect.TypeOf((*MockAtlasSharedClusterGetterUpgrader)(nil).UpgradeCluster), arg0, arg1)
	return &MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall{Call: call}
}

// MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall wrap *gomock.Call
type MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall) Return(arg0 *mongodbatlas.Cluster, arg1 error) *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall) Do(f func(string, *mongodbatlas.Cluster) (*mongodbatlas.Cluster, error)) *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall) DoAndReturn(f func(string, *mongodbatlas.Cluster) (*mongodbatlas.Cluster, error)) *MockAtlasSharedClusterGetterUpgraderUpgradeClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// UpgradeFlexCluster mocks base method.
func (m *MockAtlasSharedClusterGetterUpgrader) UpgradeFlexCluster(arg0 string, arg1 *admin.AtlasTenantClusterUpgradeRequest20240805) (*admin.FlexClusterDescription20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpgradeFlexCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.FlexClusterDescription20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpgradeFlexCluster indicates an expected call of UpgradeFlexCluster.
func (mr *MockAtlasSharedClusterGetterUpgraderMockRecorder) UpgradeFlexCluster(arg0, arg1 any) *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeFlexCluster", reflect.TypeOf((*MockAtlasSharedClusterGetterUpgrader)(nil).UpgradeFlexCluster), arg0, arg1)
	return &MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall{Call: call}
}

// MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall wrap *gomock.Call
type MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall) Return(arg0 *admin.FlexClusterDescription20241113, arg1 error) *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall) Do(f func(string, *admin.AtlasTenantClusterUpgradeRequest20240805) (*admin.FlexClusterDescription20241113, error)) *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall) DoAndReturn(f func(string, *admin.AtlasTenantClusterUpgradeRequest20240805) (*admin.FlexClusterDescription20241113, error)) *MockAtlasSharedClusterGetterUpgraderUpgradeFlexClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
