// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/customdbroles (interfaces: DatabaseRoleCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=customdbroles . DatabaseRoleCreator
//

// Package customdbroles is a generated GoMock package.
package customdbroles

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockDatabaseRoleCreator is a mock of DatabaseRoleCreator interface.
type MockDatabaseRoleCreator struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseRoleCreatorMockRecorder
	isgomock struct{}
}

// MockDatabaseRoleCreatorMockRecorder is the mock recorder for MockDatabaseRoleCreator.
type MockDatabaseRoleCreatorMockRecorder struct {
	mock *MockDatabaseRoleCreator
}

// NewMockDatabaseRoleCreator creates a new mock instance.
func NewMockDatabaseRoleCreator(ctrl *gomock.Controller) *MockDatabaseRoleCreator {
	mock := &MockDatabaseRoleCreator{ctrl: ctrl}
	mock.recorder = &MockDatabaseRoleCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseRoleCreator) EXPECT() *MockDatabaseRoleCreatorMockRecorder {
	return m.recorder
}

// CreateDatabaseRole mocks base method.
func (m *MockDatabaseRoleCreator) CreateDatabaseRole(arg0 string, arg1 *admin.UserCustomDBRole) (*admin.UserCustomDBRole, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDatabaseRole", arg0, arg1)
	ret0, _ := ret[0].(*admin.UserCustomDBRole)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDatabaseRole indicates an expected call of CreateDatabaseRole.
func (mr *MockDatabaseRoleCreatorMockRecorder) CreateDatabaseRole(arg0, arg1 any) *MockDatabaseRoleCreatorCreateDatabaseRoleCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDatabaseRole", reflect.TypeOf((*MockDatabaseRoleCreator)(nil).CreateDatabaseRole), arg0, arg1)
	return &MockDatabaseRoleCreatorCreateDatabaseRoleCall{Call: call}
}

// MockDatabaseRoleCreatorCreateDatabaseRoleCall wrap *gomock.Call
type MockDatabaseRoleCreatorCreateDatabaseRoleCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDatabaseRoleCreatorCreateDatabaseRoleCall) Return(arg0 *admin.UserCustomDBRole, arg1 error) *MockDatabaseRoleCreatorCreateDatabaseRoleCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDatabaseRoleCreatorCreateDatabaseRoleCall) Do(f func(string, *admin.UserCustomDBRole) (*admin.UserCustomDBRole, error)) *MockDatabaseRoleCreatorCreateDatabaseRoleCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDatabaseRoleCreatorCreateDatabaseRoleCall) DoAndReturn(f func(string, *admin.UserCustomDBRole) (*admin.UserCustomDBRole, error)) *MockDatabaseRoleCreatorCreateDatabaseRoleCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
