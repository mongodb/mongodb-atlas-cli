// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/customdns/aws (interfaces: CustomDNSDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=aws . CustomDNSDescriber
//

// Package aws is a generated GoMock package.
package aws

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCustomDNSDescriber is a mock of CustomDNSDescriber interface.
type MockCustomDNSDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockCustomDNSDescriberMockRecorder
	isgomock struct{}
}

// MockCustomDNSDescriberMockRecorder is the mock recorder for MockCustomDNSDescriber.
type MockCustomDNSDescriberMockRecorder struct {
	mock *MockCustomDNSDescriber
}

// NewMockCustomDNSDescriber creates a new mock instance.
func NewMockCustomDNSDescriber(ctrl *gomock.Controller) *MockCustomDNSDescriber {
	mock := &MockCustomDNSDescriber{ctrl: ctrl}
	mock.recorder = &MockCustomDNSDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomDNSDescriber) EXPECT() *MockCustomDNSDescriberMockRecorder {
	return m.recorder
}

// DescribeCustomDNS mocks base method.
func (m *MockCustomDNSDescriber) DescribeCustomDNS(arg0 string) (*admin.AWSCustomDNSEnabled, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeCustomDNS", arg0)
	ret0, _ := ret[0].(*admin.AWSCustomDNSEnabled)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeCustomDNS indicates an expected call of DescribeCustomDNS.
func (mr *MockCustomDNSDescriberMockRecorder) DescribeCustomDNS(arg0 any) *MockCustomDNSDescriberDescribeCustomDNSCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeCustomDNS", reflect.TypeOf((*MockCustomDNSDescriber)(nil).DescribeCustomDNS), arg0)
	return &MockCustomDNSDescriberDescribeCustomDNSCall{Call: call}
}

// MockCustomDNSDescriberDescribeCustomDNSCall wrap *gomock.Call
type MockCustomDNSDescriberDescribeCustomDNSCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomDNSDescriberDescribeCustomDNSCall) Return(arg0 *admin.AWSCustomDNSEnabled, arg1 error) *MockCustomDNSDescriberDescribeCustomDNSCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomDNSDescriberDescribeCustomDNSCall) Do(f func(string) (*admin.AWSCustomDNSEnabled, error)) *MockCustomDNSDescriberDescribeCustomDNSCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomDNSDescriberDescribeCustomDNSCall) DoAndReturn(f func(string) (*admin.AWSCustomDNSEnabled, error)) *MockCustomDNSDescriberDescribeCustomDNSCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
