// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/customdns/aws (interfaces: CustomDNSDisabler)
//
// Generated by this command:
//
//	mockgen -typed -destination=disable_mock_test.go -package=aws . CustomDNSDisabler
//

// Package aws is a generated GoMock package.
package aws

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCustomDNSDisabler is a mock of CustomDNSDisabler interface.
type MockCustomDNSDisabler struct {
	ctrl     *gomock.Controller
	recorder *MockCustomDNSDisablerMockRecorder
	isgomock struct{}
}

// MockCustomDNSDisablerMockRecorder is the mock recorder for MockCustomDNSDisabler.
type MockCustomDNSDisablerMockRecorder struct {
	mock *MockCustomDNSDisabler
}

// NewMockCustomDNSDisabler creates a new mock instance.
func NewMockCustomDNSDisabler(ctrl *gomock.Controller) *MockCustomDNSDisabler {
	mock := &MockCustomDNSDisabler{ctrl: ctrl}
	mock.recorder = &MockCustomDNSDisablerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomDNSDisabler) EXPECT() *MockCustomDNSDisablerMockRecorder {
	return m.recorder
}

// DisableCustomDNS mocks base method.
func (m *MockCustomDNSDisabler) DisableCustomDNS(arg0 string) (*admin.AWSCustomDNSEnabled, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisableCustomDNS", arg0)
	ret0, _ := ret[0].(*admin.AWSCustomDNSEnabled)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisableCustomDNS indicates an expected call of DisableCustomDNS.
func (mr *MockCustomDNSDisablerMockRecorder) DisableCustomDNS(arg0 any) *MockCustomDNSDisablerDisableCustomDNSCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisableCustomDNS", reflect.TypeOf((*MockCustomDNSDisabler)(nil).DisableCustomDNS), arg0)
	return &MockCustomDNSDisablerDisableCustomDNSCall{Call: call}
}

// MockCustomDNSDisablerDisableCustomDNSCall wrap *gomock.Call
type MockCustomDNSDisablerDisableCustomDNSCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCustomDNSDisablerDisableCustomDNSCall) Return(arg0 *admin.AWSCustomDNSEnabled, arg1 error) *MockCustomDNSDisablerDisableCustomDNSCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCustomDNSDisablerDisableCustomDNSCall) Do(f func(string) (*admin.AWSCustomDNSEnabled, error)) *MockCustomDNSDisablerDisableCustomDNSCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCustomDNSDisablerDisableCustomDNSCall) DoAndReturn(f func(string) (*admin.AWSCustomDNSEnabled, error)) *MockCustomDNSDisablerDisableCustomDNSCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
