// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/datafederation (interfaces: Creator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=datafederation . Creator
//

// Package datafederation is a generated GoMock package.
package datafederation

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockCreator is a mock of Creator interface.
type MockCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorMockRecorder
	isgomock struct{}
}

// MockCreatorMockRecorder is the mock recorder for MockCreator.
type MockCreatorMockRecorder struct {
	mock *MockCreator
}

// NewMockCreator creates a new mock instance.
func NewMockCreator(ctrl *gomock.Controller) *MockCreator {
	mock := &MockCreator{ctrl: ctrl}
	mock.recorder = &MockCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreator) EXPECT() *MockCreatorMockRecorder {
	return m.recorder
}

// CreateDataFederation mocks base method.
func (m *MockCreator) CreateDataFederation(arg0 string, arg1 *admin.DataLakeTenant) (*admin.DataLakeTenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataFederation", arg0, arg1)
	ret0, _ := ret[0].(*admin.DataLakeTenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataFederation indicates an expected call of CreateDataFederation.
func (mr *MockCreatorMockRecorder) CreateDataFederation(arg0, arg1 any) *MockCreatorCreateDataFederationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataFederation", reflect.TypeOf((*MockCreator)(nil).CreateDataFederation), arg0, arg1)
	return &MockCreatorCreateDataFederationCall{Call: call}
}

// MockCreatorCreateDataFederationCall wrap *gomock.Call
type MockCreatorCreateDataFederationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCreatorCreateDataFederationCall) Return(arg0 *admin.DataLakeTenant, arg1 error) *MockCreatorCreateDataFederationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCreatorCreateDataFederationCall) Do(f func(string, *admin.DataLakeTenant) (*admin.DataLakeTenant, error)) *MockCreatorCreateDataFederationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCreatorCreateDataFederationCall) DoAndReturn(f func(string, *admin.DataLakeTenant) (*admin.DataLakeTenant, error)) *MockCreatorCreateDataFederationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
