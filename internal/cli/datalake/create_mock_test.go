// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/datalake (interfaces: Creator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=datalake . Creator
//

// Package datalake is a generated GoMock package.
package datalake

import (
	reflect "reflect"

	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	gomock "go.uber.org/mock/gomock"
)

// MockCreator is a mock of Creator interface.
type MockCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorMockRecorder
	isgomock struct{}
}

// MockCreatorMockRecorder is the mock recorder for MockCreator.
type MockCreatorMockRecorder struct {
	mock *MockCreator
}

// NewMockCreator creates a new mock instance.
func NewMockCreator(ctrl *gomock.Controller) *MockCreator {
	mock := &MockCreator{ctrl: ctrl}
	mock.recorder = &MockCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreator) EXPECT() *MockCreatorMockRecorder {
	return m.recorder
}

// CreateDataLake mocks base method.
func (m *MockCreator) CreateDataLake(arg0 string, arg1 *mongodbatlas.DataLakeCreateRequest) (*mongodbatlas.DataLake, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataLake", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.DataLake)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataLake indicates an expected call of CreateDataLake.
func (mr *MockCreatorMockRecorder) CreateDataLake(arg0, arg1 any) *MockCreatorCreateDataLakeCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataLake", reflect.TypeOf((*MockCreator)(nil).CreateDataLake), arg0, arg1)
	return &MockCreatorCreateDataLakeCall{Call: call}
}

// MockCreatorCreateDataLakeCall wrap *gomock.Call
type MockCreatorCreateDataLakeCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockCreatorCreateDataLakeCall) Return(arg0 *mongodbatlas.DataLake, arg1 error) *MockCreatorCreateDataLakeCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockCreatorCreateDataLakeCall) Do(f func(string, *mongodbatlas.DataLakeCreateRequest) (*mongodbatlas.DataLake, error)) *MockCreatorCreateDataLakeCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockCreatorCreateDataLakeCall) DoAndReturn(f func(string, *mongodbatlas.DataLakeCreateRequest) (*mongodbatlas.DataLake, error)) *MockCreatorCreateDataLakeCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
