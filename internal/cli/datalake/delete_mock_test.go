// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/datalake (interfaces: Deleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=datalake . Deleter
//

// Package datalake is a generated GoMock package.
package datalake

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeleter is a mock of Deleter interface.
type MockDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDeleterMockRecorder
	isgomock struct{}
}

// MockDeleterMockRecorder is the mock recorder for MockDeleter.
type MockDeleterMockRecorder struct {
	mock *MockDeleter
}

// NewMockDeleter creates a new mock instance.
func NewMockDeleter(ctrl *gomock.Controller) *MockDeleter {
	mock := &MockDeleter{ctrl: ctrl}
	mock.recorder = &MockDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleter) EXPECT() *MockDeleterMockRecorder {
	return m.recorder
}

// DeleteDataLake mocks base method.
func (m *MockDeleter) DeleteDataLake(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDataLake", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDataLake indicates an expected call of DeleteDataLake.
func (mr *MockDeleterMockRecorder) DeleteDataLake(arg0, arg1 any) *MockDeleterDeleteDataLakeCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDataLake", reflect.TypeOf((*MockDeleter)(nil).DeleteDataLake), arg0, arg1)
	return &MockDeleterDeleteDataLakeCall{Call: call}
}

// MockDeleterDeleteDataLakeCall wrap *gomock.Call
type MockDeleterDeleteDataLakeCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDeleterDeleteDataLakeCall) Return(arg0 error) *MockDeleterDeleteDataLakeCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDeleterDeleteDataLakeCall) Do(f func(string, string) error) *MockDeleterDeleteDataLakeCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDeleterDeleteDataLakeCall) DoAndReturn(f func(string, string) error) *MockDeleterDeleteDataLakeCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
