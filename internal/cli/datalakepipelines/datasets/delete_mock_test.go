// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/datalakepipelines/datasets (interfaces: PipelineDatasetDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=datasets . PipelineDatasetDeleter
//

// Package datasets is a generated GoMock package.
package datasets

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPipelineDatasetDeleter is a mock of PipelineDatasetDeleter interface.
type MockPipelineDatasetDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockPipelineDatasetDeleterMockRecorder
	isgomock struct{}
}

// MockPipelineDatasetDeleterMockRecorder is the mock recorder for MockPipelineDatasetDeleter.
type MockPipelineDatasetDeleterMockRecorder struct {
	mock *MockPipelineDatasetDeleter
}

// NewMockPipelineDatasetDeleter creates a new mock instance.
func NewMockPipelineDatasetDeleter(ctrl *gomock.Controller) *MockPipelineDatasetDeleter {
	mock := &MockPipelineDatasetDeleter{ctrl: ctrl}
	mock.recorder = &MockPipelineDatasetDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPipelineDatasetDeleter) EXPECT() *MockPipelineDatasetDeleterMockRecorder {
	return m.recorder
}

// DeletePipelineDataset mocks base method.
func (m *MockPipelineDatasetDeleter) DeletePipelineDataset(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePipelineDataset", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePipelineDataset indicates an expected call of DeletePipelineDataset.
func (mr *MockPipelineDatasetDeleterMockRecorder) DeletePipelineDataset(arg0, arg1, arg2 any) *MockPipelineDatasetDeleterDeletePipelineDatasetCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePipelineDataset", reflect.TypeOf((*MockPipelineDatasetDeleter)(nil).DeletePipelineDataset), arg0, arg1, arg2)
	return &MockPipelineDatasetDeleterDeletePipelineDatasetCall{Call: call}
}

// MockPipelineDatasetDeleterDeletePipelineDatasetCall wrap *gomock.Call
type MockPipelineDatasetDeleterDeletePipelineDatasetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockPipelineDatasetDeleterDeletePipelineDatasetCall) Return(arg0 error) *MockPipelineDatasetDeleterDeletePipelineDatasetCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockPipelineDatasetDeleterDeletePipelineDatasetCall) Do(f func(string, string, string) error) *MockPipelineDatasetDeleterDeletePipelineDatasetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockPipelineDatasetDeleterDeletePipelineDatasetCall) DoAndReturn(f func(string, string, string) error) *MockPipelineDatasetDeleterDeletePipelineDatasetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
