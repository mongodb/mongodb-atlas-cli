// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/datalakepipelines (interfaces: PipelinesDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=datalakepipelines . PipelinesDescriber
//

// Package datalakepipelines is a generated GoMock package.
package datalakepipelines

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockPipelinesDescriber is a mock of PipelinesDescriber interface.
type MockPipelinesDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockPipelinesDescriberMockRecorder
	isgomock struct{}
}

// MockPipelinesDescriberMockRecorder is the mock recorder for MockPipelinesDescriber.
type MockPipelinesDescriberMockRecorder struct {
	mock *MockPipelinesDescriber
}

// NewMockPipelinesDescriber creates a new mock instance.
func NewMockPipelinesDescriber(ctrl *gomock.Controller) *MockPipelinesDescriber {
	mock := &MockPipelinesDescriber{ctrl: ctrl}
	mock.recorder = &MockPipelinesDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPipelinesDescriber) EXPECT() *MockPipelinesDescriberMockRecorder {
	return m.recorder
}

// Pipeline mocks base method.
func (m *MockPipelinesDescriber) Pipeline(arg0, arg1 string) (*admin.DataLakeIngestionPipeline, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pipeline", arg0, arg1)
	ret0, _ := ret[0].(*admin.DataLakeIngestionPipeline)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pipeline indicates an expected call of Pipeline.
func (mr *MockPipelinesDescriberMockRecorder) Pipeline(arg0, arg1 any) *MockPipelinesDescriberPipelineCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pipeline", reflect.TypeOf((*MockPipelinesDescriber)(nil).Pipeline), arg0, arg1)
	return &MockPipelinesDescriberPipelineCall{Call: call}
}

// MockPipelinesDescriberPipelineCall wrap *gomock.Call
type MockPipelinesDescriberPipelineCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockPipelinesDescriberPipelineCall) Return(arg0 *admin.DataLakeIngestionPipeline, arg1 error) *MockPipelinesDescriberPipelineCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockPipelinesDescriberPipelineCall) Do(f func(string, string) (*admin.DataLakeIngestionPipeline, error)) *MockPipelinesDescriberPipelineCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockPipelinesDescriberPipelineCall) DoAndReturn(f func(string, string) (*admin.DataLakeIngestionPipeline, error)) *MockPipelinesDescriberPipelineCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
