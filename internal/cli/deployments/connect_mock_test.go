// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/deployments (interfaces: ClusterDescriberStarter)
//
// Generated by this command:
//
//	mockgen -typed -destination=connect_mock_test.go -package=deployments . ClusterDescriberStarter
//

// Package deployments is a generated GoMock package.
package deployments

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockClusterDescriberStarter is a mock of ClusterDescriberStarter interface.
type MockClusterDescriberStarter struct {
	ctrl     *gomock.Controller
	recorder *MockClusterDescriberStarterMockRecorder
	isgomock struct{}
}

// MockClusterDescriberStarterMockRecorder is the mock recorder for MockClusterDescriberStarter.
type MockClusterDescriberStarterMockRecorder struct {
	mock *MockClusterDescriberStarter
}

// NewMockClusterDescriberStarter creates a new mock instance.
func NewMockClusterDescriberStarter(ctrl *gomock.Controller) *MockClusterDescriberStarter {
	mock := &MockClusterDescriberStarter{ctrl: ctrl}
	mock.recorder = &MockClusterDescriberStarterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterDescriberStarter) EXPECT() *MockClusterDescriberStarterMockRecorder {
	return m.recorder
}

// AtlasCluster mocks base method.
func (m *MockClusterDescriberStarter) AtlasCluster(arg0, arg1 string) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasCluster indicates an expected call of AtlasCluster.
func (mr *MockClusterDescriberStarterMockRecorder) AtlasCluster(arg0, arg1 any) *MockClusterDescriberStarterAtlasClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasCluster", reflect.TypeOf((*MockClusterDescriberStarter)(nil).AtlasCluster), arg0, arg1)
	return &MockClusterDescriberStarterAtlasClusterCall{Call: call}
}

// MockClusterDescriberStarterAtlasClusterCall wrap *gomock.Call
type MockClusterDescriberStarterAtlasClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterDescriberStarterAtlasClusterCall) Return(arg0 *admin.AdvancedClusterDescription, arg1 error) *MockClusterDescriberStarterAtlasClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterDescriberStarterAtlasClusterCall) Do(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterDescriberStarterAtlasClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterDescriberStarterAtlasClusterCall) DoAndReturn(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterDescriberStarterAtlasClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// StartCluster mocks base method.
func (m *MockClusterDescriberStarter) StartCluster(arg0, arg1 string) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartCluster indicates an expected call of StartCluster.
func (mr *MockClusterDescriberStarterMockRecorder) StartCluster(arg0, arg1 any) *MockClusterDescriberStarterStartClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartCluster", reflect.TypeOf((*MockClusterDescriberStarter)(nil).StartCluster), arg0, arg1)
	return &MockClusterDescriberStarterStartClusterCall{Call: call}
}

// MockClusterDescriberStarterStartClusterCall wrap *gomock.Call
type MockClusterDescriberStarterStartClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterDescriberStarterStartClusterCall) Return(arg0 *admin.AdvancedClusterDescription, arg1 error) *MockClusterDescriberStarterStartClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterDescriberStarterStartClusterCall) Do(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterDescriberStarterStartClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterDescriberStarterStartClusterCall) DoAndReturn(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterDescriberStarterStartClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
