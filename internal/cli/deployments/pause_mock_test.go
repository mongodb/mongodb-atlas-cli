// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/deployments (interfaces: ClusterPauser)
//
// Generated by this command:
//
//	mockgen -typed -destination=pause_mock_test.go -package=deployments . ClusterPauser
//

// Package deployments is a generated GoMock package.
package deployments

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockClusterPauser is a mock of ClusterPauser interface.
type MockClusterPauser struct {
	ctrl     *gomock.Controller
	recorder *MockClusterPauserMockRecorder
	isgomock struct{}
}

// MockClusterPauserMockRecorder is the mock recorder for MockClusterPauser.
type MockClusterPauserMockRecorder struct {
	mock *MockClusterPauser
}

// NewMockClusterPauser creates a new mock instance.
func NewMockClusterPauser(ctrl *gomock.Controller) *MockClusterPauser {
	mock := &MockClusterPauser{ctrl: ctrl}
	mock.recorder = &MockClusterPauserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterPauser) EXPECT() *MockClusterPauserMockRecorder {
	return m.recorder
}

// PauseCluster mocks base method.
func (m *MockClusterPauser) PauseCluster(arg0, arg1 string) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PauseCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PauseCluster indicates an expected call of PauseCluster.
func (mr *MockClusterPauserMockRecorder) PauseCluster(arg0, arg1 any) *MockClusterPauserPauseClusterCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PauseCluster", reflect.TypeOf((*MockClusterPauser)(nil).PauseCluster), arg0, arg1)
	return &MockClusterPauserPauseClusterCall{Call: call}
}

// MockClusterPauserPauseClusterCall wrap *gomock.Call
type MockClusterPauserPauseClusterCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockClusterPauserPauseClusterCall) Return(arg0 *admin.AdvancedClusterDescription, arg1 error) *MockClusterPauserPauseClusterCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockClusterPauserPauseClusterCall) Do(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterPauserPauseClusterCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockClusterPauserPauseClusterCall) DoAndReturn(f func(string, string) (*admin.AdvancedClusterDescription, error)) *MockClusterPauserPauseClusterCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
