// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/federatedauthentication/federationsettings/connectedorgsconfigs (interfaces: ConnectedOrgConfigsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=connectedorgsconfigs . ConnectedOrgConfigsDescriber
//

// Package connectedorgsconfigs is a generated GoMock package.
package connectedorgsconfigs

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockConnectedOrgConfigsDescriber is a mock of ConnectedOrgConfigsDescriber interface.
type MockConnectedOrgConfigsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockConnectedOrgConfigsDescriberMockRecorder
	isgomock struct{}
}

// MockConnectedOrgConfigsDescriberMockRecorder is the mock recorder for MockConnectedOrgConfigsDescriber.
type MockConnectedOrgConfigsDescriberMockRecorder struct {
	mock *MockConnectedOrgConfigsDescriber
}

// NewMockConnectedOrgConfigsDescriber creates a new mock instance.
func NewMockConnectedOrgConfigsDescriber(ctrl *gomock.Controller) *MockConnectedOrgConfigsDescriber {
	mock := &MockConnectedOrgConfigsDescriber{ctrl: ctrl}
	mock.recorder = &MockConnectedOrgConfigsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectedOrgConfigsDescriber) EXPECT() *MockConnectedOrgConfigsDescriberMockRecorder {
	return m.recorder
}

// GetConnectedOrgConfig mocks base method.
func (m *MockConnectedOrgConfigsDescriber) GetConnectedOrgConfig(opts *admin.GetConnectedOrgConfigApiParams) (*admin.ConnectedOrgConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectedOrgConfig", opts)
	ret0, _ := ret[0].(*admin.ConnectedOrgConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConnectedOrgConfig indicates an expected call of GetConnectedOrgConfig.
func (mr *MockConnectedOrgConfigsDescriberMockRecorder) GetConnectedOrgConfig(opts any) *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectedOrgConfig", reflect.TypeOf((*MockConnectedOrgConfigsDescriber)(nil).GetConnectedOrgConfig), opts)
	return &MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall{Call: call}
}

// MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall wrap *gomock.Call
type MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall) Return(arg0 *admin.ConnectedOrgConfig, arg1 error) *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall) Do(f func(*admin.GetConnectedOrgConfigApiParams) (*admin.ConnectedOrgConfig, error)) *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall) DoAndReturn(f func(*admin.GetConnectedOrgConfigApiParams) (*admin.ConnectedOrgConfig, error)) *MockConnectedOrgConfigsDescriberGetConnectedOrgConfigCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
