// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/integrations/create (interfaces: IntegrationCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=create . IntegrationCreator
//

// Package create is a generated GoMock package.
package create

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockIntegrationCreator is a mock of IntegrationCreator interface.
type MockIntegrationCreator struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationCreatorMockRecorder
	isgomock struct{}
}

// MockIntegrationCreatorMockRecorder is the mock recorder for MockIntegrationCreator.
type MockIntegrationCreatorMockRecorder struct {
	mock *MockIntegrationCreator
}

// NewMockIntegrationCreator creates a new mock instance.
func NewMockIntegrationCreator(ctrl *gomock.Controller) *MockIntegrationCreator {
	mock := &MockIntegrationCreator{ctrl: ctrl}
	mock.recorder = &MockIntegrationCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntegrationCreator) EXPECT() *MockIntegrationCreatorMockRecorder {
	return m.recorder
}

// CreateIntegration mocks base method.
func (m *MockIntegrationCreator) CreateIntegration(arg0, arg1 string, arg2 *admin.ThirdPartyIntegration) (*admin.PaginatedIntegration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIntegration", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.PaginatedIntegration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIntegration indicates an expected call of CreateIntegration.
func (mr *MockIntegrationCreatorMockRecorder) CreateIntegration(arg0, arg1, arg2 any) *MockIntegrationCreatorCreateIntegrationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIntegration", reflect.TypeOf((*MockIntegrationCreator)(nil).CreateIntegration), arg0, arg1, arg2)
	return &MockIntegrationCreatorCreateIntegrationCall{Call: call}
}

// MockIntegrationCreatorCreateIntegrationCall wrap *gomock.Call
type MockIntegrationCreatorCreateIntegrationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockIntegrationCreatorCreateIntegrationCall) Return(arg0 *admin.PaginatedIntegration, arg1 error) *MockIntegrationCreatorCreateIntegrationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockIntegrationCreatorCreateIntegrationCall) Do(f func(string, string, *admin.ThirdPartyIntegration) (*admin.PaginatedIntegration, error)) *MockIntegrationCreatorCreateIntegrationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockIntegrationCreatorCreateIntegrationCall) DoAndReturn(f func(string, string, *admin.ThirdPartyIntegration) (*admin.PaginatedIntegration, error)) *MockIntegrationCreatorCreateIntegrationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
