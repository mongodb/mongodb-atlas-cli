// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/integrations (interfaces: IntegrationDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=integrations . IntegrationDeleter
//

// Package integrations is a generated GoMock package.
package integrations

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIntegrationDeleter is a mock of IntegrationDeleter interface.
type MockIntegrationDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationDeleterMockRecorder
	isgomock struct{}
}

// MockIntegrationDeleterMockRecorder is the mock recorder for MockIntegrationDeleter.
type MockIntegrationDeleterMockRecorder struct {
	mock *MockIntegrationDeleter
}

// NewMockIntegrationDeleter creates a new mock instance.
func NewMockIntegrationDeleter(ctrl *gomock.Controller) *MockIntegrationDeleter {
	mock := &MockIntegrationDeleter{ctrl: ctrl}
	mock.recorder = &MockIntegrationDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntegrationDeleter) EXPECT() *MockIntegrationDeleterMockRecorder {
	return m.recorder
}

// DeleteIntegration mocks base method.
func (m *MockIntegrationDeleter) DeleteIntegration(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteIntegration", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteIntegration indicates an expected call of DeleteIntegration.
func (mr *MockIntegrationDeleterMockRecorder) DeleteIntegration(arg0, arg1 any) *MockIntegrationDeleterDeleteIntegrationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteIntegration", reflect.TypeOf((*MockIntegrationDeleter)(nil).DeleteIntegration), arg0, arg1)
	return &MockIntegrationDeleterDeleteIntegrationCall{Call: call}
}

// MockIntegrationDeleterDeleteIntegrationCall wrap *gomock.Call
type MockIntegrationDeleterDeleteIntegrationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockIntegrationDeleterDeleteIntegrationCall) Return(arg0 error) *MockIntegrationDeleterDeleteIntegrationCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockIntegrationDeleterDeleteIntegrationCall) Do(f func(string, string) error) *MockIntegrationDeleterDeleteIntegrationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockIntegrationDeleterDeleteIntegrationCall) DoAndReturn(f func(string, string) error) *MockIntegrationDeleterDeleteIntegrationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
