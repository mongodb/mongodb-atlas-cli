// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/integrations (interfaces: IntegrationLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=integrations . IntegrationLister
//

// Package integrations is a generated GoMock package.
package integrations

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockIntegrationLister is a mock of IntegrationLister interface.
type MockIntegrationLister struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationListerMockRecorder
	isgomock struct{}
}

// MockIntegrationListerMockRecorder is the mock recorder for MockIntegrationLister.
type MockIntegrationListerMockRecorder struct {
	mock *MockIntegrationLister
}

// NewMockIntegrationLister creates a new mock instance.
func NewMockIntegrationLister(ctrl *gomock.Controller) *MockIntegrationLister {
	mock := &MockIntegrationLister{ctrl: ctrl}
	mock.recorder = &MockIntegrationListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntegrationLister) EXPECT() *MockIntegrationListerMockRecorder {
	return m.recorder
}

// Integrations mocks base method.
func (m *MockIntegrationLister) Integrations(arg0 string) (*admin.PaginatedIntegration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Integrations", arg0)
	ret0, _ := ret[0].(*admin.PaginatedIntegration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Integrations indicates an expected call of Integrations.
func (mr *MockIntegrationListerMockRecorder) Integrations(arg0 any) *MockIntegrationListerIntegrationsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Integrations", reflect.TypeOf((*MockIntegrationLister)(nil).Integrations), arg0)
	return &MockIntegrationListerIntegrationsCall{Call: call}
}

// MockIntegrationListerIntegrationsCall wrap *gomock.Call
type MockIntegrationListerIntegrationsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockIntegrationListerIntegrationsCall) Return(arg0 *admin.PaginatedIntegration, arg1 error) *MockIntegrationListerIntegrationsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockIntegrationListerIntegrationsCall) Do(f func(string) (*admin.PaginatedIntegration, error)) *MockIntegrationListerIntegrationsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockIntegrationListerIntegrationsCall) DoAndReturn(f func(string) (*admin.PaginatedIntegration, error)) *MockIntegrationListerIntegrationsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
