// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/livemigrations/validation (interfaces: LiveMigrationValidationsCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=validation . LiveMigrationValidationsCreator
//

// Package validation is a generated GoMock package.
package validation

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockLiveMigrationValidationsCreator is a mock of LiveMigrationValidationsCreator interface.
type MockLiveMigrationValidationsCreator struct {
	ctrl     *gomock.Controller
	recorder *MockLiveMigrationValidationsCreatorMockRecorder
	isgomock struct{}
}

// MockLiveMigrationValidationsCreatorMockRecorder is the mock recorder for MockLiveMigrationValidationsCreator.
type MockLiveMigrationValidationsCreatorMockRecorder struct {
	mock *MockLiveMigrationValidationsCreator
}

// NewMockLiveMigrationValidationsCreator creates a new mock instance.
func NewMockLiveMigrationValidationsCreator(ctrl *gomock.Controller) *MockLiveMigrationValidationsCreator {
	mock := &MockLiveMigrationValidationsCreator{ctrl: ctrl}
	mock.recorder = &MockLiveMigrationValidationsCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLiveMigrationValidationsCreator) EXPECT() *MockLiveMigrationValidationsCreatorMockRecorder {
	return m.recorder
}

// CreateValidation mocks base method.
func (m *MockLiveMigrationValidationsCreator) CreateValidation(arg0 string, arg1 *admin.LiveMigrationRequest20240530) (*admin.LiveImportValidation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateValidation", arg0, arg1)
	ret0, _ := ret[0].(*admin.LiveImportValidation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateValidation indicates an expected call of CreateValidation.
func (mr *MockLiveMigrationValidationsCreatorMockRecorder) CreateValidation(arg0, arg1 any) *MockLiveMigrationValidationsCreatorCreateValidationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateValidation", reflect.TypeOf((*MockLiveMigrationValidationsCreator)(nil).CreateValidation), arg0, arg1)
	return &MockLiveMigrationValidationsCreatorCreateValidationCall{Call: call}
}

// MockLiveMigrationValidationsCreatorCreateValidationCall wrap *gomock.Call
type MockLiveMigrationValidationsCreatorCreateValidationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockLiveMigrationValidationsCreatorCreateValidationCall) Return(arg0 *admin.LiveImportValidation, arg1 error) *MockLiveMigrationValidationsCreatorCreateValidationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockLiveMigrationValidationsCreatorCreateValidationCall) Do(f func(string, *admin.LiveMigrationRequest20240530) (*admin.LiveImportValidation, error)) *MockLiveMigrationValidationsCreatorCreateValidationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockLiveMigrationValidationsCreatorCreateValidationCall) DoAndReturn(f func(string, *admin.LiveMigrationRequest20240530) (*admin.LiveImportValidation, error)) *MockLiveMigrationValidationsCreatorCreateValidationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
