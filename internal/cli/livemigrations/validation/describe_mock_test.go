// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/livemigrations/validation (interfaces: LiveMigrationValidationsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=validation . LiveMigrationValidationsDescriber
//

// Package validation is a generated GoMock package.
package validation

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockLiveMigrationValidationsDescriber is a mock of LiveMigrationValidationsDescriber interface.
type MockLiveMigrationValidationsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockLiveMigrationValidationsDescriberMockRecorder
	isgomock struct{}
}

// MockLiveMigrationValidationsDescriberMockRecorder is the mock recorder for MockLiveMigrationValidationsDescriber.
type MockLiveMigrationValidationsDescriberMockRecorder struct {
	mock *MockLiveMigrationValidationsDescriber
}

// NewMockLiveMigrationValidationsDescriber creates a new mock instance.
func NewMockLiveMigrationValidationsDescriber(ctrl *gomock.Controller) *MockLiveMigrationValidationsDescriber {
	mock := &MockLiveMigrationValidationsDescriber{ctrl: ctrl}
	mock.recorder = &MockLiveMigrationValidationsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLiveMigrationValidationsDescriber) EXPECT() *MockLiveMigrationValidationsDescriberMockRecorder {
	return m.recorder
}

// GetValidationStatus mocks base method.
func (m *MockLiveMigrationValidationsDescriber) GetValidationStatus(arg0, arg1 string) (*admin.LiveImportValidation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidationStatus", arg0, arg1)
	ret0, _ := ret[0].(*admin.LiveImportValidation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetValidationStatus indicates an expected call of GetValidationStatus.
func (mr *MockLiveMigrationValidationsDescriberMockRecorder) GetValidationStatus(arg0, arg1 any) *MockLiveMigrationValidationsDescriberGetValidationStatusCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidationStatus", reflect.TypeOf((*MockLiveMigrationValidationsDescriber)(nil).GetValidationStatus), arg0, arg1)
	return &MockLiveMigrationValidationsDescriberGetValidationStatusCall{Call: call}
}

// MockLiveMigrationValidationsDescriberGetValidationStatusCall wrap *gomock.Call
type MockLiveMigrationValidationsDescriberGetValidationStatusCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockLiveMigrationValidationsDescriberGetValidationStatusCall) Return(arg0 *admin.LiveImportValidation, arg1 error) *MockLiveMigrationValidationsDescriberGetValidationStatusCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockLiveMigrationValidationsDescriberGetValidationStatusCall) Do(f func(string, string) (*admin.LiveImportValidation, error)) *MockLiveMigrationValidationsDescriberGetValidationStatusCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockLiveMigrationValidationsDescriberGetValidationStatusCall) DoAndReturn(f func(string, string) (*admin.LiveImportValidation, error)) *MockLiveMigrationValidationsDescriberGetValidationStatusCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
