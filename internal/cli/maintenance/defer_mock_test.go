// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/maintenance (interfaces: Deferrer)
//
// Generated by this command:
//
//	mockgen -typed -destination=defer_mock_test.go -package=maintenance . Deferrer
//

// Package maintenance is a generated GoMock package.
package maintenance

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeferrer is a mock of Deferrer interface.
type MockDeferrer struct {
	ctrl     *gomock.Controller
	recorder *MockDeferrerMockRecorder
	isgomock struct{}
}

// MockDeferrerMockRecorder is the mock recorder for MockDeferrer.
type MockDeferrerMockRecorder struct {
	mock *MockDeferrer
}

// NewMockDeferrer creates a new mock instance.
func NewMockDeferrer(ctrl *gomock.Controller) *MockDeferrer {
	mock := &MockDeferrer{ctrl: ctrl}
	mock.recorder = &MockDeferrerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeferrer) EXPECT() *MockDeferrerMockRecorder {
	return m.recorder
}

// DeferMaintenanceWindow mocks base method.
func (m *MockDeferrer) DeferMaintenanceWindow(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeferMaintenanceWindow", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeferMaintenanceWindow indicates an expected call of DeferMaintenanceWindow.
func (mr *MockDeferrerMockRecorder) DeferMaintenanceWindow(arg0 any) *MockDeferrerDeferMaintenanceWindowCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeferMaintenanceWindow", reflect.TypeOf((*MockDeferrer)(nil).DeferMaintenanceWindow), arg0)
	return &MockDeferrerDeferMaintenanceWindowCall{Call: call}
}

// MockDeferrerDeferMaintenanceWindowCall wrap *gomock.Call
type MockDeferrerDeferMaintenanceWindowCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDeferrerDeferMaintenanceWindowCall) Return(arg0 error) *MockDeferrerDeferMaintenanceWindowCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDeferrerDeferMaintenanceWindowCall) Do(f func(string) error) *MockDeferrerDeferMaintenanceWindowCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDeferrerDeferMaintenanceWindowCall) DoAndReturn(f func(string) error) *MockDeferrerDeferMaintenanceWindowCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
