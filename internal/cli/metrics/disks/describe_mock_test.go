// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/metrics/disks (interfaces: ProcessDiskMeasurementsLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=disks . ProcessDiskMeasurementsLister
//

// Package disks is a generated GoMock package.
package disks

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockProcessDiskMeasurementsLister is a mock of ProcessDiskMeasurementsLister interface.
type MockProcessDiskMeasurementsLister struct {
	ctrl     *gomock.Controller
	recorder *MockProcessDiskMeasurementsListerMockRecorder
	isgomock struct{}
}

// MockProcessDiskMeasurementsListerMockRecorder is the mock recorder for MockProcessDiskMeasurementsLister.
type MockProcessDiskMeasurementsListerMockRecorder struct {
	mock *MockProcessDiskMeasurementsLister
}

// NewMockProcessDiskMeasurementsLister creates a new mock instance.
func NewMockProcessDiskMeasurementsLister(ctrl *gomock.Controller) *MockProcessDiskMeasurementsLister {
	mock := &MockProcessDiskMeasurementsLister{ctrl: ctrl}
	mock.recorder = &MockProcessDiskMeasurementsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessDiskMeasurementsLister) EXPECT() *MockProcessDiskMeasurementsListerMockRecorder {
	return m.recorder
}

// ProcessDiskMeasurements mocks base method.
func (m *MockProcessDiskMeasurementsLister) ProcessDiskMeasurements(arg0 *admin.GetDiskMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessDiskMeasurements", arg0)
	ret0, _ := ret[0].(*admin.ApiMeasurementsGeneralViewAtlas)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessDiskMeasurements indicates an expected call of ProcessDiskMeasurements.
func (mr *MockProcessDiskMeasurementsListerMockRecorder) ProcessDiskMeasurements(arg0 any) *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessDiskMeasurements", reflect.TypeOf((*MockProcessDiskMeasurementsLister)(nil).ProcessDiskMeasurements), arg0)
	return &MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall{Call: call}
}

// MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall wrap *gomock.Call
type MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall) Return(arg0 *admin.ApiMeasurementsGeneralViewAtlas, arg1 error) *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall) Do(f func(*admin.GetDiskMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error)) *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall) DoAndReturn(f func(*admin.GetDiskMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error)) *MockProcessDiskMeasurementsListerProcessDiskMeasurementsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
