// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/metrics/processes (interfaces: ProcessMeasurementLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=processes_mock_test.go -package=processes . ProcessMeasurementLister
//

// Package processes is a generated GoMock package.
package processes

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockProcessMeasurementLister is a mock of ProcessMeasurementLister interface.
type MockProcessMeasurementLister struct {
	ctrl     *gomock.Controller
	recorder *MockProcessMeasurementListerMockRecorder
	isgomock struct{}
}

// MockProcessMeasurementListerMockRecorder is the mock recorder for MockProcessMeasurementLister.
type MockProcessMeasurementListerMockRecorder struct {
	mock *MockProcessMeasurementLister
}

// NewMockProcessMeasurementLister creates a new mock instance.
func NewMockProcessMeasurementLister(ctrl *gomock.Controller) *MockProcessMeasurementLister {
	mock := &MockProcessMeasurementLister{ctrl: ctrl}
	mock.recorder = &MockProcessMeasurementListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessMeasurementLister) EXPECT() *MockProcessMeasurementListerMockRecorder {
	return m.recorder
}

// ProcessMeasurements mocks base method.
func (m *MockProcessMeasurementLister) ProcessMeasurements(arg0 *admin.GetHostMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessMeasurements", arg0)
	ret0, _ := ret[0].(*admin.ApiMeasurementsGeneralViewAtlas)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessMeasurements indicates an expected call of ProcessMeasurements.
func (mr *MockProcessMeasurementListerMockRecorder) ProcessMeasurements(arg0 any) *MockProcessMeasurementListerProcessMeasurementsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessMeasurements", reflect.TypeOf((*MockProcessMeasurementLister)(nil).ProcessMeasurements), arg0)
	return &MockProcessMeasurementListerProcessMeasurementsCall{Call: call}
}

// MockProcessMeasurementListerProcessMeasurementsCall wrap *gomock.Call
type MockProcessMeasurementListerProcessMeasurementsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProcessMeasurementListerProcessMeasurementsCall) Return(arg0 *admin.ApiMeasurementsGeneralViewAtlas, arg1 error) *MockProcessMeasurementListerProcessMeasurementsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProcessMeasurementListerProcessMeasurementsCall) Do(f func(*admin.GetHostMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error)) *MockProcessMeasurementListerProcessMeasurementsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProcessMeasurementListerProcessMeasurementsCall) DoAndReturn(f func(*admin.GetHostMeasurementsApiParams) (*admin.ApiMeasurementsGeneralViewAtlas, error)) *MockProcessMeasurementListerProcessMeasurementsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
