// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/networking/peering/create (interfaces: GCPPeeringConnectionCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=gcp_mock_test.go -package=create . GCPPeeringConnectionCreator
//

// Package create is a generated GoMock package.
package create

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockGCPPeeringConnectionCreator is a mock of GCPPeeringConnectionCreator interface.
type MockGCPPeeringConnectionCreator struct {
	ctrl     *gomock.Controller
	recorder *MockGCPPeeringConnectionCreatorMockRecorder
	isgomock struct{}
}

// MockGCPPeeringConnectionCreatorMockRecorder is the mock recorder for MockGCPPeeringConnectionCreator.
type MockGCPPeeringConnectionCreatorMockRecorder struct {
	mock *MockGCPPeeringConnectionCreator
}

// NewMockGCPPeeringConnectionCreator creates a new mock instance.
func NewMockGCPPeeringConnectionCreator(ctrl *gomock.Controller) *MockGCPPeeringConnectionCreator {
	mock := &MockGCPPeeringConnectionCreator{ctrl: ctrl}
	mock.recorder = &MockGCPPeeringConnectionCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGCPPeeringConnectionCreator) EXPECT() *MockGCPPeeringConnectionCreatorMockRecorder {
	return m.recorder
}

// CreateContainer mocks base method.
func (m *MockGCPPeeringConnectionCreator) CreateContainer(arg0 string, arg1 *admin.CloudProviderContainer) (*admin.CloudProviderContainer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateContainer", arg0, arg1)
	ret0, _ := ret[0].(*admin.CloudProviderContainer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateContainer indicates an expected call of CreateContainer.
func (mr *MockGCPPeeringConnectionCreatorMockRecorder) CreateContainer(arg0, arg1 any) *MockGCPPeeringConnectionCreatorCreateContainerCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateContainer", reflect.TypeOf((*MockGCPPeeringConnectionCreator)(nil).CreateContainer), arg0, arg1)
	return &MockGCPPeeringConnectionCreatorCreateContainerCall{Call: call}
}

// MockGCPPeeringConnectionCreatorCreateContainerCall wrap *gomock.Call
type MockGCPPeeringConnectionCreatorCreateContainerCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockGCPPeeringConnectionCreatorCreateContainerCall) Return(arg0 *admin.CloudProviderContainer, arg1 error) *MockGCPPeeringConnectionCreatorCreateContainerCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockGCPPeeringConnectionCreatorCreateContainerCall) Do(f func(string, *admin.CloudProviderContainer) (*admin.CloudProviderContainer, error)) *MockGCPPeeringConnectionCreatorCreateContainerCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockGCPPeeringConnectionCreatorCreateContainerCall) DoAndReturn(f func(string, *admin.CloudProviderContainer) (*admin.CloudProviderContainer, error)) *MockGCPPeeringConnectionCreatorCreateContainerCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// CreatePeeringConnection mocks base method.
func (m *MockGCPPeeringConnectionCreator) CreatePeeringConnection(arg0 string, arg1 *admin.BaseNetworkPeeringConnectionSettings) (*admin.BaseNetworkPeeringConnectionSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePeeringConnection", arg0, arg1)
	ret0, _ := ret[0].(*admin.BaseNetworkPeeringConnectionSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePeeringConnection indicates an expected call of CreatePeeringConnection.
func (mr *MockGCPPeeringConnectionCreatorMockRecorder) CreatePeeringConnection(arg0, arg1 any) *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePeeringConnection", reflect.TypeOf((*MockGCPPeeringConnectionCreator)(nil).CreatePeeringConnection), arg0, arg1)
	return &MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall{Call: call}
}

// MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall wrap *gomock.Call
type MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall) Return(arg0 *admin.BaseNetworkPeeringConnectionSettings, arg1 error) *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall) Do(f func(string, *admin.BaseNetworkPeeringConnectionSettings) (*admin.BaseNetworkPeeringConnectionSettings, error)) *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall) DoAndReturn(f func(string, *admin.BaseNetworkPeeringConnectionSettings) (*admin.BaseNetworkPeeringConnectionSettings, error)) *MockGCPPeeringConnectionCreatorCreatePeeringConnectionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// GCPContainers mocks base method.
func (m *MockGCPPeeringConnectionCreator) GCPContainers(arg0 string) ([]admin.CloudProviderContainer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GCPContainers", arg0)
	ret0, _ := ret[0].([]admin.CloudProviderContainer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GCPContainers indicates an expected call of GCPContainers.
func (mr *MockGCPPeeringConnectionCreatorMockRecorder) GCPContainers(arg0 any) *MockGCPPeeringConnectionCreatorGCPContainersCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GCPContainers", reflect.TypeOf((*MockGCPPeeringConnectionCreator)(nil).GCPContainers), arg0)
	return &MockGCPPeeringConnectionCreatorGCPContainersCall{Call: call}
}

// MockGCPPeeringConnectionCreatorGCPContainersCall wrap *gomock.Call
type MockGCPPeeringConnectionCreatorGCPContainersCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockGCPPeeringConnectionCreatorGCPContainersCall) Return(arg0 []admin.CloudProviderContainer, arg1 error) *MockGCPPeeringConnectionCreatorGCPContainersCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockGCPPeeringConnectionCreatorGCPContainersCall) Do(f func(string) ([]admin.CloudProviderContainer, error)) *MockGCPPeeringConnectionCreatorGCPContainersCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockGCPPeeringConnectionCreatorGCPContainersCall) DoAndReturn(f func(string) ([]admin.CloudProviderContainer, error)) *MockGCPPeeringConnectionCreatorGCPContainersCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
