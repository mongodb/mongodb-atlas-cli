// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/organizations/apikeys (interfaces: OrganizationAPIKeyCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=apikeys . OrganizationAPIKeyCreator
//

// Package apikeys is a generated GoMock package.
package apikeys

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockOrganizationAPIKeyCreator is a mock of OrganizationAPIKeyCreator interface.
type MockOrganizationAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyCreatorMockRecorder
	isgomock struct{}
}

// MockOrganizationAPIKeyCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyCreator.
type MockOrganizationAPIKeyCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyCreator
}

// NewMockOrganizationAPIKeyCreator creates a new mock instance.
func NewMockOrganizationAPIKeyCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyCreator {
	mock := &MockOrganizationAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyCreator) EXPECT() *MockOrganizationAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKey mocks base method.
func (m *MockOrganizationAPIKeyCreator) CreateOrganizationAPIKey(arg0 string, arg1 *admin.CreateAtlasOrganizationApiKey) (*admin.ApiKeyUserDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiKeyUserDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKey indicates an expected call of CreateOrganizationAPIKey.
func (mr *MockOrganizationAPIKeyCreatorMockRecorder) CreateOrganizationAPIKey(arg0, arg1 any) *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKey", reflect.TypeOf((*MockOrganizationAPIKeyCreator)(nil).CreateOrganizationAPIKey), arg0, arg1)
	return &MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall{Call: call}
}

// MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall wrap *gomock.Call
type MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall) Return(arg0 *admin.ApiKeyUserDetails, arg1 error) *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall) Do(f func(string, *admin.CreateAtlasOrganizationApiKey) (*admin.ApiKeyUserDetails, error)) *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall) DoAndReturn(f func(string, *admin.CreateAtlasOrganizationApiKey) (*admin.ApiKeyUserDetails, error)) *MockOrganizationAPIKeyCreatorCreateOrganizationAPIKeyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
