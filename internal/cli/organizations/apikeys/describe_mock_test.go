// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/organizations/apikeys (interfaces: OrganizationAPIKeyDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=apikeys . OrganizationAPIKeyDescriber
//

// Package apikeys is a generated GoMock package.
package apikeys

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockOrganizationAPIKeyDescriber is a mock of OrganizationAPIKeyDescriber interface.
type MockOrganizationAPIKeyDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyDescriberMockRecorder
	isgomock struct{}
}

// MockOrganizationAPIKeyDescriberMockRecorder is the mock recorder for MockOrganizationAPIKeyDescriber.
type MockOrganizationAPIKeyDescriberMockRecorder struct {
	mock *MockOrganizationAPIKeyDescriber
}

// NewMockOrganizationAPIKeyDescriber creates a new mock instance.
func NewMockOrganizationAPIKeyDescriber(ctrl *gomock.Controller) *MockOrganizationAPIKeyDescriber {
	mock := &MockOrganizationAPIKeyDescriber{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyDescriber) EXPECT() *MockOrganizationAPIKeyDescriberMockRecorder {
	return m.recorder
}

// OrganizationAPIKey mocks base method.
func (m *MockOrganizationAPIKeyDescriber) OrganizationAPIKey(arg0, arg1 string) (*admin.ApiKeyUserDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiKeyUserDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKey indicates an expected call of OrganizationAPIKey.
func (mr *MockOrganizationAPIKeyDescriberMockRecorder) OrganizationAPIKey(arg0, arg1 any) *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKey", reflect.TypeOf((*MockOrganizationAPIKeyDescriber)(nil).OrganizationAPIKey), arg0, arg1)
	return &MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall{Call: call}
}

// MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall wrap *gomock.Call
type MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall) Return(arg0 *admin.ApiKeyUserDetails, arg1 error) *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall) Do(f func(string, string) (*admin.ApiKeyUserDetails, error)) *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall) DoAndReturn(f func(string, string) (*admin.ApiKeyUserDetails, error)) *MockOrganizationAPIKeyDescriberOrganizationAPIKeyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
