// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/organizations (interfaces: OrganizationDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=organizations . OrganizationDeleter
//

// Package organizations is a generated GoMock package.
package organizations

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockOrganizationDeleter is a mock of OrganizationDeleter interface.
type MockOrganizationDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationDeleterMockRecorder
	isgomock struct{}
}

// MockOrganizationDeleterMockRecorder is the mock recorder for MockOrganizationDeleter.
type MockOrganizationDeleterMockRecorder struct {
	mock *MockOrganizationDeleter
}

// NewMockOrganizationDeleter creates a new mock instance.
func NewMockOrganizationDeleter(ctrl *gomock.Controller) *MockOrganizationDeleter {
	mock := &MockOrganizationDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationDeleter) EXPECT() *MockOrganizationDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganization mocks base method.
func (m *MockOrganizationDeleter) DeleteOrganization(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganization", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganization indicates an expected call of DeleteOrganization.
func (mr *MockOrganizationDeleterMockRecorder) DeleteOrganization(arg0 any) *MockOrganizationDeleterDeleteOrganizationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganization", reflect.TypeOf((*MockOrganizationDeleter)(nil).DeleteOrganization), arg0)
	return &MockOrganizationDeleterDeleteOrganizationCall{Call: call}
}

// MockOrganizationDeleterDeleteOrganizationCall wrap *gomock.Call
type MockOrganizationDeleterDeleteOrganizationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOrganizationDeleterDeleteOrganizationCall) Return(arg0 error) *MockOrganizationDeleterDeleteOrganizationCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOrganizationDeleterDeleteOrganizationCall) Do(f func(string) error) *MockOrganizationDeleterDeleteOrganizationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOrganizationDeleterDeleteOrganizationCall) DoAndReturn(f func(string) error) *MockOrganizationDeleterDeleteOrganizationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
