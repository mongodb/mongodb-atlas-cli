// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/organizations (interfaces: OrganizationDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=organizations . OrganizationDescriber
//

// Package organizations is a generated GoMock package.
package organizations

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockOrganizationDescriber is a mock of OrganizationDescriber interface.
type MockOrganizationDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationDescriberMockRecorder
	isgomock struct{}
}

// MockOrganizationDescriberMockRecorder is the mock recorder for MockOrganizationDescriber.
type MockOrganizationDescriberMockRecorder struct {
	mock *MockOrganizationDescriber
}

// NewMockOrganizationDescriber creates a new mock instance.
func NewMockOrganizationDescriber(ctrl *gomock.Controller) *MockOrganizationDescriber {
	mock := &MockOrganizationDescriber{ctrl: ctrl}
	mock.recorder = &MockOrganizationDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationDescriber) EXPECT() *MockOrganizationDescriberMockRecorder {
	return m.recorder
}

// Organization mocks base method.
func (m *MockOrganizationDescriber) Organization(arg0 string) (*admin.AtlasOrganization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Organization", arg0)
	ret0, _ := ret[0].(*admin.AtlasOrganization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Organization indicates an expected call of Organization.
func (mr *MockOrganizationDescriberMockRecorder) Organization(arg0 any) *MockOrganizationDescriberOrganizationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Organization", reflect.TypeOf((*MockOrganizationDescriber)(nil).Organization), arg0)
	return &MockOrganizationDescriberOrganizationCall{Call: call}
}

// MockOrganizationDescriberOrganizationCall wrap *gomock.Call
type MockOrganizationDescriberOrganizationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOrganizationDescriberOrganizationCall) Return(arg0 *admin.AtlasOrganization, arg1 error) *MockOrganizationDescriberOrganizationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOrganizationDescriberOrganizationCall) Do(f func(string) (*admin.AtlasOrganization, error)) *MockOrganizationDescriberOrganizationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOrganizationDescriberOrganizationCall) DoAndReturn(f func(string) (*admin.AtlasOrganization, error)) *MockOrganizationDescriberOrganizationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
