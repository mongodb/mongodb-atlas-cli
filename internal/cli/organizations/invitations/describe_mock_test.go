// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/organizations/invitations (interfaces: OrganizationInvitationDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=invitations . OrganizationInvitationDescriber
//

// Package invitations is a generated GoMock package.
package invitations

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockOrganizationInvitationDescriber is a mock of OrganizationInvitationDescriber interface.
type MockOrganizationInvitationDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationInvitationDescriberMockRecorder
	isgomock struct{}
}

// MockOrganizationInvitationDescriberMockRecorder is the mock recorder for MockOrganizationInvitationDescriber.
type MockOrganizationInvitationDescriberMockRecorder struct {
	mock *MockOrganizationInvitationDescriber
}

// NewMockOrganizationInvitationDescriber creates a new mock instance.
func NewMockOrganizationInvitationDescriber(ctrl *gomock.Controller) *MockOrganizationInvitationDescriber {
	mock := &MockOrganizationInvitationDescriber{ctrl: ctrl}
	mock.recorder = &MockOrganizationInvitationDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationInvitationDescriber) EXPECT() *MockOrganizationInvitationDescriberMockRecorder {
	return m.recorder
}

// OrganizationInvitation mocks base method.
func (m *MockOrganizationInvitationDescriber) OrganizationInvitation(arg0, arg1 string) (*admin.OrganizationInvitation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationInvitation", arg0, arg1)
	ret0, _ := ret[0].(*admin.OrganizationInvitation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationInvitation indicates an expected call of OrganizationInvitation.
func (mr *MockOrganizationInvitationDescriberMockRecorder) OrganizationInvitation(arg0, arg1 any) *MockOrganizationInvitationDescriberOrganizationInvitationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationInvitation", reflect.TypeOf((*MockOrganizationInvitationDescriber)(nil).OrganizationInvitation), arg0, arg1)
	return &MockOrganizationInvitationDescriberOrganizationInvitationCall{Call: call}
}

// MockOrganizationInvitationDescriberOrganizationInvitationCall wrap *gomock.Call
type MockOrganizationInvitationDescriberOrganizationInvitationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOrganizationInvitationDescriberOrganizationInvitationCall) Return(arg0 *admin.OrganizationInvitation, arg1 error) *MockOrganizationInvitationDescriberOrganizationInvitationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOrganizationInvitationDescriberOrganizationInvitationCall) Do(f func(string, string) (*admin.OrganizationInvitation, error)) *MockOrganizationInvitationDescriberOrganizationInvitationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOrganizationInvitationDescriberOrganizationInvitationCall) DoAndReturn(f func(string, string) (*admin.OrganizationInvitation, error)) *MockOrganizationInvitationDescriberOrganizationInvitationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
