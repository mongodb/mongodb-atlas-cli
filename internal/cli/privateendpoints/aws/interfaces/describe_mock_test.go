// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/privateendpoints/aws/interfaces (interfaces: InterfaceEndpointDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=interfaces . InterfaceEndpointDescriber
//

// Package interfaces is a generated GoMock package.
package interfaces

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockInterfaceEndpointDescriber is a mock of InterfaceEndpointDescriber interface.
type MockInterfaceEndpointDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDescriberMockRecorder
	isgomock struct{}
}

// MockInterfaceEndpointDescriberMockRecorder is the mock recorder for MockInterfaceEndpointDescriber.
type MockInterfaceEndpointDescriberMockRecorder struct {
	mock *MockInterfaceEndpointDescriber
}

// NewMockInterfaceEndpointDescriber creates a new mock instance.
func NewMockInterfaceEndpointDescriber(ctrl *gomock.Controller) *MockInterfaceEndpointDescriber {
	mock := &MockInterfaceEndpointDescriber{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterfaceEndpointDescriber) EXPECT() *MockInterfaceEndpointDescriberMockRecorder {
	return m.recorder
}

// InterfaceEndpoint mocks base method.
func (m *MockInterfaceEndpointDescriber) InterfaceEndpoint(projectID, cloudProvider, privateEndpointID, endpointServiceID string) (*admin.PrivateLinkEndpoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InterfaceEndpoint", projectID, cloudProvider, privateEndpointID, endpointServiceID)
	ret0, _ := ret[0].(*admin.PrivateLinkEndpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InterfaceEndpoint indicates an expected call of InterfaceEndpoint.
func (mr *MockInterfaceEndpointDescriberMockRecorder) InterfaceEndpoint(projectID, cloudProvider, privateEndpointID, endpointServiceID any) *MockInterfaceEndpointDescriberInterfaceEndpointCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointDescriber)(nil).InterfaceEndpoint), projectID, cloudProvider, privateEndpointID, endpointServiceID)
	return &MockInterfaceEndpointDescriberInterfaceEndpointCall{Call: call}
}

// MockInterfaceEndpointDescriberInterfaceEndpointCall wrap *gomock.Call
type MockInterfaceEndpointDescriberInterfaceEndpointCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockInterfaceEndpointDescriberInterfaceEndpointCall) Return(arg0 *admin.PrivateLinkEndpoint, arg1 error) *MockInterfaceEndpointDescriberInterfaceEndpointCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockInterfaceEndpointDescriberInterfaceEndpointCall) Do(f func(string, string, string, string) (*admin.PrivateLinkEndpoint, error)) *MockInterfaceEndpointDescriberInterfaceEndpointCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockInterfaceEndpointDescriberInterfaceEndpointCall) DoAndReturn(f func(string, string, string, string) (*admin.PrivateLinkEndpoint, error)) *MockInterfaceEndpointDescriberInterfaceEndpointCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
