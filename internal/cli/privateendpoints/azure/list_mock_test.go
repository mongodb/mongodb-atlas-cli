// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/privateendpoints/azure (interfaces: PrivateEndpointLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=azure . PrivateEndpointLister
//

// Package azure is a generated GoMock package.
package azure

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockPrivateEndpointLister is a mock of PrivateEndpointLister interface.
type MockPrivateEndpointLister struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointListerMockRecorder
	isgomock struct{}
}

// MockPrivateEndpointListerMockRecorder is the mock recorder for MockPrivateEndpointLister.
type MockPrivateEndpointListerMockRecorder struct {
	mock *MockPrivateEndpointLister
}

// NewMockPrivateEndpointLister creates a new mock instance.
func NewMockPrivateEndpointLister(ctrl *gomock.Controller) *MockPrivateEndpointLister {
	mock := &MockPrivateEndpointLister{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrivateEndpointLister) EXPECT() *MockPrivateEndpointListerMockRecorder {
	return m.recorder
}

// PrivateEndpoints mocks base method.
func (m *MockPrivateEndpointLister) PrivateEndpoints(arg0, arg1 string) ([]admin.EndpointService, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpoints", arg0, arg1)
	ret0, _ := ret[0].([]admin.EndpointService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpoints indicates an expected call of PrivateEndpoints.
func (mr *MockPrivateEndpointListerMockRecorder) PrivateEndpoints(arg0, arg1 any) *MockPrivateEndpointListerPrivateEndpointsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpoints", reflect.TypeOf((*MockPrivateEndpointLister)(nil).PrivateEndpoints), arg0, arg1)
	return &MockPrivateEndpointListerPrivateEndpointsCall{Call: call}
}

// MockPrivateEndpointListerPrivateEndpointsCall wrap *gomock.Call
type MockPrivateEndpointListerPrivateEndpointsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockPrivateEndpointListerPrivateEndpointsCall) Return(arg0 []admin.EndpointService, arg1 error) *MockPrivateEndpointListerPrivateEndpointsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockPrivateEndpointListerPrivateEndpointsCall) Do(f func(string, string) ([]admin.EndpointService, error)) *MockPrivateEndpointListerPrivateEndpointsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockPrivateEndpointListerPrivateEndpointsCall) DoAndReturn(f func(string, string) ([]admin.EndpointService, error)) *MockPrivateEndpointListerPrivateEndpointsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
