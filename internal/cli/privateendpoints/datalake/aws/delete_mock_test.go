// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/privateendpoints/datalake/aws (interfaces: DataLakePrivateEndpointDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=aws . DataLakePrivateEndpointDeleter
//

// Package aws is a generated GoMock package.
package aws

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDataLakePrivateEndpointDeleter is a mock of DataLakePrivateEndpointDeleter interface.
type MockDataLakePrivateEndpointDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDataLakePrivateEndpointDeleterMockRecorder
	isgomock struct{}
}

// MockDataLakePrivateEndpointDeleterMockRecorder is the mock recorder for MockDataLakePrivateEndpointDeleter.
type MockDataLakePrivateEndpointDeleterMockRecorder struct {
	mock *MockDataLakePrivateEndpointDeleter
}

// NewMockDataLakePrivateEndpointDeleter creates a new mock instance.
func NewMockDataLakePrivateEndpointDeleter(ctrl *gomock.Controller) *MockDataLakePrivateEndpointDeleter {
	mock := &MockDataLakePrivateEndpointDeleter{ctrl: ctrl}
	mock.recorder = &MockDataLakePrivateEndpointDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataLakePrivateEndpointDeleter) EXPECT() *MockDataLakePrivateEndpointDeleterMockRecorder {
	return m.recorder
}

// DataLakeDeletePrivateEndpoint mocks base method.
func (m *MockDataLakePrivateEndpointDeleter) DataLakeDeletePrivateEndpoint(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataLakeDeletePrivateEndpoint", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DataLakeDeletePrivateEndpoint indicates an expected call of DataLakeDeletePrivateEndpoint.
func (mr *MockDataLakePrivateEndpointDeleterMockRecorder) DataLakeDeletePrivateEndpoint(arg0, arg1 any) *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataLakeDeletePrivateEndpoint", reflect.TypeOf((*MockDataLakePrivateEndpointDeleter)(nil).DataLakeDeletePrivateEndpoint), arg0, arg1)
	return &MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall{Call: call}
}

// MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall wrap *gomock.Call
type MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall) Return(arg0 error) *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall) Do(f func(string, string) error) *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall) DoAndReturn(f func(string, string) error) *MockDataLakePrivateEndpointDeleterDataLakeDeletePrivateEndpointCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
