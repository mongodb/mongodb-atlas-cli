// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/privateendpoints/datalake/aws (interfaces: DataLakePrivateEndpointLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=aws . DataLakePrivateEndpointLister
//

// Package aws is a generated GoMock package.
package aws

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockDataLakePrivateEndpointLister is a mock of DataLakePrivateEndpointLister interface.
type MockDataLakePrivateEndpointLister struct {
	ctrl     *gomock.Controller
	recorder *MockDataLakePrivateEndpointListerMockRecorder
	isgomock struct{}
}

// MockDataLakePrivateEndpointListerMockRecorder is the mock recorder for MockDataLakePrivateEndpointLister.
type MockDataLakePrivateEndpointListerMockRecorder struct {
	mock *MockDataLakePrivateEndpointLister
}

// NewMockDataLakePrivateEndpointLister creates a new mock instance.
func NewMockDataLakePrivateEndpointLister(ctrl *gomock.Controller) *MockDataLakePrivateEndpointLister {
	mock := &MockDataLakePrivateEndpointLister{ctrl: ctrl}
	mock.recorder = &MockDataLakePrivateEndpointListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataLakePrivateEndpointLister) EXPECT() *MockDataLakePrivateEndpointListerMockRecorder {
	return m.recorder
}

// DataLakePrivateEndpoints mocks base method.
func (m *MockDataLakePrivateEndpointLister) DataLakePrivateEndpoints(arg0 *admin.ListDataFederationPrivateEndpointsApiParams) (*admin.PaginatedPrivateNetworkEndpointIdEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataLakePrivateEndpoints", arg0)
	ret0, _ := ret[0].(*admin.PaginatedPrivateNetworkEndpointIdEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DataLakePrivateEndpoints indicates an expected call of DataLakePrivateEndpoints.
func (mr *MockDataLakePrivateEndpointListerMockRecorder) DataLakePrivateEndpoints(arg0 any) *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataLakePrivateEndpoints", reflect.TypeOf((*MockDataLakePrivateEndpointLister)(nil).DataLakePrivateEndpoints), arg0)
	return &MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall{Call: call}
}

// MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall wrap *gomock.Call
type MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall) Return(arg0 *admin.PaginatedPrivateNetworkEndpointIdEntry, arg1 error) *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall) Do(f func(*admin.ListDataFederationPrivateEndpointsApiParams) (*admin.PaginatedPrivateNetworkEndpointIdEntry, error)) *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall) DoAndReturn(f func(*admin.ListDataFederationPrivateEndpointsApiParams) (*admin.PaginatedPrivateNetworkEndpointIdEntry, error)) *MockDataLakePrivateEndpointListerDataLakePrivateEndpointsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
