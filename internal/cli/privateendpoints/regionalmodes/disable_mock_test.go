// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/privateendpoints/regionalmodes (interfaces: RegionalizedPrivateEndpointSettingUpdater)
//
// Generated by this command:
//
//	mockgen -typed -destination=disable_mock_test.go -package=regionalmodes . RegionalizedPrivateEndpointSettingUpdater
//

// Package regionalmodes is a generated GoMock package.
package regionalmodes

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockRegionalizedPrivateEndpointSettingUpdater is a mock of RegionalizedPrivateEndpointSettingUpdater interface.
type MockRegionalizedPrivateEndpointSettingUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder
	isgomock struct{}
}

// MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder is the mock recorder for MockRegionalizedPrivateEndpointSettingUpdater.
type MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder struct {
	mock *MockRegionalizedPrivateEndpointSettingUpdater
}

// NewMockRegionalizedPrivateEndpointSettingUpdater creates a new mock instance.
func NewMockRegionalizedPrivateEndpointSettingUpdater(ctrl *gomock.Controller) *MockRegionalizedPrivateEndpointSettingUpdater {
	mock := &MockRegionalizedPrivateEndpointSettingUpdater{ctrl: ctrl}
	mock.recorder = &MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegionalizedPrivateEndpointSettingUpdater) EXPECT() *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder {
	return m.recorder
}

// UpdateRegionalizedPrivateEndpointSetting mocks base method.
func (m *MockRegionalizedPrivateEndpointSettingUpdater) UpdateRegionalizedPrivateEndpointSetting(arg0 string, arg1 bool) (*admin.ProjectSettingItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRegionalizedPrivateEndpointSetting", arg0, arg1)
	ret0, _ := ret[0].(*admin.ProjectSettingItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRegionalizedPrivateEndpointSetting indicates an expected call of UpdateRegionalizedPrivateEndpointSetting.
func (mr *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder) UpdateRegionalizedPrivateEndpointSetting(arg0, arg1 any) *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRegionalizedPrivateEndpointSetting", reflect.TypeOf((*MockRegionalizedPrivateEndpointSettingUpdater)(nil).UpdateRegionalizedPrivateEndpointSetting), arg0, arg1)
	return &MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall{Call: call}
}

// MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall wrap *gomock.Call
type MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall) Return(arg0 *admin.ProjectSettingItem, arg1 error) *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall) Do(f func(string, bool) (*admin.ProjectSettingItem, error)) *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall) DoAndReturn(f func(string, bool) (*admin.ProjectSettingItem, error)) *MockRegionalizedPrivateEndpointSettingUpdaterUpdateRegionalizedPrivateEndpointSettingCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
