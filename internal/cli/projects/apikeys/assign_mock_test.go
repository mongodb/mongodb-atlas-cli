// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/projects/apikeys (interfaces: ProjectAPIKeyAssigner)
//
// Generated by this command:
//
//	mockgen -typed -destination=assign_mock_test.go -package=apikeys . ProjectAPIKeyAssigner
//

// Package apikeys is a generated GoMock package.
package apikeys

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockProjectAPIKeyAssigner is a mock of ProjectAPIKeyAssigner interface.
type MockProjectAPIKeyAssigner struct {
	ctrl     *gomock.Controller
	recorder *MockProjectAPIKeyAssignerMockRecorder
	isgomock struct{}
}

// MockProjectAPIKeyAssignerMockRecorder is the mock recorder for MockProjectAPIKeyAssigner.
type MockProjectAPIKeyAssignerMockRecorder struct {
	mock *MockProjectAPIKeyAssigner
}

// NewMockProjectAPIKeyAssigner creates a new mock instance.
func NewMockProjectAPIKeyAssigner(ctrl *gomock.Controller) *MockProjectAPIKeyAssigner {
	mock := &MockProjectAPIKeyAssigner{ctrl: ctrl}
	mock.recorder = &MockProjectAPIKeyAssignerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectAPIKeyAssigner) EXPECT() *MockProjectAPIKeyAssignerMockRecorder {
	return m.recorder
}

// AssignProjectAPIKey mocks base method.
func (m *MockProjectAPIKeyAssigner) AssignProjectAPIKey(arg0, arg1 string, arg2 *admin.UpdateAtlasProjectApiKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssignProjectAPIKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AssignProjectAPIKey indicates an expected call of AssignProjectAPIKey.
func (mr *MockProjectAPIKeyAssignerMockRecorder) AssignProjectAPIKey(arg0, arg1, arg2 any) *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignProjectAPIKey", reflect.TypeOf((*MockProjectAPIKeyAssigner)(nil).AssignProjectAPIKey), arg0, arg1, arg2)
	return &MockProjectAPIKeyAssignerAssignProjectAPIKeyCall{Call: call}
}

// MockProjectAPIKeyAssignerAssignProjectAPIKeyCall wrap *gomock.Call
type MockProjectAPIKeyAssignerAssignProjectAPIKeyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall) Return(arg0 error) *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall) Do(f func(string, string, *admin.UpdateAtlasProjectApiKey) error) *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall) DoAndReturn(f func(string, string, *admin.UpdateAtlasProjectApiKey) error) *MockProjectAPIKeyAssignerAssignProjectAPIKeyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
