// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/projects/apikeys (interfaces: ProjectAPIKeyCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=apikeys . ProjectAPIKeyCreator
//

// Package apikeys is a generated GoMock package.
package apikeys

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockProjectAPIKeyCreator is a mock of ProjectAPIKeyCreator interface.
type MockProjectAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockProjectAPIKeyCreatorMockRecorder
	isgomock struct{}
}

// MockProjectAPIKeyCreatorMockRecorder is the mock recorder for MockProjectAPIKeyCreator.
type MockProjectAPIKeyCreatorMockRecorder struct {
	mock *MockProjectAPIKeyCreator
}

// NewMockProjectAPIKeyCreator creates a new mock instance.
func NewMockProjectAPIKeyCreator(ctrl *gomock.Controller) *MockProjectAPIKeyCreator {
	mock := &MockProjectAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockProjectAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectAPIKeyCreator) EXPECT() *MockProjectAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateProjectAPIKey mocks base method.
func (m *MockProjectAPIKeyCreator) CreateProjectAPIKey(arg0 string, arg1 *admin.CreateAtlasProjectApiKey) (*admin.ApiKeyUserDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProjectAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiKeyUserDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProjectAPIKey indicates an expected call of CreateProjectAPIKey.
func (mr *MockProjectAPIKeyCreatorMockRecorder) CreateProjectAPIKey(arg0, arg1 any) *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProjectAPIKey", reflect.TypeOf((*MockProjectAPIKeyCreator)(nil).CreateProjectAPIKey), arg0, arg1)
	return &MockProjectAPIKeyCreatorCreateProjectAPIKeyCall{Call: call}
}

// MockProjectAPIKeyCreatorCreateProjectAPIKeyCall wrap *gomock.Call
type MockProjectAPIKeyCreatorCreateProjectAPIKeyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall) Return(arg0 *admin.ApiKeyUserDetails, arg1 error) *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall) Do(f func(string, *admin.CreateAtlasProjectApiKey) (*admin.ApiKeyUserDetails, error)) *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall) DoAndReturn(f func(string, *admin.CreateAtlasProjectApiKey) (*admin.ApiKeyUserDetails, error)) *MockProjectAPIKeyCreatorCreateProjectAPIKeyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
