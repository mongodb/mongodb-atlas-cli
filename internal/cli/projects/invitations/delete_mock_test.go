// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/projects/invitations (interfaces: ProjectInvitationDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=invitations . ProjectInvitationDeleter
//

// Package invitations is a generated GoMock package.
package invitations

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockProjectInvitationDeleter is a mock of ProjectInvitationDeleter interface.
type MockProjectInvitationDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockProjectInvitationDeleterMockRecorder
	isgomock struct{}
}

// MockProjectInvitationDeleterMockRecorder is the mock recorder for MockProjectInvitationDeleter.
type MockProjectInvitationDeleterMockRecorder struct {
	mock *MockProjectInvitationDeleter
}

// NewMockProjectInvitationDeleter creates a new mock instance.
func NewMockProjectInvitationDeleter(ctrl *gomock.Controller) *MockProjectInvitationDeleter {
	mock := &MockProjectInvitationDeleter{ctrl: ctrl}
	mock.recorder = &MockProjectInvitationDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectInvitationDeleter) EXPECT() *MockProjectInvitationDeleterMockRecorder {
	return m.recorder
}

// DeleteProjectInvitation mocks base method.
func (m *MockProjectInvitationDeleter) DeleteProjectInvitation(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProjectInvitation", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProjectInvitation indicates an expected call of DeleteProjectInvitation.
func (mr *MockProjectInvitationDeleterMockRecorder) DeleteProjectInvitation(arg0, arg1 any) *MockProjectInvitationDeleterDeleteProjectInvitationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProjectInvitation", reflect.TypeOf((*MockProjectInvitationDeleter)(nil).DeleteProjectInvitation), arg0, arg1)
	return &MockProjectInvitationDeleterDeleteProjectInvitationCall{Call: call}
}

// MockProjectInvitationDeleterDeleteProjectInvitationCall wrap *gomock.Call
type MockProjectInvitationDeleterDeleteProjectInvitationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockProjectInvitationDeleterDeleteProjectInvitationCall) Return(arg0 error) *MockProjectInvitationDeleterDeleteProjectInvitationCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockProjectInvitationDeleterDeleteProjectInvitationCall) Do(f func(string, string) error) *MockProjectInvitationDeleterDeleteProjectInvitationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockProjectInvitationDeleterDeleteProjectInvitationCall) DoAndReturn(f func(string, string) error) *MockProjectInvitationDeleterDeleteProjectInvitationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
