// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/search/nodes (interfaces: SearchNodesDeleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=nodes . SearchNodesDeleter
//

// Package nodes is a generated GoMock package.
package nodes

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312005/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockSearchNodesDeleter is a mock of SearchNodesDeleter interface.
type MockSearchNodesDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockSearchNodesDeleterMockRecorder
	isgomock struct{}
}

// MockSearchNodesDeleterMockRecorder is the mock recorder for MockSearchNodesDeleter.
type MockSearchNodesDeleterMockRecorder struct {
	mock *MockSearchNodesDeleter
}

// NewMockSearchNodesDeleter creates a new mock instance.
func NewMockSearchNodesDeleter(ctrl *gomock.Controller) *MockSearchNodesDeleter {
	mock := &MockSearchNodesDeleter{ctrl: ctrl}
	mock.recorder = &MockSearchNodesDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchNodesDeleter) EXPECT() *MockSearchNodesDeleterMockRecorder {
	return m.recorder
}

// DeleteSearchNodes mocks base method.
func (m *MockSearchNodesDeleter) DeleteSearchNodes(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSearchNodes", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSearchNodes indicates an expected call of DeleteSearchNodes.
func (mr *MockSearchNodesDeleterMockRecorder) DeleteSearchNodes(arg0, arg1 any) *MockSearchNodesDeleterDeleteSearchNodesCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSearchNodes", reflect.TypeOf((*MockSearchNodesDeleter)(nil).DeleteSearchNodes), arg0, arg1)
	return &MockSearchNodesDeleterDeleteSearchNodesCall{Call: call}
}

// MockSearchNodesDeleterDeleteSearchNodesCall wrap *gomock.Call
type MockSearchNodesDeleterDeleteSearchNodesCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockSearchNodesDeleterDeleteSearchNodesCall) Return(arg0 error) *MockSearchNodesDeleterDeleteSearchNodesCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockSearchNodesDeleterDeleteSearchNodesCall) Do(f func(string, string) error) *MockSearchNodesDeleterDeleteSearchNodesCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockSearchNodesDeleterDeleteSearchNodesCall) DoAndReturn(f func(string, string) error) *MockSearchNodesDeleterDeleteSearchNodesCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// SearchNodes mocks base method.
func (m *MockSearchNodesDeleter) SearchNodes(arg0, arg1 string) (*admin.ApiSearchDeploymentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchNodes", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiSearchDeploymentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchNodes indicates an expected call of SearchNodes.
func (mr *MockSearchNodesDeleterMockRecorder) SearchNodes(arg0, arg1 any) *MockSearchNodesDeleterSearchNodesCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchNodes", reflect.TypeOf((*MockSearchNodesDeleter)(nil).SearchNodes), arg0, arg1)
	return &MockSearchNodesDeleterSearchNodesCall{Call: call}
}

// MockSearchNodesDeleterSearchNodesCall wrap *gomock.Call
type MockSearchNodesDeleterSearchNodesCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockSearchNodesDeleterSearchNodesCall) Return(arg0 *admin.ApiSearchDeploymentResponse, arg1 error) *MockSearchNodesDeleterSearchNodesCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockSearchNodesDeleterSearchNodesCall) Do(f func(string, string) (*admin.ApiSearchDeploymentResponse, error)) *MockSearchNodesDeleterSearchNodesCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockSearchNodesDeleterSearchNodesCall) DoAndReturn(f func(string, string) (*admin.ApiSearchDeploymentResponse, error)) *MockSearchNodesDeleterSearchNodesCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
