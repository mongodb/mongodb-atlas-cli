// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/security/ldap (interfaces: Getter)
//
// Generated by this command:
//
//	mockgen -typed -destination=get_mock_test.go -package=ldap . Getter
//

// Package ldap is a generated GoMock package.
package ldap

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockGetter is a mock of Getter interface.
type MockGetter struct {
	ctrl     *gomock.Controller
	recorder *MockGetterMockRecorder
	isgomock struct{}
}

// MockGetterMockRecorder is the mock recorder for MockGetter.
type MockGetterMockRecorder struct {
	mock *MockGetter
}

// NewMockGetter creates a new mock instance.
func NewMockGetter(ctrl *gomock.Controller) *MockGetter {
	mock := &MockGetter{ctrl: ctrl}
	mock.recorder = &MockGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetter) EXPECT() *MockGetterMockRecorder {
	return m.recorder
}

// GetLDAPConfiguration mocks base method.
func (m *MockGetter) GetLDAPConfiguration(arg0 string) (*admin.UserSecurity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLDAPConfiguration", arg0)
	ret0, _ := ret[0].(*admin.UserSecurity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLDAPConfiguration indicates an expected call of GetLDAPConfiguration.
func (mr *MockGetterMockRecorder) GetLDAPConfiguration(arg0 any) *MockGetterGetLDAPConfigurationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLDAPConfiguration", reflect.TypeOf((*MockGetter)(nil).GetLDAPConfiguration), arg0)
	return &MockGetterGetLDAPConfigurationCall{Call: call}
}

// MockGetterGetLDAPConfigurationCall wrap *gomock.Call
type MockGetterGetLDAPConfigurationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockGetterGetLDAPConfigurationCall) Return(arg0 *admin.UserSecurity, arg1 error) *MockGetterGetLDAPConfigurationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockGetterGetLDAPConfigurationCall) Do(f func(string) (*admin.UserSecurity, error)) *MockGetterGetLDAPConfigurationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockGetterGetLDAPConfigurationCall) DoAndReturn(f func(string) (*admin.UserSecurity, error)) *MockGetterGetLDAPConfigurationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
