// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/security/ldap (interfaces: Saver)
//
// Generated by this command:
//
//	mockgen -typed -destination=save_mock_test.go -package=ldap . Saver
//

// Package ldap is a generated GoMock package.
package ldap

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockSaver is a mock of Saver interface.
type MockSaver struct {
	ctrl     *gomock.Controller
	recorder *MockSaverMockRecorder
	isgomock struct{}
}

// MockSaverMockRecorder is the mock recorder for MockSaver.
type MockSaverMockRecorder struct {
	mock *MockSaver
}

// NewMockSaver creates a new mock instance.
func NewMockSaver(ctrl *gomock.Controller) *MockSaver {
	mock := &MockSaver{ctrl: ctrl}
	mock.recorder = &MockSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSaver) EXPECT() *MockSaverMockRecorder {
	return m.recorder
}

// SaveLDAPConfiguration mocks base method.
func (m *MockSaver) SaveLDAPConfiguration(arg0 string, arg1 *admin.UserSecurity) (*admin.UserSecurity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveLDAPConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*admin.UserSecurity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveLDAPConfiguration indicates an expected call of SaveLDAPConfiguration.
func (mr *MockSaverMockRecorder) SaveLDAPConfiguration(arg0, arg1 any) *MockSaverSaveLDAPConfigurationCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveLDAPConfiguration", reflect.TypeOf((*MockSaver)(nil).SaveLDAPConfiguration), arg0, arg1)
	return &MockSaverSaveLDAPConfigurationCall{Call: call}
}

// MockSaverSaveLDAPConfigurationCall wrap *gomock.Call
type MockSaverSaveLDAPConfigurationCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockSaverSaveLDAPConfigurationCall) Return(arg0 *admin.UserSecurity, arg1 error) *MockSaverSaveLDAPConfigurationCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockSaverSaveLDAPConfigurationCall) Do(f func(string, *admin.UserSecurity) (*admin.UserSecurity, error)) *MockSaverSaveLDAPConfigurationCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockSaverSaveLDAPConfigurationCall) DoAndReturn(f func(string, *admin.UserSecurity) (*admin.UserSecurity, error)) *MockSaverSaveLDAPConfigurationCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
