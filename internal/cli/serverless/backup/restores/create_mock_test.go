// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/serverless/backup/restores (interfaces: ServerlessRestoreJobsCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=restores . ServerlessRestoreJobsCreator
//

// Package restores is a generated GoMock package.
package restores

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockServerlessRestoreJobsCreator is a mock of ServerlessRestoreJobsCreator interface.
type MockServerlessRestoreJobsCreator struct {
	ctrl     *gomock.Controller
	recorder *MockServerlessRestoreJobsCreatorMockRecorder
	isgomock struct{}
}

// MockServerlessRestoreJobsCreatorMockRecorder is the mock recorder for MockServerlessRestoreJobsCreator.
type MockServerlessRestoreJobsCreatorMockRecorder struct {
	mock *MockServerlessRestoreJobsCreator
}

// NewMockServerlessRestoreJobsCreator creates a new mock instance.
func NewMockServerlessRestoreJobsCreator(ctrl *gomock.Controller) *MockServerlessRestoreJobsCreator {
	mock := &MockServerlessRestoreJobsCreator{ctrl: ctrl}
	mock.recorder = &MockServerlessRestoreJobsCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerlessRestoreJobsCreator) EXPECT() *MockServerlessRestoreJobsCreatorMockRecorder {
	return m.recorder
}

// ServerlessCreateRestoreJobs mocks base method.
func (m *MockServerlessRestoreJobsCreator) ServerlessCreateRestoreJobs(arg0, arg1 string, arg2 *admin.ServerlessBackupRestoreJob) (*admin.ServerlessBackupRestoreJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerlessCreateRestoreJobs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.ServerlessBackupRestoreJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerlessCreateRestoreJobs indicates an expected call of ServerlessCreateRestoreJobs.
func (mr *MockServerlessRestoreJobsCreatorMockRecorder) ServerlessCreateRestoreJobs(arg0, arg1, arg2 any) *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerlessCreateRestoreJobs", reflect.TypeOf((*MockServerlessRestoreJobsCreator)(nil).ServerlessCreateRestoreJobs), arg0, arg1, arg2)
	return &MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall{Call: call}
}

// MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall wrap *gomock.Call
type MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall) Return(arg0 *admin.ServerlessBackupRestoreJob, arg1 error) *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall) Do(f func(string, string, *admin.ServerlessBackupRestoreJob) (*admin.ServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall) DoAndReturn(f func(string, string, *admin.ServerlessBackupRestoreJob) (*admin.ServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsCreatorServerlessCreateRestoreJobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
