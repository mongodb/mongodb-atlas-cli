// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/serverless/backup/restores (interfaces: ServerlessRestoreJobsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=restores . ServerlessRestoreJobsDescriber
//

// Package restores is a generated GoMock package.
package restores

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312007/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockServerlessRestoreJobsDescriber is a mock of ServerlessRestoreJobsDescriber interface.
type MockServerlessRestoreJobsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockServerlessRestoreJobsDescriberMockRecorder
	isgomock struct{}
}

// MockServerlessRestoreJobsDescriberMockRecorder is the mock recorder for MockServerlessRestoreJobsDescriber.
type MockServerlessRestoreJobsDescriberMockRecorder struct {
	mock *MockServerlessRestoreJobsDescriber
}

// NewMockServerlessRestoreJobsDescriber creates a new mock instance.
func NewMockServerlessRestoreJobsDescriber(ctrl *gomock.Controller) *MockServerlessRestoreJobsDescriber {
	mock := &MockServerlessRestoreJobsDescriber{ctrl: ctrl}
	mock.recorder = &MockServerlessRestoreJobsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerlessRestoreJobsDescriber) EXPECT() *MockServerlessRestoreJobsDescriberMockRecorder {
	return m.recorder
}

// ServerlessRestoreJob mocks base method.
func (m *MockServerlessRestoreJobsDescriber) ServerlessRestoreJob(arg0, arg1, arg2 string) (*admin.ServerlessBackupRestoreJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerlessRestoreJob", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.ServerlessBackupRestoreJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerlessRestoreJob indicates an expected call of ServerlessRestoreJob.
func (mr *MockServerlessRestoreJobsDescriberMockRecorder) ServerlessRestoreJob(arg0, arg1, arg2 any) *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerlessRestoreJob", reflect.TypeOf((*MockServerlessRestoreJobsDescriber)(nil).ServerlessRestoreJob), arg0, arg1, arg2)
	return &MockServerlessRestoreJobsDescriberServerlessRestoreJobCall{Call: call}
}

// MockServerlessRestoreJobsDescriberServerlessRestoreJobCall wrap *gomock.Call
type MockServerlessRestoreJobsDescriberServerlessRestoreJobCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall) Return(arg0 *admin.ServerlessBackupRestoreJob, arg1 error) *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall) Do(f func(string, string, string) (*admin.ServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall) DoAndReturn(f func(string, string, string) (*admin.ServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsDescriberServerlessRestoreJobCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
