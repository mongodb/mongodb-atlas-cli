// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/serverless/backup/restores (interfaces: ServerlessRestoreJobsLister)
//
// Generated by this command:
//
//	mockgen -typed -destination=list_mock_test.go -package=restores . ServerlessRestoreJobsLister
//

// Package restores is a generated GoMock package.
package restores

import (
	reflect "reflect"

	store "github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store"
	admin "go.mongodb.org/atlas-sdk/v20250312008/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockServerlessRestoreJobsLister is a mock of ServerlessRestoreJobsLister interface.
type MockServerlessRestoreJobsLister struct {
	ctrl     *gomock.Controller
	recorder *MockServerlessRestoreJobsListerMockRecorder
	isgomock struct{}
}

// MockServerlessRestoreJobsListerMockRecorder is the mock recorder for MockServerlessRestoreJobsLister.
type MockServerlessRestoreJobsListerMockRecorder struct {
	mock *MockServerlessRestoreJobsLister
}

// NewMockServerlessRestoreJobsLister creates a new mock instance.
func NewMockServerlessRestoreJobsLister(ctrl *gomock.Controller) *MockServerlessRestoreJobsLister {
	mock := &MockServerlessRestoreJobsLister{ctrl: ctrl}
	mock.recorder = &MockServerlessRestoreJobsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerlessRestoreJobsLister) EXPECT() *MockServerlessRestoreJobsListerMockRecorder {
	return m.recorder
}

// ServerlessRestoreJobs mocks base method.
func (m *MockServerlessRestoreJobsLister) ServerlessRestoreJobs(arg0, arg1 string, arg2 *store.ListOptions) (*admin.PaginatedApiAtlasServerlessBackupRestoreJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerlessRestoreJobs", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.PaginatedApiAtlasServerlessBackupRestoreJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerlessRestoreJobs indicates an expected call of ServerlessRestoreJobs.
func (mr *MockServerlessRestoreJobsListerMockRecorder) ServerlessRestoreJobs(arg0, arg1, arg2 any) *MockServerlessRestoreJobsListerServerlessRestoreJobsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerlessRestoreJobs", reflect.TypeOf((*MockServerlessRestoreJobsLister)(nil).ServerlessRestoreJobs), arg0, arg1, arg2)
	return &MockServerlessRestoreJobsListerServerlessRestoreJobsCall{Call: call}
}

// MockServerlessRestoreJobsListerServerlessRestoreJobsCall wrap *gomock.Call
type MockServerlessRestoreJobsListerServerlessRestoreJobsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockServerlessRestoreJobsListerServerlessRestoreJobsCall) Return(arg0 *admin.PaginatedApiAtlasServerlessBackupRestoreJob, arg1 error) *MockServerlessRestoreJobsListerServerlessRestoreJobsCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockServerlessRestoreJobsListerServerlessRestoreJobsCall) Do(f func(string, string, *store.ListOptions) (*admin.PaginatedApiAtlasServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsListerServerlessRestoreJobsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockServerlessRestoreJobsListerServerlessRestoreJobsCall) DoAndReturn(f func(string, string, *store.ListOptions) (*admin.PaginatedApiAtlasServerlessBackupRestoreJob, error)) *MockServerlessRestoreJobsListerServerlessRestoreJobsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
