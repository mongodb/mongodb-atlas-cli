// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/serverless (interfaces: Updater)
//
// Generated by this command:
//
//	mockgen -typed -destination=update_mock_test.go -package=serverless . Updater
//

// Package serverless is a generated GoMock package.
package serverless

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockUpdater is a mock of Updater interface.
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
	isgomock struct{}
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater.
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance.
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return m.recorder
}

// UpdateServerlessInstance mocks base method.
func (m *MockUpdater) UpdateServerlessInstance(arg0, arg1 string, arg2 *admin.ServerlessInstanceDescriptionUpdate) (*admin.ServerlessInstanceDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServerlessInstance", arg0, arg1, arg2)
	ret0, _ := ret[0].(*admin.ServerlessInstanceDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateServerlessInstance indicates an expected call of UpdateServerlessInstance.
func (mr *MockUpdaterMockRecorder) UpdateServerlessInstance(arg0, arg1, arg2 any) *MockUpdaterUpdateServerlessInstanceCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServerlessInstance", reflect.TypeOf((*MockUpdater)(nil).UpdateServerlessInstance), arg0, arg1, arg2)
	return &MockUpdaterUpdateServerlessInstanceCall{Call: call}
}

// MockUpdaterUpdateServerlessInstanceCall wrap *gomock.Call
type MockUpdaterUpdateServerlessInstanceCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockUpdaterUpdateServerlessInstanceCall) Return(arg0 *admin.ServerlessInstanceDescription, arg1 error) *MockUpdaterUpdateServerlessInstanceCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockUpdaterUpdateServerlessInstanceCall) Do(f func(string, string, *admin.ServerlessInstanceDescriptionUpdate) (*admin.ServerlessInstanceDescription, error)) *MockUpdaterUpdateServerlessInstanceCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockUpdaterUpdateServerlessInstanceCall) DoAndReturn(f func(string, string, *admin.ServerlessInstanceDescriptionUpdate) (*admin.ServerlessInstanceDescription, error)) *MockUpdaterUpdateServerlessInstanceCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
