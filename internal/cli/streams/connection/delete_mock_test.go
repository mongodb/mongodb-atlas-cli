// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/streams/connection (interfaces: Deleter)
//
// Generated by this command:
//
//	mockgen -typed -destination=delete_mock_test.go -package=connection . Deleter
//

// Package connection is a generated GoMock package.
package connection

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeleter is a mock of Deleter interface.
type MockDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockDeleterMockRecorder
	isgomock struct{}
}

// MockDeleterMockRecorder is the mock recorder for MockDeleter.
type MockDeleterMockRecorder struct {
	mock *MockDeleter
}

// NewMockDeleter creates a new mock instance.
func NewMockDeleter(ctrl *gomock.Controller) *MockDeleter {
	mock := &MockDeleter{ctrl: ctrl}
	mock.recorder = &MockDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleter) EXPECT() *MockDeleterMockRecorder {
	return m.recorder
}

// DeleteConnection mocks base method.
func (m *MockDeleter) DeleteConnection(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConnection", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteConnection indicates an expected call of DeleteConnection.
func (mr *MockDeleterMockRecorder) DeleteConnection(arg0, arg1, arg2 any) *MockDeleterDeleteConnectionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConnection", reflect.TypeOf((*MockDeleter)(nil).DeleteConnection), arg0, arg1, arg2)
	return &MockDeleterDeleteConnectionCall{Call: call}
}

// MockDeleterDeleteConnectionCall wrap *gomock.Call
type MockDeleterDeleteConnectionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockDeleterDeleteConnectionCall) Return(arg0 error) *MockDeleterDeleteConnectionCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockDeleterDeleteConnectionCall) Do(f func(string, string, string) error) *MockDeleterDeleteConnectionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockDeleterDeleteConnectionCall) DoAndReturn(f func(string, string, string) error) *MockDeleterDeleteConnectionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
