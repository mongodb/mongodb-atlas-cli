// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/streams/instance (interfaces: StreamsCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=instance . StreamsCreator
//

// Package instance is a generated GoMock package.
package instance

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312004/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockStreamsCreator is a mock of StreamsCreator interface.
type MockStreamsCreator struct {
	ctrl     *gomock.Controller
	recorder *MockStreamsCreatorMockRecorder
	isgomock struct{}
}

// MockStreamsCreatorMockRecorder is the mock recorder for MockStreamsCreator.
type MockStreamsCreatorMockRecorder struct {
	mock *MockStreamsCreator
}

// NewMockStreamsCreator creates a new mock instance.
func NewMockStreamsCreator(ctrl *gomock.Controller) *MockStreamsCreator {
	mock := &MockStreamsCreator{ctrl: ctrl}
	mock.recorder = &MockStreamsCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamsCreator) EXPECT() *MockStreamsCreatorMockRecorder {
	return m.recorder
}

// CreateStream mocks base method.
func (m *MockStreamsCreator) CreateStream(arg0 string, arg1 *admin.StreamsTenant) (*admin.StreamsTenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStream", arg0, arg1)
	ret0, _ := ret[0].(*admin.StreamsTenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStream indicates an expected call of CreateStream.
func (mr *MockStreamsCreatorMockRecorder) CreateStream(arg0, arg1 any) *MockStreamsCreatorCreateStreamCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStream", reflect.TypeOf((*MockStreamsCreator)(nil).CreateStream), arg0, arg1)
	return &MockStreamsCreatorCreateStreamCall{Call: call}
}

// MockStreamsCreatorCreateStreamCall wrap *gomock.Call
type MockStreamsCreatorCreateStreamCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockStreamsCreatorCreateStreamCall) Return(arg0 *admin.StreamsTenant, arg1 error) *MockStreamsCreatorCreateStreamCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockStreamsCreatorCreateStreamCall) Do(f func(string, *admin.StreamsTenant) (*admin.StreamsTenant, error)) *MockStreamsCreatorCreateStreamCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockStreamsCreatorCreateStreamCall) DoAndReturn(f func(string, *admin.StreamsTenant) (*admin.StreamsTenant, error)) *MockStreamsCreatorCreateStreamCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
