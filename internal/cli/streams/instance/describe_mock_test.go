// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/streams/instance (interfaces: StreamsDescriber)
//
// Generated by this command:
//
//	mockgen -typed -destination=describe_mock_test.go -package=instance . StreamsDescriber
//

// Package instance is a generated GoMock package.
package instance

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockStreamsDescriber is a mock of StreamsDescriber interface.
type MockStreamsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockStreamsDescriberMockRecorder
	isgomock struct{}
}

// MockStreamsDescriberMockRecorder is the mock recorder for MockStreamsDescriber.
type MockStreamsDescriberMockRecorder struct {
	mock *MockStreamsDescriber
}

// NewMockStreamsDescriber creates a new mock instance.
func NewMockStreamsDescriber(ctrl *gomock.Controller) *MockStreamsDescriber {
	mock := &MockStreamsDescriber{ctrl: ctrl}
	mock.recorder = &MockStreamsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamsDescriber) EXPECT() *MockStreamsDescriberMockRecorder {
	return m.recorder
}

// AtlasStream mocks base method.
func (m *MockStreamsDescriber) AtlasStream(arg0, arg1 string) (*admin.StreamsTenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasStream", arg0, arg1)
	ret0, _ := ret[0].(*admin.StreamsTenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasStream indicates an expected call of AtlasStream.
func (mr *MockStreamsDescriberMockRecorder) AtlasStream(arg0, arg1 any) *MockStreamsDescriberAtlasStreamCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasStream", reflect.TypeOf((*MockStreamsDescriber)(nil).AtlasStream), arg0, arg1)
	return &MockStreamsDescriberAtlasStreamCall{Call: call}
}

// MockStreamsDescriberAtlasStreamCall wrap *gomock.Call
type MockStreamsDescriberAtlasStreamCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockStreamsDescriberAtlasStreamCall) Return(arg0 *admin.StreamsTenant, arg1 error) *MockStreamsDescriberAtlasStreamCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockStreamsDescriberAtlasStreamCall) Do(f func(string, string) (*admin.StreamsTenant, error)) *MockStreamsDescriberAtlasStreamCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockStreamsDescriberAtlasStreamCall) DoAndReturn(f func(string, string) (*admin.StreamsTenant, error)) *MockStreamsDescriberAtlasStreamCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
