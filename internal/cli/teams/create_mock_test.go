// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/cli/teams (interfaces: TeamCreator)
//
// Generated by this command:
//
//	mockgen -typed -destination=create_mock_test.go -package=teams . TeamCreator
//

// Package teams is a generated GoMock package.
package teams

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312003/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockTeamCreator is a mock of TeamCreator interface.
type MockTeamCreator struct {
	ctrl     *gomock.Controller
	recorder *MockTeamCreatorMockRecorder
	isgomock struct{}
}

// MockTeamCreatorMockRecorder is the mock recorder for MockTeamCreator.
type MockTeamCreatorMockRecorder struct {
	mock *MockTeamCreator
}

// NewMockTeamCreator creates a new mock instance.
func NewMockTeamCreator(ctrl *gomock.Controller) *MockTeamCreator {
	mock := &MockTeamCreator{ctrl: ctrl}
	mock.recorder = &MockTeamCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeamCreator) EXPECT() *MockTeamCreatorMockRecorder {
	return m.recorder
}

// CreateTeam mocks base method.
func (m *MockTeamCreator) CreateTeam(arg0 string, arg1 *admin.Team) (*admin.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTeam", arg0, arg1)
	ret0, _ := ret[0].(*admin.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTeam indicates an expected call of CreateTeam.
func (mr *MockTeamCreatorMockRecorder) CreateTeam(arg0, arg1 any) *MockTeamCreatorCreateTeamCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTeam", reflect.TypeOf((*MockTeamCreator)(nil).CreateTeam), arg0, arg1)
	return &MockTeamCreatorCreateTeamCall{Call: call}
}

// MockTeamCreatorCreateTeamCall wrap *gomock.Call
type MockTeamCreatorCreateTeamCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockTeamCreatorCreateTeamCall) Return(arg0 *admin.Team, arg1 error) *MockTeamCreatorCreateTeamCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockTeamCreatorCreateTeamCall) Do(f func(string, *admin.Team) (*admin.Team, error)) *MockTeamCreatorCreateTeamCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockTeamCreatorCreateTeamCall) DoAndReturn(f func(string, *admin.Team) (*admin.Team, error)) *MockTeamCreatorCreateTeamCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
