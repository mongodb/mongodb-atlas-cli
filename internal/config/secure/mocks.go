// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-core/config/secure (interfaces: KeyringClient)
//
// Generated by this command:
//
//	mockgen -destination=./mocks.go -package=secure github.com/mongodb/atlas-cli-core/config/secure KeyringClient
//

// Package secure is a generated GoMock package.
package secure

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockKeyringClient is a mock of KeyringClient interface.
type MockKeyringClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeyringClientMockRecorder
	isgomock struct{}
}

// MockKeyringClientMockRecorder is the mock recorder for MockKeyringClient.
type MockKeyringClientMockRecorder struct {
	mock *MockKeyringClient
}

// NewMockKeyringClient creates a new mock instance.
func NewMockKeyringClient(ctrl *gomock.Controller) *MockKeyringClient {
	mock := &MockKeyringClient{ctrl: ctrl}
	mock.recorder = &MockKeyringClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyringClient) EXPECT() *MockKeyringClientMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockKeyringClient) Delete(service, user string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", service, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockKeyringClientMockRecorder) Delete(service, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockKeyringClient)(nil).Delete), service, user)
}

// DeleteAll mocks base method.
func (m *MockKeyringClient) DeleteAll(service string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAll", service)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAll indicates an expected call of DeleteAll.
func (mr *MockKeyringClientMockRecorder) DeleteAll(service any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAll", reflect.TypeOf((*MockKeyringClient)(nil).DeleteAll), service)
}

// Get mocks base method.
func (m *MockKeyringClient) Get(service, user string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", service, user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockKeyringClientMockRecorder) Get(service, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKeyringClient)(nil).Get), service, user)
}

// Set mocks base method.
func (m *MockKeyringClient) Set(service, user, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", service, user, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockKeyringClientMockRecorder) Set(service, user, password any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockKeyringClient)(nil).Set), service, user, password)
}
