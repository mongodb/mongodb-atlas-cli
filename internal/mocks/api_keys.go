// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: APIKeyLister,APIKeyUpdater,APIKeyCreator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockAPIKeyLister is a mock of APIKeyLister interface
type MockAPIKeyLister struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyListerMockRecorder
}

// MockAPIKeyListerMockRecorder is the mock recorder for MockAPIKeyLister
type MockAPIKeyListerMockRecorder struct {
	mock *MockAPIKeyLister
}

// NewMockAPIKeyLister creates a new mock instance
func NewMockAPIKeyLister(ctrl *gomock.Controller) *MockAPIKeyLister {
	mock := &MockAPIKeyLister{ctrl: ctrl}
	mock.recorder = &MockAPIKeyListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIKeyLister) EXPECT() *MockAPIKeyListerMockRecorder {
	return m.recorder
}

// APIKeys mocks base method
func (m *MockAPIKeyLister) APIKeys(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIKeys", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// APIKeys indicates an expected call of APIKeys
func (mr *MockAPIKeyListerMockRecorder) APIKeys(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIKeys", reflect.TypeOf((*MockAPIKeyLister)(nil).APIKeys), arg0, arg1)
}

// MockAPIKeyUpdater is a mock of APIKeyUpdater interface
type MockAPIKeyUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyUpdaterMockRecorder
}

// MockAPIKeyUpdaterMockRecorder is the mock recorder for MockAPIKeyUpdater
type MockAPIKeyUpdaterMockRecorder struct {
	mock *MockAPIKeyUpdater
}

// NewMockAPIKeyUpdater creates a new mock instance
func NewMockAPIKeyUpdater(ctrl *gomock.Controller) *MockAPIKeyUpdater {
	mock := &MockAPIKeyUpdater{ctrl: ctrl}
	mock.recorder = &MockAPIKeyUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIKeyUpdater) EXPECT() *MockAPIKeyUpdaterMockRecorder {
	return m.recorder
}

// UpdateAPIKey mocks base method
func (m *MockAPIKeyUpdater) UpdateAPIKey(arg0, arg1 string, arg2 *mongodbatlas.APIKeyInput) (*mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAPIKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAPIKey indicates an expected call of UpdateAPIKey
func (mr *MockAPIKeyUpdaterMockRecorder) UpdateAPIKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAPIKey", reflect.TypeOf((*MockAPIKeyUpdater)(nil).UpdateAPIKey), arg0, arg1, arg2)
}

// MockAPIKeyCreator is a mock of APIKeyCreator interface
type MockAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyCreatorMockRecorder
}

// MockAPIKeyCreatorMockRecorder is the mock recorder for MockAPIKeyCreator
type MockAPIKeyCreatorMockRecorder struct {
	mock *MockAPIKeyCreator
}

// NewMockAPIKeyCreator creates a new mock instance
func NewMockAPIKeyCreator(ctrl *gomock.Controller) *MockAPIKeyCreator {
	mock := &MockAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIKeyCreator) EXPECT() *MockAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateAPIKey mocks base method
func (m *MockAPIKeyCreator) CreateAPIKey(arg0 string, arg1 *mongodbatlas.APIKeyInput) (*mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAPIKey indicates an expected call of CreateAPIKey
func (mr *MockAPIKeyCreatorMockRecorder) CreateAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockAPIKeyCreator)(nil).CreateAPIKey), arg0, arg1)
}
