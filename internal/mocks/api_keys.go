// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: ProjectAPIKeyLister,OrganizationAPIKeyLister,OrganizationAPIKeyDescriber,OrganizationAPIKeyUpdater)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockProjectAPIKeyLister is a mock of ProjectAPIKeyLister interface
type MockProjectAPIKeyLister struct {
	ctrl     *gomock.Controller
	recorder *MockProjectAPIKeyListerMockRecorder
}

// MockProjectAPIKeyListerMockRecorder is the mock recorder for MockProjectAPIKeyLister
type MockProjectAPIKeyListerMockRecorder struct {
	mock *MockProjectAPIKeyLister
}

// NewMockProjectAPIKeyLister creates a new mock instance
func NewMockProjectAPIKeyLister(ctrl *gomock.Controller) *MockProjectAPIKeyLister {
	mock := &MockProjectAPIKeyLister{ctrl: ctrl}
	mock.recorder = &MockProjectAPIKeyListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectAPIKeyLister) EXPECT() *MockProjectAPIKeyListerMockRecorder {
	return m.recorder
}

// ProjectAPIKeys mocks base method
func (m *MockProjectAPIKeyLister) ProjectAPIKeys(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProjectAPIKeys", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProjectAPIKeys indicates an expected call of ProjectAPIKeys
func (mr *MockProjectAPIKeyListerMockRecorder) ProjectAPIKeys(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProjectAPIKeys", reflect.TypeOf((*MockProjectAPIKeyLister)(nil).ProjectAPIKeys), arg0, arg1)
}

// MockOrganizationAPIKeyLister is a mock of OrganizationAPIKeyLister interface
type MockOrganizationAPIKeyLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyListerMockRecorder
}

// MockOrganizationAPIKeyListerMockRecorder is the mock recorder for MockOrganizationAPIKeyLister
type MockOrganizationAPIKeyListerMockRecorder struct {
	mock *MockOrganizationAPIKeyLister
}

// NewMockOrganizationAPIKeyLister creates a new mock instance
func NewMockOrganizationAPIKeyLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyLister {
	mock := &MockOrganizationAPIKeyLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyLister) EXPECT() *MockOrganizationAPIKeyListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeys mocks base method
func (m *MockOrganizationAPIKeyLister) OrganizationAPIKeys(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeys", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeys indicates an expected call of OrganizationAPIKeys
func (mr *MockOrganizationAPIKeyListerMockRecorder) OrganizationAPIKeys(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeys", reflect.TypeOf((*MockOrganizationAPIKeyLister)(nil).OrganizationAPIKeys), arg0, arg1)
}

// MockOrganizationAPIKeyDescriber is a mock of OrganizationAPIKeyDescriber interface
type MockOrganizationAPIKeyDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyDescriberMockRecorder
}

// MockOrganizationAPIKeyDescriberMockRecorder is the mock recorder for MockOrganizationAPIKeyDescriber
type MockOrganizationAPIKeyDescriberMockRecorder struct {
	mock *MockOrganizationAPIKeyDescriber
}

// NewMockOrganizationAPIKeyDescriber creates a new mock instance
func NewMockOrganizationAPIKeyDescriber(ctrl *gomock.Controller) *MockOrganizationAPIKeyDescriber {
	mock := &MockOrganizationAPIKeyDescriber{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyDescriber) EXPECT() *MockOrganizationAPIKeyDescriberMockRecorder {
	return m.recorder
}

// OrganizationAPIKey mocks base method
func (m *MockOrganizationAPIKeyDescriber) OrganizationAPIKey(arg0, arg1 string) (*mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKey indicates an expected call of OrganizationAPIKey
func (mr *MockOrganizationAPIKeyDescriberMockRecorder) OrganizationAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKey", reflect.TypeOf((*MockOrganizationAPIKeyDescriber)(nil).OrganizationAPIKey), arg0, arg1)
}

// MockOrganizationAPIKeyUpdater is a mock of OrganizationAPIKeyUpdater interface
type MockOrganizationAPIKeyUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyUpdaterMockRecorder
}

// MockOrganizationAPIKeyUpdaterMockRecorder is the mock recorder for MockOrganizationAPIKeyUpdater
type MockOrganizationAPIKeyUpdaterMockRecorder struct {
	mock *MockOrganizationAPIKeyUpdater
}

// NewMockOrganizationAPIKeyUpdater creates a new mock instance
func NewMockOrganizationAPIKeyUpdater(ctrl *gomock.Controller) *MockOrganizationAPIKeyUpdater {
	mock := &MockOrganizationAPIKeyUpdater{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyUpdater) EXPECT() *MockOrganizationAPIKeyUpdaterMockRecorder {
	return m.recorder
}

// UpdateOrganizationAPIKey mocks base method
func (m *MockOrganizationAPIKeyUpdater) UpdateOrganizationAPIKey(arg0, arg1 string, arg2 *mongodbatlas.APIKeyInput) (*mongodbatlas.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrganizationAPIKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrganizationAPIKey indicates an expected call of UpdateOrganizationAPIKey
func (mr *MockOrganizationAPIKeyUpdaterMockRecorder) UpdateOrganizationAPIKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrganizationAPIKey", reflect.TypeOf((*MockOrganizationAPIKeyUpdater)(nil).UpdateOrganizationAPIKey), arg0, arg1, arg2)
}
