// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: AccessRoleCreator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockAccessRoleCreator is a mock of AccessRoleCreator interface
type MockAccessRoleCreator struct {
	ctrl     *gomock.Controller
	recorder *MockAccessRoleCreatorMockRecorder
}

// MockAccessRoleCreatorMockRecorder is the mock recorder for MockAccessRoleCreator
type MockAccessRoleCreatorMockRecorder struct {
	mock *MockAccessRoleCreator
}

// NewMockAccessRoleCreator creates a new mock instance
func NewMockAccessRoleCreator(ctrl *gomock.Controller) *MockAccessRoleCreator {
	mock := &MockAccessRoleCreator{ctrl: ctrl}
	mock.recorder = &MockAccessRoleCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccessRoleCreator) EXPECT() *MockAccessRoleCreatorMockRecorder {
	return m.recorder
}

// AccessRole mocks base method
func (m *MockAccessRoleCreator) AccessRole(arg0, arg1 string) (*mongodbatlas.AWSIAMRole, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccessRole", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.AWSIAMRole)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccessRole indicates an expected call of AccessRole
func (mr *MockAccessRoleCreatorMockRecorder) AccessRole(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccessRole", reflect.TypeOf((*MockAccessRoleCreator)(nil).AccessRole), arg0, arg1)
}
