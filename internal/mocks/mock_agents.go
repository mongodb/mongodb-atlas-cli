// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: AgentLister,AgentUpgrader,AgentAPIKeyLister,AgentAPIKeyCreator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	opsmngr "go.mongodb.org/ops-manager/opsmngr"
	reflect "reflect"
)

// MockAgentLister is a mock of AgentLister interface
type MockAgentLister struct {
	ctrl     *gomock.Controller
	recorder *MockAgentListerMockRecorder
}

// MockAgentListerMockRecorder is the mock recorder for MockAgentLister
type MockAgentListerMockRecorder struct {
	mock *MockAgentLister
}

// NewMockAgentLister creates a new mock instance
func NewMockAgentLister(ctrl *gomock.Controller) *MockAgentLister {
	mock := &MockAgentLister{ctrl: ctrl}
	mock.recorder = &MockAgentListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgentLister) EXPECT() *MockAgentListerMockRecorder {
	return m.recorder
}

// Agents mocks base method
func (m *MockAgentLister) Agents(arg0, arg1 string) (*opsmngr.Agents, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Agents", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.Agents)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Agents indicates an expected call of Agents
func (mr *MockAgentListerMockRecorder) Agents(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Agents", reflect.TypeOf((*MockAgentLister)(nil).Agents), arg0, arg1)
}

// MockAgentUpgrader is a mock of AgentUpgrader interface
type MockAgentUpgrader struct {
	ctrl     *gomock.Controller
	recorder *MockAgentUpgraderMockRecorder
}

// MockAgentUpgraderMockRecorder is the mock recorder for MockAgentUpgrader
type MockAgentUpgraderMockRecorder struct {
	mock *MockAgentUpgrader
}

// NewMockAgentUpgrader creates a new mock instance
func NewMockAgentUpgrader(ctrl *gomock.Controller) *MockAgentUpgrader {
	mock := &MockAgentUpgrader{ctrl: ctrl}
	mock.recorder = &MockAgentUpgraderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgentUpgrader) EXPECT() *MockAgentUpgraderMockRecorder {
	return m.recorder
}

// UpgradeAgent mocks base method
func (m *MockAgentUpgrader) UpgradeAgent(arg0 string) (*opsmngr.AutomationConfigAgent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpgradeAgent", arg0)
	ret0, _ := ret[0].(*opsmngr.AutomationConfigAgent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpgradeAgent indicates an expected call of UpgradeAgent
func (mr *MockAgentUpgraderMockRecorder) UpgradeAgent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpgradeAgent", reflect.TypeOf((*MockAgentUpgrader)(nil).UpgradeAgent), arg0)
}

// MockAgentAPIKeyLister is a mock of AgentAPIKeyLister interface
type MockAgentAPIKeyLister struct {
	ctrl     *gomock.Controller
	recorder *MockAgentAPIKeyListerMockRecorder
}

// MockAgentAPIKeyListerMockRecorder is the mock recorder for MockAgentAPIKeyLister
type MockAgentAPIKeyListerMockRecorder struct {
	mock *MockAgentAPIKeyLister
}

// NewMockAgentAPIKeyLister creates a new mock instance
func NewMockAgentAPIKeyLister(ctrl *gomock.Controller) *MockAgentAPIKeyLister {
	mock := &MockAgentAPIKeyLister{ctrl: ctrl}
	mock.recorder = &MockAgentAPIKeyListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgentAPIKeyLister) EXPECT() *MockAgentAPIKeyListerMockRecorder {
	return m.recorder
}

// AgentAPIKeys mocks base method
func (m *MockAgentAPIKeyLister) AgentAPIKeys(arg0 string) ([]*opsmngr.AgentAPIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AgentAPIKeys", arg0)
	ret0, _ := ret[0].([]*opsmngr.AgentAPIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AgentAPIKeys indicates an expected call of AgentAPIKeys
func (mr *MockAgentAPIKeyListerMockRecorder) AgentAPIKeys(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AgentAPIKeys", reflect.TypeOf((*MockAgentAPIKeyLister)(nil).AgentAPIKeys), arg0)
}

// MockAgentAPIKeyCreator is a mock of AgentAPIKeyCreator interface
type MockAgentAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockAgentAPIKeyCreatorMockRecorder
}

// MockAgentAPIKeyCreatorMockRecorder is the mock recorder for MockAgentAPIKeyCreator
type MockAgentAPIKeyCreatorMockRecorder struct {
	mock *MockAgentAPIKeyCreator
}

// NewMockAgentAPIKeyCreator creates a new mock instance
func NewMockAgentAPIKeyCreator(ctrl *gomock.Controller) *MockAgentAPIKeyCreator {
	mock := &MockAgentAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockAgentAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAgentAPIKeyCreator) EXPECT() *MockAgentAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateAgentAPIKey mocks base method
func (m *MockAgentAPIKeyCreator) CreateAgentAPIKey(arg0 string, arg1 *opsmngr.AgentAPIKeysRequest) (*opsmngr.AgentAPIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.AgentAPIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentAPIKey indicates an expected call of CreateAgentAPIKey
func (mr *MockAgentAPIKeyCreatorMockRecorder) CreateAgentAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentAPIKey", reflect.TypeOf((*MockAgentAPIKeyCreator)(nil).CreateAgentAPIKey), arg0, arg1)
}
