// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/all_clusters_projects.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	opsmngr "github.com/mongodb/go-client-mongodb-ops-manager/opsmngr"
	reflect "reflect"
)

// MockListAllClusters is a mock of ListAllClusters interface
type MockListAllClusters struct {
	ctrl     *gomock.Controller
	recorder *MockListAllClustersMockRecorder
}

// MockListAllClustersMockRecorder is the mock recorder for MockListAllClusters
type MockListAllClustersMockRecorder struct {
	mock *MockListAllClusters
}

// NewMockListAllClusters creates a new mock instance
func NewMockListAllClusters(ctrl *gomock.Controller) *MockListAllClusters {
	mock := &MockListAllClusters{ctrl: ctrl}
	mock.recorder = &MockListAllClustersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockListAllClusters) EXPECT() *MockListAllClustersMockRecorder {
	return m.recorder
}

// ListAllClustersProjects mocks base method
func (m *MockListAllClusters) ListAllClustersProjects() (*opsmngr.AllClustersProjects, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAllClustersProjects")
	ret0, _ := ret[0].(*opsmngr.AllClustersProjects)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAllClustersProjects indicates an expected call of ListAllClustersProjects
func (mr *MockListAllClustersMockRecorder) ListAllClustersProjects() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAllClustersProjects", reflect.TypeOf((*MockListAllClusters)(nil).ListAllClustersProjects))
}
