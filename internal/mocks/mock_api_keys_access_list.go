// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: OrganizationAPIKeyAccessListCreator,OrganizationAPIKeyAccessListDeleter,OrganizationAPIKeyAccessListLister,OrganizationAPIKeyWhitelistLister,OrganizationAPIKeyWhitelistDeleter,OrganizationAPIKeyWhitelistCreator,OrganizationAPIKeyAccessListWhitelistLister,OrganizationAPIKeyAccessListWhitelistDeleter,OrganizationAPIKeyAccessListWhitelistCreator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
)

// MockOrganizationAPIKeyAccessListCreator is a mock of OrganizationAPIKeyAccessListCreator interface.
type MockOrganizationAPIKeyAccessListCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListCreatorMockRecorder
}

// MockOrganizationAPIKeyAccessListCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListCreator.
type MockOrganizationAPIKeyAccessListCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListCreator
}

// NewMockOrganizationAPIKeyAccessListCreator creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListCreator {
	mock := &MockOrganizationAPIKeyAccessListCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListCreator) EXPECT() *MockOrganizationAPIKeyAccessListCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKeyAccessList mocks base method.
func (m *MockOrganizationAPIKeyAccessListCreator) CreateOrganizationAPIKeyAccessList(arg0, arg1 string, arg2 []*mongodbatlas.AccessListAPIKeysReq) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyAccessList indicates an expected call of CreateOrganizationAPIKeyAccessList.
func (mr *MockOrganizationAPIKeyAccessListCreatorMockRecorder) CreateOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListCreator)(nil).CreateOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyAccessListDeleter is a mock of OrganizationAPIKeyAccessListDeleter interface.
type MockOrganizationAPIKeyAccessListDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListDeleterMockRecorder
}

// MockOrganizationAPIKeyAccessListDeleterMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListDeleter.
type MockOrganizationAPIKeyAccessListDeleterMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListDeleter
}

// NewMockOrganizationAPIKeyAccessListDeleter creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListDeleter(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListDeleter {
	mock := &MockOrganizationAPIKeyAccessListDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListDeleter) EXPECT() *MockOrganizationAPIKeyAccessListDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganizationAPIKeyAccessList mocks base method.
func (m *MockOrganizationAPIKeyAccessListDeleter) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyAccessList indicates an expected call of DeleteOrganizationAPIKeyAccessList.
func (mr *MockOrganizationAPIKeyAccessListDeleterMockRecorder) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListDeleter)(nil).DeleteOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyAccessListLister is a mock of OrganizationAPIKeyAccessListLister interface.
type MockOrganizationAPIKeyAccessListLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListListerMockRecorder
}

// MockOrganizationAPIKeyAccessListListerMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListLister.
type MockOrganizationAPIKeyAccessListListerMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListLister
}

// NewMockOrganizationAPIKeyAccessListLister creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListLister {
	mock := &MockOrganizationAPIKeyAccessListLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListLister) EXPECT() *MockOrganizationAPIKeyAccessListListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeyAccessLists mocks base method.
func (m *MockOrganizationAPIKeyAccessListLister) OrganizationAPIKeyAccessLists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyAccessLists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyAccessLists indicates an expected call of OrganizationAPIKeyAccessLists.
func (mr *MockOrganizationAPIKeyAccessListListerMockRecorder) OrganizationAPIKeyAccessLists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyAccessLists", reflect.TypeOf((*MockOrganizationAPIKeyAccessListLister)(nil).OrganizationAPIKeyAccessLists), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyWhitelistLister is a mock of OrganizationAPIKeyWhitelistLister interface.
type MockOrganizationAPIKeyWhitelistLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistListerMockRecorder
}

// MockOrganizationAPIKeyWhitelistListerMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistLister.
type MockOrganizationAPIKeyWhitelistListerMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistLister
}

// NewMockOrganizationAPIKeyWhitelistLister creates a new mock instance.
func NewMockOrganizationAPIKeyWhitelistLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistLister {
	mock := &MockOrganizationAPIKeyWhitelistLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyWhitelistLister) EXPECT() *MockOrganizationAPIKeyWhitelistListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeyWhitelists mocks base method.
func (m *MockOrganizationAPIKeyWhitelistLister) OrganizationAPIKeyWhitelists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyWhitelists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyWhitelists indicates an expected call of OrganizationAPIKeyWhitelists.
func (mr *MockOrganizationAPIKeyWhitelistListerMockRecorder) OrganizationAPIKeyWhitelists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyWhitelists", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistLister)(nil).OrganizationAPIKeyWhitelists), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyWhitelistDeleter is a mock of OrganizationAPIKeyWhitelistDeleter interface.
type MockOrganizationAPIKeyWhitelistDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistDeleterMockRecorder
}

// MockOrganizationAPIKeyWhitelistDeleterMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistDeleter.
type MockOrganizationAPIKeyWhitelistDeleterMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistDeleter
}

// NewMockOrganizationAPIKeyWhitelistDeleter creates a new mock instance.
func NewMockOrganizationAPIKeyWhitelistDeleter(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistDeleter {
	mock := &MockOrganizationAPIKeyWhitelistDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyWhitelistDeleter) EXPECT() *MockOrganizationAPIKeyWhitelistDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganizationAPIKeyWhitelist mocks base method.
func (m *MockOrganizationAPIKeyWhitelistDeleter) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyWhitelist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyWhitelist indicates an expected call of DeleteOrganizationAPIKeyWhitelist.
func (mr *MockOrganizationAPIKeyWhitelistDeleterMockRecorder) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyWhitelist", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistDeleter)(nil).DeleteOrganizationAPIKeyWhitelist), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyWhitelistCreator is a mock of OrganizationAPIKeyWhitelistCreator interface.
type MockOrganizationAPIKeyWhitelistCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistCreatorMockRecorder
}

// MockOrganizationAPIKeyWhitelistCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistCreator.
type MockOrganizationAPIKeyWhitelistCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistCreator
}

// NewMockOrganizationAPIKeyWhitelistCreator creates a new mock instance.
func NewMockOrganizationAPIKeyWhitelistCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistCreator {
	mock := &MockOrganizationAPIKeyWhitelistCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyWhitelistCreator) EXPECT() *MockOrganizationAPIKeyWhitelistCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKeyWhitelist mocks base method.
func (m *MockOrganizationAPIKeyWhitelistCreator) CreateOrganizationAPIKeyWhitelist(arg0, arg1 string, arg2 []*mongodbatlas.WhitelistAPIKeysReq) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyWhitelist", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyWhitelist indicates an expected call of CreateOrganizationAPIKeyWhitelist.
func (mr *MockOrganizationAPIKeyWhitelistCreatorMockRecorder) CreateOrganizationAPIKeyWhitelist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyWhitelist", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistCreator)(nil).CreateOrganizationAPIKeyWhitelist), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyAccessListWhitelistLister is a mock of OrganizationAPIKeyAccessListWhitelistLister interface.
type MockOrganizationAPIKeyAccessListWhitelistLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder
}

// MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListWhitelistLister.
type MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListWhitelistLister
}

// NewMockOrganizationAPIKeyAccessListWhitelistLister creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListWhitelistLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListWhitelistLister {
	mock := &MockOrganizationAPIKeyAccessListWhitelistLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListWhitelistLister) EXPECT() *MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeyAccessLists mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistLister) OrganizationAPIKeyAccessLists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyAccessLists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyAccessLists indicates an expected call of OrganizationAPIKeyAccessLists.
func (mr *MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder) OrganizationAPIKeyAccessLists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyAccessLists", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistLister)(nil).OrganizationAPIKeyAccessLists), arg0, arg1, arg2)
}

// OrganizationAPIKeyWhitelists mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistLister) OrganizationAPIKeyWhitelists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyWhitelists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyWhitelists indicates an expected call of OrganizationAPIKeyWhitelists.
func (mr *MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder) OrganizationAPIKeyWhitelists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyWhitelists", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistLister)(nil).OrganizationAPIKeyWhitelists), arg0, arg1, arg2)
}

// ServiceVersion mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistLister) ServiceVersion() (*mongodbatlas.ServiceVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServiceVersion")
	ret0, _ := ret[0].(*mongodbatlas.ServiceVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServiceVersion indicates an expected call of ServiceVersion.
func (mr *MockOrganizationAPIKeyAccessListWhitelistListerMockRecorder) ServiceVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServiceVersion", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistLister)(nil).ServiceVersion))
}

// MockOrganizationAPIKeyAccessListWhitelistDeleter is a mock of OrganizationAPIKeyAccessListWhitelistDeleter interface.
type MockOrganizationAPIKeyAccessListWhitelistDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder
}

// MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListWhitelistDeleter.
type MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListWhitelistDeleter
}

// NewMockOrganizationAPIKeyAccessListWhitelistDeleter creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListWhitelistDeleter(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListWhitelistDeleter {
	mock := &MockOrganizationAPIKeyAccessListWhitelistDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListWhitelistDeleter) EXPECT() *MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganizationAPIKeyAccessList mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistDeleter) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyAccessList indicates an expected call of DeleteOrganizationAPIKeyAccessList.
func (mr *MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistDeleter)(nil).DeleteOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// DeleteOrganizationAPIKeyWhitelist mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistDeleter) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyWhitelist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyWhitelist indicates an expected call of DeleteOrganizationAPIKeyWhitelist.
func (mr *MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyWhitelist", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistDeleter)(nil).DeleteOrganizationAPIKeyWhitelist), arg0, arg1, arg2)
}

// ServiceVersion mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistDeleter) ServiceVersion() (*mongodbatlas.ServiceVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServiceVersion")
	ret0, _ := ret[0].(*mongodbatlas.ServiceVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServiceVersion indicates an expected call of ServiceVersion.
func (mr *MockOrganizationAPIKeyAccessListWhitelistDeleterMockRecorder) ServiceVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServiceVersion", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistDeleter)(nil).ServiceVersion))
}

// MockOrganizationAPIKeyAccessListWhitelistCreator is a mock of OrganizationAPIKeyAccessListWhitelistCreator interface.
type MockOrganizationAPIKeyAccessListWhitelistCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder
}

// MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListWhitelistCreator.
type MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListWhitelistCreator
}

// NewMockOrganizationAPIKeyAccessListWhitelistCreator creates a new mock instance.
func NewMockOrganizationAPIKeyAccessListWhitelistCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListWhitelistCreator {
	mock := &MockOrganizationAPIKeyAccessListWhitelistCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyAccessListWhitelistCreator) EXPECT() *MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKeyAccessList mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistCreator) CreateOrganizationAPIKeyAccessList(arg0, arg1 string, arg2 []*mongodbatlas.AccessListAPIKeysReq) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyAccessList indicates an expected call of CreateOrganizationAPIKeyAccessList.
func (mr *MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder) CreateOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistCreator)(nil).CreateOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// CreateOrganizationAPIKeyWhitelist mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistCreator) CreateOrganizationAPIKeyWhitelist(arg0, arg1 string, arg2 []*mongodbatlas.WhitelistAPIKeysReq) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyWhitelist", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyWhitelist indicates an expected call of CreateOrganizationAPIKeyWhitelist.
func (mr *MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder) CreateOrganizationAPIKeyWhitelist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyWhitelist", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistCreator)(nil).CreateOrganizationAPIKeyWhitelist), arg0, arg1, arg2)
}

// ServiceVersion mocks base method.
func (m *MockOrganizationAPIKeyAccessListWhitelistCreator) ServiceVersion() (*mongodbatlas.ServiceVersion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServiceVersion")
	ret0, _ := ret[0].(*mongodbatlas.ServiceVersion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServiceVersion indicates an expected call of ServiceVersion.
func (mr *MockOrganizationAPIKeyAccessListWhitelistCreatorMockRecorder) ServiceVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServiceVersion", reflect.TypeOf((*MockOrganizationAPIKeyAccessListWhitelistCreator)(nil).ServiceVersion))
}
