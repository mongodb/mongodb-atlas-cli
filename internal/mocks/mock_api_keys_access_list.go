// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: OrganizationAPIKeyAccessListCreator,OrganizationAPIKeyAccessListDeleter,OrganizationAPIKeyAccessListLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockOrganizationAPIKeyAccessListCreator is a mock of OrganizationAPIKeyAccessListCreator interface
type MockOrganizationAPIKeyAccessListCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListCreatorMockRecorder
}

// MockOrganizationAPIKeyAccessListCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListCreator
type MockOrganizationAPIKeyAccessListCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListCreator
}

// NewMockOrganizationAPIKeyAccessListCreator creates a new mock instance
func NewMockOrganizationAPIKeyAccessListCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListCreator {
	mock := &MockOrganizationAPIKeyAccessListCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyAccessListCreator) EXPECT() *MockOrganizationAPIKeyAccessListCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKeyAccessList mocks base method
func (m *MockOrganizationAPIKeyAccessListCreator) CreateOrganizationAPIKeyAccessList(arg0, arg1 string, arg2 []*mongodbatlas.AccessListAPIKeysReq) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyAccessList indicates an expected call of CreateOrganizationAPIKeyAccessList
func (mr *MockOrganizationAPIKeyAccessListCreatorMockRecorder) CreateOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListCreator)(nil).CreateOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// CreateOrganizationAPIKeyAccessListDeprecated mocks base method
func (m *MockOrganizationAPIKeyAccessListCreator) CreateOrganizationAPIKeyAccessListDeprecated(arg0, arg1 string, arg2 []*mongodbatlas.WhitelistAPIKeysReq) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyAccessListDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyAccessListDeprecated indicates an expected call of CreateOrganizationAPIKeyAccessListDeprecated
func (mr *MockOrganizationAPIKeyAccessListCreatorMockRecorder) CreateOrganizationAPIKeyAccessListDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyAccessListDeprecated", reflect.TypeOf((*MockOrganizationAPIKeyAccessListCreator)(nil).CreateOrganizationAPIKeyAccessListDeprecated), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyAccessListDeleter is a mock of OrganizationAPIKeyAccessListDeleter interface
type MockOrganizationAPIKeyAccessListDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListDeleterMockRecorder
}

// MockOrganizationAPIKeyAccessListDeleterMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListDeleter
type MockOrganizationAPIKeyAccessListDeleterMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListDeleter
}

// NewMockOrganizationAPIKeyAccessListDeleter creates a new mock instance
func NewMockOrganizationAPIKeyAccessListDeleter(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListDeleter {
	mock := &MockOrganizationAPIKeyAccessListDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyAccessListDeleter) EXPECT() *MockOrganizationAPIKeyAccessListDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganizationAPIKeyAccessList mocks base method
func (m *MockOrganizationAPIKeyAccessListDeleter) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyAccessList", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyAccessList indicates an expected call of DeleteOrganizationAPIKeyAccessList
func (mr *MockOrganizationAPIKeyAccessListDeleterMockRecorder) DeleteOrganizationAPIKeyAccessList(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyAccessList", reflect.TypeOf((*MockOrganizationAPIKeyAccessListDeleter)(nil).DeleteOrganizationAPIKeyAccessList), arg0, arg1, arg2)
}

// DeleteOrganizationAPIKeyAccessListDeprecated mocks base method
func (m *MockOrganizationAPIKeyAccessListDeleter) DeleteOrganizationAPIKeyAccessListDeprecated(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyAccessListDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyAccessListDeprecated indicates an expected call of DeleteOrganizationAPIKeyAccessListDeprecated
func (mr *MockOrganizationAPIKeyAccessListDeleterMockRecorder) DeleteOrganizationAPIKeyAccessListDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyAccessListDeprecated", reflect.TypeOf((*MockOrganizationAPIKeyAccessListDeleter)(nil).DeleteOrganizationAPIKeyAccessListDeprecated), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyAccessListLister is a mock of OrganizationAPIKeyAccessListLister interface
type MockOrganizationAPIKeyAccessListLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyAccessListListerMockRecorder
}

// MockOrganizationAPIKeyAccessListListerMockRecorder is the mock recorder for MockOrganizationAPIKeyAccessListLister
type MockOrganizationAPIKeyAccessListListerMockRecorder struct {
	mock *MockOrganizationAPIKeyAccessListLister
}

// NewMockOrganizationAPIKeyAccessListLister creates a new mock instance
func NewMockOrganizationAPIKeyAccessListLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyAccessListLister {
	mock := &MockOrganizationAPIKeyAccessListLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyAccessListListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyAccessListLister) EXPECT() *MockOrganizationAPIKeyAccessListListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeyAccessLists mocks base method
func (m *MockOrganizationAPIKeyAccessListLister) OrganizationAPIKeyAccessLists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.AccessListAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyAccessLists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.AccessListAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyAccessLists indicates an expected call of OrganizationAPIKeyAccessLists
func (mr *MockOrganizationAPIKeyAccessListListerMockRecorder) OrganizationAPIKeyAccessLists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyAccessLists", reflect.TypeOf((*MockOrganizationAPIKeyAccessListLister)(nil).OrganizationAPIKeyAccessLists), arg0, arg1, arg2)
}

// OrganizationAPIKeyAccessListsDeprecated mocks base method
func (m *MockOrganizationAPIKeyAccessListLister) OrganizationAPIKeyAccessListsDeprecated(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyAccessListsDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyAccessListsDeprecated indicates an expected call of OrganizationAPIKeyAccessListsDeprecated
func (mr *MockOrganizationAPIKeyAccessListListerMockRecorder) OrganizationAPIKeyAccessListsDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyAccessListsDeprecated", reflect.TypeOf((*MockOrganizationAPIKeyAccessListLister)(nil).OrganizationAPIKeyAccessListsDeprecated), arg0, arg1, arg2)
}
