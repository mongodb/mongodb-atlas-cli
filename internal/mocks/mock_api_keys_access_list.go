// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: OrganizationAPIKeyWhitelistLister,OrganizationAPIKeyWhitelistCreator,OrganizationAPIKeyWhitelistDeleter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockOrganizationAPIKeyWhitelistLister is a mock of OrganizationAPIKeyWhitelistLister interface
type MockOrganizationAPIKeyWhitelistLister struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistListerMockRecorder
}

// MockOrganizationAPIKeyWhitelistListerMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistLister
type MockOrganizationAPIKeyWhitelistListerMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistLister
}

// NewMockOrganizationAPIKeyWhitelistLister creates a new mock instance
func NewMockOrganizationAPIKeyWhitelistLister(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistLister {
	mock := &MockOrganizationAPIKeyWhitelistLister{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyWhitelistLister) EXPECT() *MockOrganizationAPIKeyWhitelistListerMockRecorder {
	return m.recorder
}

// OrganizationAPIKeyWhitelists mocks base method
func (m *MockOrganizationAPIKeyWhitelistLister) OrganizationAPIKeyWhitelists(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OrganizationAPIKeyWhitelists", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OrganizationAPIKeyWhitelists indicates an expected call of OrganizationAPIKeyWhitelists
func (mr *MockOrganizationAPIKeyWhitelistListerMockRecorder) OrganizationAPIKeyWhitelists(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OrganizationAPIKeyWhitelists", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistLister)(nil).OrganizationAPIKeyWhitelists), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyWhitelistCreator is a mock of OrganizationAPIKeyWhitelistCreator interface
type MockOrganizationAPIKeyWhitelistCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistCreatorMockRecorder
}

// MockOrganizationAPIKeyWhitelistCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistCreator
type MockOrganizationAPIKeyWhitelistCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistCreator
}

// NewMockOrganizationAPIKeyWhitelistCreator creates a new mock instance
func NewMockOrganizationAPIKeyWhitelistCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistCreator {
	mock := &MockOrganizationAPIKeyWhitelistCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyWhitelistCreator) EXPECT() *MockOrganizationAPIKeyWhitelistCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKeyWhite mocks base method
func (m *MockOrganizationAPIKeyWhitelistCreator) CreateOrganizationAPIKeyWhite(arg0, arg1 string, arg2 []*mongodbatlas.WhitelistAPIKeysReq) (*mongodbatlas.WhitelistAPIKeys, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKeyWhite", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.WhitelistAPIKeys)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKeyWhite indicates an expected call of CreateOrganizationAPIKeyWhite
func (mr *MockOrganizationAPIKeyWhitelistCreatorMockRecorder) CreateOrganizationAPIKeyWhite(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKeyWhite", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistCreator)(nil).CreateOrganizationAPIKeyWhite), arg0, arg1, arg2)
}

// MockOrganizationAPIKeyWhitelistDeleter is a mock of OrganizationAPIKeyWhitelistDeleter interface
type MockOrganizationAPIKeyWhitelistDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyWhitelistDeleterMockRecorder
}

// MockOrganizationAPIKeyWhitelistDeleterMockRecorder is the mock recorder for MockOrganizationAPIKeyWhitelistDeleter
type MockOrganizationAPIKeyWhitelistDeleterMockRecorder struct {
	mock *MockOrganizationAPIKeyWhitelistDeleter
}

// NewMockOrganizationAPIKeyWhitelistDeleter creates a new mock instance
func NewMockOrganizationAPIKeyWhitelistDeleter(ctrl *gomock.Controller) *MockOrganizationAPIKeyWhitelistDeleter {
	mock := &MockOrganizationAPIKeyWhitelistDeleter{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyWhitelistDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOrganizationAPIKeyWhitelistDeleter) EXPECT() *MockOrganizationAPIKeyWhitelistDeleterMockRecorder {
	return m.recorder
}

// DeleteOrganizationAPIKeyWhitelist mocks base method
func (m *MockOrganizationAPIKeyWhitelistDeleter) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationAPIKeyWhitelist", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationAPIKeyWhitelist indicates an expected call of DeleteOrganizationAPIKeyWhitelist
func (mr *MockOrganizationAPIKeyWhitelistDeleterMockRecorder) DeleteOrganizationAPIKeyWhitelist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationAPIKeyWhitelist", reflect.TypeOf((*MockOrganizationAPIKeyWhitelistDeleter)(nil).DeleteOrganizationAPIKeyWhitelist), arg0, arg1, arg2)
}
