// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: S3BlockstoresLister,S3BlockstoresDeleter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	opsmngr "go.mongodb.org/ops-manager/opsmngr"
	reflect "reflect"
)

// MockS3BlockstoresLister is a mock of S3BlockstoresLister interface
type MockS3BlockstoresLister struct {
	ctrl     *gomock.Controller
	recorder *MockS3BlockstoresListerMockRecorder
}

// MockS3BlockstoresListerMockRecorder is the mock recorder for MockS3BlockstoresLister
type MockS3BlockstoresListerMockRecorder struct {
	mock *MockS3BlockstoresLister
}

// NewMockS3BlockstoresLister creates a new mock instance
func NewMockS3BlockstoresLister(ctrl *gomock.Controller) *MockS3BlockstoresLister {
	mock := &MockS3BlockstoresLister{ctrl: ctrl}
	mock.recorder = &MockS3BlockstoresListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockS3BlockstoresLister) EXPECT() *MockS3BlockstoresListerMockRecorder {
	return m.recorder
}

// ListS3Blockstores mocks base method
func (m *MockS3BlockstoresLister) ListS3Blockstores(arg0 *mongodbatlas.ListOptions) (*opsmngr.S3Blockstores, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListS3Blockstores", arg0)
	ret0, _ := ret[0].(*opsmngr.S3Blockstores)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListS3Blockstores indicates an expected call of ListS3Blockstores
func (mr *MockS3BlockstoresListerMockRecorder) ListS3Blockstores(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListS3Blockstores", reflect.TypeOf((*MockS3BlockstoresLister)(nil).ListS3Blockstores), arg0)
}

// MockS3BlockstoresDeleter is a mock of S3BlockstoresDeleter interface
type MockS3BlockstoresDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockS3BlockstoresDeleterMockRecorder
}

// MockS3BlockstoresDeleterMockRecorder is the mock recorder for MockS3BlockstoresDeleter
type MockS3BlockstoresDeleterMockRecorder struct {
	mock *MockS3BlockstoresDeleter
}

// NewMockS3BlockstoresDeleter creates a new mock instance
func NewMockS3BlockstoresDeleter(ctrl *gomock.Controller) *MockS3BlockstoresDeleter {
	mock := &MockS3BlockstoresDeleter{ctrl: ctrl}
	mock.recorder = &MockS3BlockstoresDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockS3BlockstoresDeleter) EXPECT() *MockS3BlockstoresDeleterMockRecorder {
	return m.recorder
}

// DeleteS3Blockstore mocks base method
func (m *MockS3BlockstoresDeleter) DeleteS3Blockstore(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteS3Blockstore", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteS3Blockstore indicates an expected call of DeleteS3Blockstore
func (mr *MockS3BlockstoresDeleterMockRecorder) DeleteS3Blockstore(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteS3Blockstore", reflect.TypeOf((*MockS3BlockstoresDeleter)(nil).DeleteS3Blockstore), arg0)
}
