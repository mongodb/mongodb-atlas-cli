// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/internal/store (interfaces: ServerlessSnapshotsLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
)

// MockServerlessSnapshotsLister is a mock of ServerlessSnapshotsLister interface.
type MockServerlessSnapshotsLister struct {
	ctrl     *gomock.Controller
	recorder *MockServerlessSnapshotsListerMockRecorder
}

// MockServerlessSnapshotsListerMockRecorder is the mock recorder for MockServerlessSnapshotsLister.
type MockServerlessSnapshotsListerMockRecorder struct {
	mock *MockServerlessSnapshotsLister
}

// NewMockServerlessSnapshotsLister creates a new mock instance.
func NewMockServerlessSnapshotsLister(ctrl *gomock.Controller) *MockServerlessSnapshotsLister {
	mock := &MockServerlessSnapshotsLister{ctrl: ctrl}
	mock.recorder = &MockServerlessSnapshotsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerlessSnapshotsLister) EXPECT() *MockServerlessSnapshotsListerMockRecorder {
	return m.recorder
}

// ServerlessSnapshots mocks base method.
func (m *MockServerlessSnapshotsLister) ServerlessSnapshots(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.CloudProviderSnapshots, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServerlessSnapshots", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.CloudProviderSnapshots)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServerlessSnapshots indicates an expected call of ServerlessSnapshots.
func (mr *MockServerlessSnapshotsListerMockRecorder) ServerlessSnapshots(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServerlessSnapshots", reflect.TypeOf((*MockServerlessSnapshotsLister)(nil).ServerlessSnapshots), arg0, arg1, arg2)
}
