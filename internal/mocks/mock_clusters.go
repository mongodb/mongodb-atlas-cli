// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/mongocli/v2/internal/store (interfaces: ClusterLister,OpsManagerClusterDescriber)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	opsmngr "go.mongodb.org/ops-manager/opsmngr"
)

// MockClusterLister is a mock of ClusterLister interface.
type MockClusterLister struct {
	ctrl     *gomock.Controller
	recorder *MockClusterListerMockRecorder
}

// MockClusterListerMockRecorder is the mock recorder for MockClusterLister.
type MockClusterListerMockRecorder struct {
	mock *MockClusterLister
}

// NewMockClusterLister creates a new mock instance.
func NewMockClusterLister(ctrl *gomock.Controller) *MockClusterLister {
	mock := &MockClusterLister{ctrl: ctrl}
	mock.recorder = &MockClusterListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterLister) EXPECT() *MockClusterListerMockRecorder {
	return m.recorder
}

// ProjectClusters mocks base method.
func (m *MockClusterLister) ProjectClusters(arg0 string, arg1 *opsmngr.ListOptions) (*opsmngr.Clusters, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProjectClusters", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.Clusters)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProjectClusters indicates an expected call of ProjectClusters.
func (mr *MockClusterListerMockRecorder) ProjectClusters(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProjectClusters", reflect.TypeOf((*MockClusterLister)(nil).ProjectClusters), arg0, arg1)
}

// MockOpsManagerClusterDescriber is a mock of OpsManagerClusterDescriber interface.
type MockOpsManagerClusterDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOpsManagerClusterDescriberMockRecorder
}

// MockOpsManagerClusterDescriberMockRecorder is the mock recorder for MockOpsManagerClusterDescriber.
type MockOpsManagerClusterDescriberMockRecorder struct {
	mock *MockOpsManagerClusterDescriber
}

// NewMockOpsManagerClusterDescriber creates a new mock instance.
func NewMockOpsManagerClusterDescriber(ctrl *gomock.Controller) *MockOpsManagerClusterDescriber {
	mock := &MockOpsManagerClusterDescriber{ctrl: ctrl}
	mock.recorder = &MockOpsManagerClusterDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpsManagerClusterDescriber) EXPECT() *MockOpsManagerClusterDescriberMockRecorder {
	return m.recorder
}

// OpsManagerCluster mocks base method.
func (m *MockOpsManagerClusterDescriber) OpsManagerCluster(arg0, arg1 string) (*opsmngr.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpsManagerCluster", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OpsManagerCluster indicates an expected call of OpsManagerCluster.
func (mr *MockOpsManagerClusterDescriberMockRecorder) OpsManagerCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpsManagerCluster", reflect.TypeOf((*MockOpsManagerClusterDescriber)(nil).OpsManagerCluster), arg0, arg1)
}
