// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store (interfaces: FederationAuthenticationStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20240530002/admin"
)

// MockFederationAuthenticationStore is a mock of FederationAuthenticationStore interface.
type MockFederationAuthenticationStore struct {
	ctrl     *gomock.Controller
	recorder *MockFederationAuthenticationStoreMockRecorder
}

// MockFederationAuthenticationStoreMockRecorder is the mock recorder for MockFederationAuthenticationStore.
type MockFederationAuthenticationStoreMockRecorder struct {
	mock *MockFederationAuthenticationStore
}

// NewMockFederationAuthenticationStore creates a new mock instance.
func NewMockFederationAuthenticationStore(ctrl *gomock.Controller) *MockFederationAuthenticationStore {
	mock := &MockFederationAuthenticationStore{ctrl: ctrl}
	mock.recorder = &MockFederationAuthenticationStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFederationAuthenticationStore) EXPECT() *MockFederationAuthenticationStoreMockRecorder {
	return m.recorder
}

// AtlasFederatedAuthOrgConfig mocks base method.
func (m *MockFederationAuthenticationStore) AtlasFederatedAuthOrgConfig(arg0 *admin.GetConnectedOrgConfigApiParams) (*admin.ConnectedOrgConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasFederatedAuthOrgConfig", arg0)
	ret0, _ := ret[0].(*admin.ConnectedOrgConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasFederatedAuthOrgConfig indicates an expected call of AtlasFederatedAuthOrgConfig.
func (mr *MockFederationAuthenticationStoreMockRecorder) AtlasFederatedAuthOrgConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasFederatedAuthOrgConfig", reflect.TypeOf((*MockFederationAuthenticationStore)(nil).AtlasFederatedAuthOrgConfig), arg0)
}

// AtlasIdentityProvider mocks base method.
func (m *MockFederationAuthenticationStore) AtlasIdentityProvider(arg0 *admin.GetIdentityProviderApiParams) (*admin.FederationIdentityProvider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasIdentityProvider", arg0)
	ret0, _ := ret[0].(*admin.FederationIdentityProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasIdentityProvider indicates an expected call of AtlasIdentityProvider.
func (mr *MockFederationAuthenticationStoreMockRecorder) AtlasIdentityProvider(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasIdentityProvider", reflect.TypeOf((*MockFederationAuthenticationStore)(nil).AtlasIdentityProvider), arg0)
}
