// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store (interfaces: FederationAuthentificationStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20240530002/admin"
)

// MockFederationAuthentificationStore is a mock of FederationAuthentificationStore interface.
type MockFederationAuthentificationStore struct {
	ctrl     *gomock.Controller
	recorder *MockFederationAuthentificationStoreMockRecorder
}

// MockFederationAuthentificationStoreMockRecorder is the mock recorder for MockFederationAuthentificationStore.
type MockFederationAuthentificationStoreMockRecorder struct {
	mock *MockFederationAuthentificationStore
}

// NewMockFederationAuthentificationStore creates a new mock instance.
func NewMockFederationAuthentificationStore(ctrl *gomock.Controller) *MockFederationAuthentificationStore {
	mock := &MockFederationAuthentificationStore{ctrl: ctrl}
	mock.recorder = &MockFederationAuthentificationStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFederationAuthentificationStore) EXPECT() *MockFederationAuthentificationStoreMockRecorder {
	return m.recorder
}

// AtlasFederatedAuthOrgConfig mocks base method.
func (m *MockFederationAuthentificationStore) AtlasFederatedAuthOrgConfig(arg0 *admin.GetConnectedOrgConfigApiParams) (*admin.ConnectedOrgConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasFederatedAuthOrgConfig", arg0)
	ret0, _ := ret[0].(*admin.ConnectedOrgConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasFederatedAuthOrgConfig indicates an expected call of AtlasFederatedAuthOrgConfig.
func (mr *MockFederationAuthentificationStoreMockRecorder) AtlasFederatedAuthOrgConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasFederatedAuthOrgConfig", reflect.TypeOf((*MockFederationAuthentificationStore)(nil).AtlasFederatedAuthOrgConfig), arg0)
}

// AtlasIdentityProvider mocks base method.
func (m *MockFederationAuthentificationStore) AtlasIdentityProvider(arg0 *admin.GetIdentityProviderApiParams) (*admin.FederationIdentityProvider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasIdentityProvider", arg0)
	ret0, _ := ret[0].(*admin.FederationIdentityProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasIdentityProvider indicates an expected call of AtlasIdentityProvider.
func (mr *MockFederationAuthentificationStoreMockRecorder) AtlasIdentityProvider(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasIdentityProvider", reflect.TypeOf((*MockFederationAuthentificationStore)(nil).AtlasIdentityProvider), arg0)
}

// AtlasIdentityProviderMetadata mocks base method.
func (m *MockFederationAuthentificationStore) AtlasIdentityProviderMetadata(arg0 *admin.GetIdentityProviderMetadataApiParams) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasIdentityProviderMetadata", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasIdentityProviderMetadata indicates an expected call of AtlasIdentityProviderMetadata.
func (mr *MockFederationAuthentificationStoreMockRecorder) AtlasIdentityProviderMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasIdentityProviderMetadata", reflect.TypeOf((*MockFederationAuthentificationStore)(nil).AtlasIdentityProviderMetadata), arg0)
}
