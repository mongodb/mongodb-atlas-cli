// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store (interfaces: FederationSettingsDescriber)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_federation_settings_store.go -package=mocks github.com/mongodb/mongodb-atlas-cli/atlascli/internal/store FederationSettingsDescriber
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	admin "go.mongodb.org/atlas-sdk/v20250312002/admin"
	gomock "go.uber.org/mock/gomock"
)

// MockFederationSettingsDescriber is a mock of FederationSettingsDescriber interface.
type MockFederationSettingsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockFederationSettingsDescriberMockRecorder
	isgomock struct{}
}

// MockFederationSettingsDescriberMockRecorder is the mock recorder for MockFederationSettingsDescriber.
type MockFederationSettingsDescriberMockRecorder struct {
	mock *MockFederationSettingsDescriber
}

// NewMockFederationSettingsDescriber creates a new mock instance.
func NewMockFederationSettingsDescriber(ctrl *gomock.Controller) *MockFederationSettingsDescriber {
	mock := &MockFederationSettingsDescriber{ctrl: ctrl}
	mock.recorder = &MockFederationSettingsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFederationSettingsDescriber) EXPECT() *MockFederationSettingsDescriberMockRecorder {
	return m.recorder
}

// FederationSetting mocks base method.
func (m *MockFederationSettingsDescriber) FederationSetting(opts *admin.GetFederationSettingsApiParams) (*admin.OrgFederationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FederationSetting", opts)
	ret0, _ := ret[0].(*admin.OrgFederationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FederationSetting indicates an expected call of FederationSetting.
func (mr *MockFederationSettingsDescriberMockRecorder) FederationSetting(opts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FederationSetting", reflect.TypeOf((*MockFederationSettingsDescriber)(nil).FederationSetting), opts)
}
