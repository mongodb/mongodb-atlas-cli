// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: GlobalAlertLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	opsmngr "go.mongodb.org/ops-manager/opsmngr"
	reflect "reflect"
)

// MockGlobalAlertLister is a mock of GlobalAlertLister interface
type MockGlobalAlertLister struct {
	ctrl     *gomock.Controller
	recorder *MockGlobalAlertListerMockRecorder
}

// MockGlobalAlertListerMockRecorder is the mock recorder for MockGlobalAlertLister
type MockGlobalAlertListerMockRecorder struct {
	mock *MockGlobalAlertLister
}

// NewMockGlobalAlertLister creates a new mock instance
func NewMockGlobalAlertLister(ctrl *gomock.Controller) *MockGlobalAlertLister {
	mock := &MockGlobalAlertLister{ctrl: ctrl}
	mock.recorder = &MockGlobalAlertListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGlobalAlertLister) EXPECT() *MockGlobalAlertListerMockRecorder {
	return m.recorder
}

// GlobalAlerts mocks base method
func (m *MockGlobalAlertLister) GlobalAlerts(arg0 *mongodbatlas.AlertsListOptions) (*opsmngr.GlobalAlerts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GlobalAlerts", arg0)
	ret0, _ := ret[0].(*opsmngr.GlobalAlerts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GlobalAlerts indicates an expected call of GlobalAlerts
func (mr *MockGlobalAlertListerMockRecorder) GlobalAlerts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GlobalAlerts", reflect.TypeOf((*MockGlobalAlertLister)(nil).GlobalAlerts), arg0)
}
