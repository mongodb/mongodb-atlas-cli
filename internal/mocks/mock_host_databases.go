// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/host_databases.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "github.com/mongodb/go-client-mongodb-atlas/mongodbatlas"
	reflect "reflect"
)

// MockHostDatabaseLister is a mock of HostDatabaseLister interface
type MockHostDatabaseLister struct {
	ctrl     *gomock.Controller
	recorder *MockHostDatabaseListerMockRecorder
}

// MockHostDatabaseListerMockRecorder is the mock recorder for MockHostDatabaseLister
type MockHostDatabaseListerMockRecorder struct {
	mock *MockHostDatabaseLister
}

// NewMockHostDatabaseLister creates a new mock instance
func NewMockHostDatabaseLister(ctrl *gomock.Controller) *MockHostDatabaseLister {
	mock := &MockHostDatabaseLister{ctrl: ctrl}
	mock.recorder = &MockHostDatabaseListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHostDatabaseLister) EXPECT() *MockHostDatabaseListerMockRecorder {
	return m.recorder
}

// HostDatabases mocks base method
func (m *MockHostDatabaseLister) HostDatabases(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) (*mongodbatlas.ProcessDatabasesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HostDatabases", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.ProcessDatabasesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HostDatabases indicates an expected call of HostDatabases
func (mr *MockHostDatabaseListerMockRecorder) HostDatabases(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HostDatabases", reflect.TypeOf((*MockHostDatabaseLister)(nil).HostDatabases), arg0, arg1, arg2)
}
