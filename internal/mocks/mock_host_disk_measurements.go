// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/host_disk_measurements.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "github.com/mongodb/go-client-mongodb-atlas/mongodbatlas"
	reflect "reflect"
)

// MockHostDiskMeasurementsLister is a mock of HostDiskMeasurementsLister interface
type MockHostDiskMeasurementsLister struct {
	ctrl     *gomock.Controller
	recorder *MockHostDiskMeasurementsListerMockRecorder
}

// MockHostDiskMeasurementsListerMockRecorder is the mock recorder for MockHostDiskMeasurementsLister
type MockHostDiskMeasurementsListerMockRecorder struct {
	mock *MockHostDiskMeasurementsLister
}

// NewMockHostDiskMeasurementsLister creates a new mock instance
func NewMockHostDiskMeasurementsLister(ctrl *gomock.Controller) *MockHostDiskMeasurementsLister {
	mock := &MockHostDiskMeasurementsLister{ctrl: ctrl}
	mock.recorder = &MockHostDiskMeasurementsListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHostDiskMeasurementsLister) EXPECT() *MockHostDiskMeasurementsListerMockRecorder {
	return m.recorder
}

// HostDiskMeasurements mocks base method
func (m *MockHostDiskMeasurementsLister) HostDiskMeasurements(arg0, arg1, arg2 string, arg3 *mongodbatlas.ProcessMeasurementListOptions) (*mongodbatlas.ProcessDiskMeasurements, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HostDiskMeasurements", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*mongodbatlas.ProcessDiskMeasurements)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HostDiskMeasurements indicates an expected call of HostDiskMeasurements
func (mr *MockHostDiskMeasurementsListerMockRecorder) HostDiskMeasurements(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HostDiskMeasurements", reflect.TypeOf((*MockHostDiskMeasurementsLister)(nil).HostDiskMeasurements), arg0, arg1, arg2, arg3)
}
