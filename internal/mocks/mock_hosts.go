// Code generated by MockGen. DO NOT EDIT.
// Source: internal/store/hosts.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	opsmngr "github.com/mongodb/go-client-mongodb-ops-manager/opsmngr"
	reflect "reflect"
)

// MockHostLister is a mock of HostLister interface
type MockHostLister struct {
	ctrl     *gomock.Controller
	recorder *MockHostListerMockRecorder
}

// MockHostListerMockRecorder is the mock recorder for MockHostLister
type MockHostListerMockRecorder struct {
	mock *MockHostLister
}

// NewMockHostLister creates a new mock instance
func NewMockHostLister(ctrl *gomock.Controller) *MockHostLister {
	mock := &MockHostLister{ctrl: ctrl}
	mock.recorder = &MockHostListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHostLister) EXPECT() *MockHostListerMockRecorder {
	return m.recorder
}

// Hosts mocks base method
func (m *MockHostLister) Hosts(arg0 string, arg1 *opsmngr.HostListOptions) (*opsmngr.Hosts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hosts", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.Hosts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Hosts indicates an expected call of Hosts
func (mr *MockHostListerMockRecorder) Hosts(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hosts", reflect.TypeOf((*MockHostLister)(nil).Hosts), arg0, arg1)
}

// MockHostDescriber is a mock of HostDescriber interface
type MockHostDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockHostDescriberMockRecorder
}

// MockHostDescriberMockRecorder is the mock recorder for MockHostDescriber
type MockHostDescriberMockRecorder struct {
	mock *MockHostDescriber
}

// NewMockHostDescriber creates a new mock instance
func NewMockHostDescriber(ctrl *gomock.Controller) *MockHostDescriber {
	mock := &MockHostDescriber{ctrl: ctrl}
	mock.recorder = &MockHostDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHostDescriber) EXPECT() *MockHostDescriberMockRecorder {
	return m.recorder
}

// Host mocks base method
func (m *MockHostDescriber) Host(arg0, arg1 string) (*opsmngr.Host, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Host", arg0, arg1)
	ret0, _ := ret[0].(*opsmngr.Host)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Host indicates an expected call of Host
func (mr *MockHostDescriberMockRecorder) Host(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Host", reflect.TypeOf((*MockHostDescriber)(nil).Host), arg0, arg1)
}
