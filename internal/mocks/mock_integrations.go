// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: IntegrationCreator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockIntegrationCreator is a mock of IntegrationCreator interface
type MockIntegrationCreator struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationCreatorMockRecorder
}

// MockIntegrationCreatorMockRecorder is the mock recorder for MockIntegrationCreator
type MockIntegrationCreatorMockRecorder struct {
	mock *MockIntegrationCreator
}

// NewMockIntegrationCreator creates a new mock instance
func NewMockIntegrationCreator(ctrl *gomock.Controller) *MockIntegrationCreator {
	mock := &MockIntegrationCreator{ctrl: ctrl}
	mock.recorder = &MockIntegrationCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIntegrationCreator) EXPECT() *MockIntegrationCreatorMockRecorder {
	return m.recorder
}

// CreateIntegration mocks base method
func (m *MockIntegrationCreator) CreateIntegration(arg0, arg1 string, arg2 *mongodbatlas.ThirdPartyIntegration) (*mongodbatlas.ThirdPartyIntegrations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateIntegration", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.ThirdPartyIntegrations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateIntegration indicates an expected call of CreateIntegration
func (mr *MockIntegrationCreatorMockRecorder) CreateIntegration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIntegration", reflect.TypeOf((*MockIntegrationCreator)(nil).CreateIntegration), arg0, arg1, arg2)
}
