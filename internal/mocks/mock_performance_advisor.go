// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: PerformanceAdvisorNamespacesLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockPerformanceAdvisorNamespacesLister is a mock of PerformanceAdvisorNamespacesLister interface
type MockPerformanceAdvisorNamespacesLister struct {
	ctrl     *gomock.Controller
	recorder *MockPerformanceAdvisorNamespacesListerMockRecorder
}

// MockPerformanceAdvisorNamespacesListerMockRecorder is the mock recorder for MockPerformanceAdvisorNamespacesLister
type MockPerformanceAdvisorNamespacesListerMockRecorder struct {
	mock *MockPerformanceAdvisorNamespacesLister
}

// NewMockPerformanceAdvisorNamespacesLister creates a new mock instance
func NewMockPerformanceAdvisorNamespacesLister(ctrl *gomock.Controller) *MockPerformanceAdvisorNamespacesLister {
	mock := &MockPerformanceAdvisorNamespacesLister{ctrl: ctrl}
	mock.recorder = &MockPerformanceAdvisorNamespacesListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPerformanceAdvisorNamespacesLister) EXPECT() *MockPerformanceAdvisorNamespacesListerMockRecorder {
	return m.recorder
}

// PerformanceAdvisorNamespaces mocks base method
func (m *MockPerformanceAdvisorNamespacesLister) PerformanceAdvisorNamespaces(arg0, arg1 string, arg2 *mongodbatlas.NamespaceOptions) (*mongodbatlas.Namespaces, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformanceAdvisorNamespaces", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.Namespaces)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PerformanceAdvisorNamespaces indicates an expected call of PerformanceAdvisorNamespaces
func (mr *MockPerformanceAdvisorNamespacesListerMockRecorder) PerformanceAdvisorNamespaces(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformanceAdvisorNamespaces", reflect.TypeOf((*MockPerformanceAdvisorNamespacesLister)(nil).PerformanceAdvisorNamespaces), arg0, arg1, arg2)
}
