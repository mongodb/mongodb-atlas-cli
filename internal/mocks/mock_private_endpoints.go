// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: PrivateEndpointLister,PrivateEndpointDescriber,PrivateEndpointCreator,PrivateEndpointDeleter,InterfaceEndpointDescriber,InterfaceEndpointCreator,InterfaceEndpointDeleter,PrivateEndpointListerDeprecated,PrivateEndpointDescriberDeprecated,PrivateEndpointCreatorDeprecated,PrivateEndpointDeleterDeprecated,InterfaceEndpointCreatorDeprecated,InterfaceEndpointDescriberDeprecated,InterfaceEndpointDeleterDeprecated,RegionalizedPrivateEndpointSettingUpdater,RegionalizedPrivateEndpointSettingDescriber)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockPrivateEndpointLister is a mock of PrivateEndpointLister interface
type MockPrivateEndpointLister struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointListerMockRecorder
}

// MockPrivateEndpointListerMockRecorder is the mock recorder for MockPrivateEndpointLister
type MockPrivateEndpointListerMockRecorder struct {
	mock *MockPrivateEndpointLister
}

// NewMockPrivateEndpointLister creates a new mock instance
func NewMockPrivateEndpointLister(ctrl *gomock.Controller) *MockPrivateEndpointLister {
	mock := &MockPrivateEndpointLister{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointLister) EXPECT() *MockPrivateEndpointListerMockRecorder {
	return m.recorder
}

// PrivateEndpoints mocks base method
func (m *MockPrivateEndpointLister) PrivateEndpoints(arg0, arg1 string, arg2 *mongodbatlas.ListOptions) ([]mongodbatlas.PrivateEndpointConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpoints", arg0, arg1, arg2)
	ret0, _ := ret[0].([]mongodbatlas.PrivateEndpointConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpoints indicates an expected call of PrivateEndpoints
func (mr *MockPrivateEndpointListerMockRecorder) PrivateEndpoints(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpoints", reflect.TypeOf((*MockPrivateEndpointLister)(nil).PrivateEndpoints), arg0, arg1, arg2)
}

// MockPrivateEndpointDescriber is a mock of PrivateEndpointDescriber interface
type MockPrivateEndpointDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDescriberMockRecorder
}

// MockPrivateEndpointDescriberMockRecorder is the mock recorder for MockPrivateEndpointDescriber
type MockPrivateEndpointDescriberMockRecorder struct {
	mock *MockPrivateEndpointDescriber
}

// NewMockPrivateEndpointDescriber creates a new mock instance
func NewMockPrivateEndpointDescriber(ctrl *gomock.Controller) *MockPrivateEndpointDescriber {
	mock := &MockPrivateEndpointDescriber{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDescriber) EXPECT() *MockPrivateEndpointDescriberMockRecorder {
	return m.recorder
}

// PrivateEndpoint mocks base method
func (m *MockPrivateEndpointDescriber) PrivateEndpoint(arg0, arg1, arg2 string) (*mongodbatlas.PrivateEndpointConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpoint", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpoint indicates an expected call of PrivateEndpoint
func (mr *MockPrivateEndpointDescriberMockRecorder) PrivateEndpoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointDescriber)(nil).PrivateEndpoint), arg0, arg1, arg2)
}

// MockPrivateEndpointCreator is a mock of PrivateEndpointCreator interface
type MockPrivateEndpointCreator struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointCreatorMockRecorder
}

// MockPrivateEndpointCreatorMockRecorder is the mock recorder for MockPrivateEndpointCreator
type MockPrivateEndpointCreatorMockRecorder struct {
	mock *MockPrivateEndpointCreator
}

// NewMockPrivateEndpointCreator creates a new mock instance
func NewMockPrivateEndpointCreator(ctrl *gomock.Controller) *MockPrivateEndpointCreator {
	mock := &MockPrivateEndpointCreator{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointCreator) EXPECT() *MockPrivateEndpointCreatorMockRecorder {
	return m.recorder
}

// CreatePrivateEndpoint mocks base method
func (m *MockPrivateEndpointCreator) CreatePrivateEndpoint(arg0 string, arg1 *mongodbatlas.PrivateEndpointConnection) (*mongodbatlas.PrivateEndpointConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePrivateEndpoint", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePrivateEndpoint indicates an expected call of CreatePrivateEndpoint
func (mr *MockPrivateEndpointCreatorMockRecorder) CreatePrivateEndpoint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointCreator)(nil).CreatePrivateEndpoint), arg0, arg1)
}

// MockPrivateEndpointDeleter is a mock of PrivateEndpointDeleter interface
type MockPrivateEndpointDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDeleterMockRecorder
}

// MockPrivateEndpointDeleterMockRecorder is the mock recorder for MockPrivateEndpointDeleter
type MockPrivateEndpointDeleterMockRecorder struct {
	mock *MockPrivateEndpointDeleter
}

// NewMockPrivateEndpointDeleter creates a new mock instance
func NewMockPrivateEndpointDeleter(ctrl *gomock.Controller) *MockPrivateEndpointDeleter {
	mock := &MockPrivateEndpointDeleter{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDeleter) EXPECT() *MockPrivateEndpointDeleterMockRecorder {
	return m.recorder
}

// DeletePrivateEndpoint mocks base method
func (m *MockPrivateEndpointDeleter) DeletePrivateEndpoint(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePrivateEndpoint", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePrivateEndpoint indicates an expected call of DeletePrivateEndpoint
func (mr *MockPrivateEndpointDeleterMockRecorder) DeletePrivateEndpoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointDeleter)(nil).DeletePrivateEndpoint), arg0, arg1, arg2)
}

// MockInterfaceEndpointDescriber is a mock of InterfaceEndpointDescriber interface
type MockInterfaceEndpointDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDescriberMockRecorder
}

// MockInterfaceEndpointDescriberMockRecorder is the mock recorder for MockInterfaceEndpointDescriber
type MockInterfaceEndpointDescriberMockRecorder struct {
	mock *MockInterfaceEndpointDescriber
}

// NewMockInterfaceEndpointDescriber creates a new mock instance
func NewMockInterfaceEndpointDescriber(ctrl *gomock.Controller) *MockInterfaceEndpointDescriber {
	mock := &MockInterfaceEndpointDescriber{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDescriber) EXPECT() *MockInterfaceEndpointDescriberMockRecorder {
	return m.recorder
}

// InterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointDescriber) InterfaceEndpoint(arg0, arg1, arg2, arg3 string) (*mongodbatlas.InterfaceEndpointConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InterfaceEndpoint", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InterfaceEndpoint indicates an expected call of InterfaceEndpoint
func (mr *MockInterfaceEndpointDescriberMockRecorder) InterfaceEndpoint(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointDescriber)(nil).InterfaceEndpoint), arg0, arg1, arg2, arg3)
}

// MockInterfaceEndpointCreator is a mock of InterfaceEndpointCreator interface
type MockInterfaceEndpointCreator struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointCreatorMockRecorder
}

// MockInterfaceEndpointCreatorMockRecorder is the mock recorder for MockInterfaceEndpointCreator
type MockInterfaceEndpointCreatorMockRecorder struct {
	mock *MockInterfaceEndpointCreator
}

// NewMockInterfaceEndpointCreator creates a new mock instance
func NewMockInterfaceEndpointCreator(ctrl *gomock.Controller) *MockInterfaceEndpointCreator {
	mock := &MockInterfaceEndpointCreator{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointCreator) EXPECT() *MockInterfaceEndpointCreatorMockRecorder {
	return m.recorder
}

// CreateInterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointCreator) CreateInterfaceEndpoint(arg0, arg1, arg2 string, arg3 *mongodbatlas.InterfaceEndpointConnection) (*mongodbatlas.InterfaceEndpointConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInterfaceEndpoint", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInterfaceEndpoint indicates an expected call of CreateInterfaceEndpoint
func (mr *MockInterfaceEndpointCreatorMockRecorder) CreateInterfaceEndpoint(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointCreator)(nil).CreateInterfaceEndpoint), arg0, arg1, arg2, arg3)
}

// MockInterfaceEndpointDeleter is a mock of InterfaceEndpointDeleter interface
type MockInterfaceEndpointDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDeleterMockRecorder
}

// MockInterfaceEndpointDeleterMockRecorder is the mock recorder for MockInterfaceEndpointDeleter
type MockInterfaceEndpointDeleterMockRecorder struct {
	mock *MockInterfaceEndpointDeleter
}

// NewMockInterfaceEndpointDeleter creates a new mock instance
func NewMockInterfaceEndpointDeleter(ctrl *gomock.Controller) *MockInterfaceEndpointDeleter {
	mock := &MockInterfaceEndpointDeleter{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDeleter) EXPECT() *MockInterfaceEndpointDeleterMockRecorder {
	return m.recorder
}

// DeleteInterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointDeleter) DeleteInterfaceEndpoint(arg0, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInterfaceEndpoint", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInterfaceEndpoint indicates an expected call of DeleteInterfaceEndpoint
func (mr *MockInterfaceEndpointDeleterMockRecorder) DeleteInterfaceEndpoint(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointDeleter)(nil).DeleteInterfaceEndpoint), arg0, arg1, arg2, arg3)
}

// MockPrivateEndpointListerDeprecated is a mock of PrivateEndpointListerDeprecated interface
type MockPrivateEndpointListerDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointListerDeprecatedMockRecorder
}

// MockPrivateEndpointListerDeprecatedMockRecorder is the mock recorder for MockPrivateEndpointListerDeprecated
type MockPrivateEndpointListerDeprecatedMockRecorder struct {
	mock *MockPrivateEndpointListerDeprecated
}

// NewMockPrivateEndpointListerDeprecated creates a new mock instance
func NewMockPrivateEndpointListerDeprecated(ctrl *gomock.Controller) *MockPrivateEndpointListerDeprecated {
	mock := &MockPrivateEndpointListerDeprecated{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointListerDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointListerDeprecated) EXPECT() *MockPrivateEndpointListerDeprecatedMockRecorder {
	return m.recorder
}

// PrivateEndpointsDeprecated mocks base method
func (m *MockPrivateEndpointListerDeprecated) PrivateEndpointsDeprecated(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpointsDeprecated", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpointsDeprecated indicates an expected call of PrivateEndpointsDeprecated
func (mr *MockPrivateEndpointListerDeprecatedMockRecorder) PrivateEndpointsDeprecated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpointsDeprecated", reflect.TypeOf((*MockPrivateEndpointListerDeprecated)(nil).PrivateEndpointsDeprecated), arg0, arg1)
}

// MockPrivateEndpointDescriberDeprecated is a mock of PrivateEndpointDescriberDeprecated interface
type MockPrivateEndpointDescriberDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDescriberDeprecatedMockRecorder
}

// MockPrivateEndpointDescriberDeprecatedMockRecorder is the mock recorder for MockPrivateEndpointDescriberDeprecated
type MockPrivateEndpointDescriberDeprecatedMockRecorder struct {
	mock *MockPrivateEndpointDescriberDeprecated
}

// NewMockPrivateEndpointDescriberDeprecated creates a new mock instance
func NewMockPrivateEndpointDescriberDeprecated(ctrl *gomock.Controller) *MockPrivateEndpointDescriberDeprecated {
	mock := &MockPrivateEndpointDescriberDeprecated{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDescriberDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDescriberDeprecated) EXPECT() *MockPrivateEndpointDescriberDeprecatedMockRecorder {
	return m.recorder
}

// PrivateEndpointDeprecated mocks base method
func (m *MockPrivateEndpointDescriberDeprecated) PrivateEndpointDeprecated(arg0, arg1 string) (*mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpointDeprecated", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpointDeprecated indicates an expected call of PrivateEndpointDeprecated
func (mr *MockPrivateEndpointDescriberDeprecatedMockRecorder) PrivateEndpointDeprecated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpointDeprecated", reflect.TypeOf((*MockPrivateEndpointDescriberDeprecated)(nil).PrivateEndpointDeprecated), arg0, arg1)
}

// MockPrivateEndpointCreatorDeprecated is a mock of PrivateEndpointCreatorDeprecated interface
type MockPrivateEndpointCreatorDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointCreatorDeprecatedMockRecorder
}

// MockPrivateEndpointCreatorDeprecatedMockRecorder is the mock recorder for MockPrivateEndpointCreatorDeprecated
type MockPrivateEndpointCreatorDeprecatedMockRecorder struct {
	mock *MockPrivateEndpointCreatorDeprecated
}

// NewMockPrivateEndpointCreatorDeprecated creates a new mock instance
func NewMockPrivateEndpointCreatorDeprecated(ctrl *gomock.Controller) *MockPrivateEndpointCreatorDeprecated {
	mock := &MockPrivateEndpointCreatorDeprecated{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointCreatorDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointCreatorDeprecated) EXPECT() *MockPrivateEndpointCreatorDeprecatedMockRecorder {
	return m.recorder
}

// CreatePrivateEndpointDeprecated mocks base method
func (m *MockPrivateEndpointCreatorDeprecated) CreatePrivateEndpointDeprecated(arg0 string, arg1 *mongodbatlas.PrivateEndpointConnectionDeprecated) (*mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePrivateEndpointDeprecated", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePrivateEndpointDeprecated indicates an expected call of CreatePrivateEndpointDeprecated
func (mr *MockPrivateEndpointCreatorDeprecatedMockRecorder) CreatePrivateEndpointDeprecated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePrivateEndpointDeprecated", reflect.TypeOf((*MockPrivateEndpointCreatorDeprecated)(nil).CreatePrivateEndpointDeprecated), arg0, arg1)
}

// MockPrivateEndpointDeleterDeprecated is a mock of PrivateEndpointDeleterDeprecated interface
type MockPrivateEndpointDeleterDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDeleterDeprecatedMockRecorder
}

// MockPrivateEndpointDeleterDeprecatedMockRecorder is the mock recorder for MockPrivateEndpointDeleterDeprecated
type MockPrivateEndpointDeleterDeprecatedMockRecorder struct {
	mock *MockPrivateEndpointDeleterDeprecated
}

// NewMockPrivateEndpointDeleterDeprecated creates a new mock instance
func NewMockPrivateEndpointDeleterDeprecated(ctrl *gomock.Controller) *MockPrivateEndpointDeleterDeprecated {
	mock := &MockPrivateEndpointDeleterDeprecated{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDeleterDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDeleterDeprecated) EXPECT() *MockPrivateEndpointDeleterDeprecatedMockRecorder {
	return m.recorder
}

// DeletePrivateEndpointDeprecated mocks base method
func (m *MockPrivateEndpointDeleterDeprecated) DeletePrivateEndpointDeprecated(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePrivateEndpointDeprecated", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePrivateEndpointDeprecated indicates an expected call of DeletePrivateEndpointDeprecated
func (mr *MockPrivateEndpointDeleterDeprecatedMockRecorder) DeletePrivateEndpointDeprecated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePrivateEndpointDeprecated", reflect.TypeOf((*MockPrivateEndpointDeleterDeprecated)(nil).DeletePrivateEndpointDeprecated), arg0, arg1)
}

// MockInterfaceEndpointCreatorDeprecated is a mock of InterfaceEndpointCreatorDeprecated interface
type MockInterfaceEndpointCreatorDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointCreatorDeprecatedMockRecorder
}

// MockInterfaceEndpointCreatorDeprecatedMockRecorder is the mock recorder for MockInterfaceEndpointCreatorDeprecated
type MockInterfaceEndpointCreatorDeprecatedMockRecorder struct {
	mock *MockInterfaceEndpointCreatorDeprecated
}

// NewMockInterfaceEndpointCreatorDeprecated creates a new mock instance
func NewMockInterfaceEndpointCreatorDeprecated(ctrl *gomock.Controller) *MockInterfaceEndpointCreatorDeprecated {
	mock := &MockInterfaceEndpointCreatorDeprecated{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointCreatorDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointCreatorDeprecated) EXPECT() *MockInterfaceEndpointCreatorDeprecatedMockRecorder {
	return m.recorder
}

// CreateInterfaceEndpointDeprecated mocks base method
func (m *MockInterfaceEndpointCreatorDeprecated) CreateInterfaceEndpointDeprecated(arg0, arg1, arg2 string) (*mongodbatlas.InterfaceEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInterfaceEndpointDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInterfaceEndpointDeprecated indicates an expected call of CreateInterfaceEndpointDeprecated
func (mr *MockInterfaceEndpointCreatorDeprecatedMockRecorder) CreateInterfaceEndpointDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInterfaceEndpointDeprecated", reflect.TypeOf((*MockInterfaceEndpointCreatorDeprecated)(nil).CreateInterfaceEndpointDeprecated), arg0, arg1, arg2)
}

// MockInterfaceEndpointDescriberDeprecated is a mock of InterfaceEndpointDescriberDeprecated interface
type MockInterfaceEndpointDescriberDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDescriberDeprecatedMockRecorder
}

// MockInterfaceEndpointDescriberDeprecatedMockRecorder is the mock recorder for MockInterfaceEndpointDescriberDeprecated
type MockInterfaceEndpointDescriberDeprecatedMockRecorder struct {
	mock *MockInterfaceEndpointDescriberDeprecated
}

// NewMockInterfaceEndpointDescriberDeprecated creates a new mock instance
func NewMockInterfaceEndpointDescriberDeprecated(ctrl *gomock.Controller) *MockInterfaceEndpointDescriberDeprecated {
	mock := &MockInterfaceEndpointDescriberDeprecated{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDescriberDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDescriberDeprecated) EXPECT() *MockInterfaceEndpointDescriberDeprecatedMockRecorder {
	return m.recorder
}

// InterfaceEndpointDeprecated mocks base method
func (m *MockInterfaceEndpointDescriberDeprecated) InterfaceEndpointDeprecated(arg0, arg1, arg2 string) (*mongodbatlas.InterfaceEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InterfaceEndpointDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InterfaceEndpointDeprecated indicates an expected call of InterfaceEndpointDeprecated
func (mr *MockInterfaceEndpointDescriberDeprecatedMockRecorder) InterfaceEndpointDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InterfaceEndpointDeprecated", reflect.TypeOf((*MockInterfaceEndpointDescriberDeprecated)(nil).InterfaceEndpointDeprecated), arg0, arg1, arg2)
}

// MockInterfaceEndpointDeleterDeprecated is a mock of InterfaceEndpointDeleterDeprecated interface
type MockInterfaceEndpointDeleterDeprecated struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDeleterDeprecatedMockRecorder
}

// MockInterfaceEndpointDeleterDeprecatedMockRecorder is the mock recorder for MockInterfaceEndpointDeleterDeprecated
type MockInterfaceEndpointDeleterDeprecatedMockRecorder struct {
	mock *MockInterfaceEndpointDeleterDeprecated
}

// NewMockInterfaceEndpointDeleterDeprecated creates a new mock instance
func NewMockInterfaceEndpointDeleterDeprecated(ctrl *gomock.Controller) *MockInterfaceEndpointDeleterDeprecated {
	mock := &MockInterfaceEndpointDeleterDeprecated{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDeleterDeprecatedMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDeleterDeprecated) EXPECT() *MockInterfaceEndpointDeleterDeprecatedMockRecorder {
	return m.recorder
}

// DeleteInterfaceEndpointDeprecated mocks base method
func (m *MockInterfaceEndpointDeleterDeprecated) DeleteInterfaceEndpointDeprecated(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInterfaceEndpointDeprecated", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInterfaceEndpointDeprecated indicates an expected call of DeleteInterfaceEndpointDeprecated
func (mr *MockInterfaceEndpointDeleterDeprecatedMockRecorder) DeleteInterfaceEndpointDeprecated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInterfaceEndpointDeprecated", reflect.TypeOf((*MockInterfaceEndpointDeleterDeprecated)(nil).DeleteInterfaceEndpointDeprecated), arg0, arg1, arg2)
}

// MockRegionalizedPrivateEndpointSettingUpdater is a mock of RegionalizedPrivateEndpointSettingUpdater interface
type MockRegionalizedPrivateEndpointSettingUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder
}

// MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder is the mock recorder for MockRegionalizedPrivateEndpointSettingUpdater
type MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder struct {
	mock *MockRegionalizedPrivateEndpointSettingUpdater
}

// NewMockRegionalizedPrivateEndpointSettingUpdater creates a new mock instance
func NewMockRegionalizedPrivateEndpointSettingUpdater(ctrl *gomock.Controller) *MockRegionalizedPrivateEndpointSettingUpdater {
	mock := &MockRegionalizedPrivateEndpointSettingUpdater{ctrl: ctrl}
	mock.recorder = &MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRegionalizedPrivateEndpointSettingUpdater) EXPECT() *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder {
	return m.recorder
}

// UpdateRegionalizedPrivateEndpointSetting mocks base method
func (m *MockRegionalizedPrivateEndpointSettingUpdater) UpdateRegionalizedPrivateEndpointSetting(arg0 string, arg1 bool) (*mongodbatlas.RegionalizedPrivateEndpointSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRegionalizedPrivateEndpointSetting", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.RegionalizedPrivateEndpointSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRegionalizedPrivateEndpointSetting indicates an expected call of UpdateRegionalizedPrivateEndpointSetting
func (mr *MockRegionalizedPrivateEndpointSettingUpdaterMockRecorder) UpdateRegionalizedPrivateEndpointSetting(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRegionalizedPrivateEndpointSetting", reflect.TypeOf((*MockRegionalizedPrivateEndpointSettingUpdater)(nil).UpdateRegionalizedPrivateEndpointSetting), arg0, arg1)
}

// MockRegionalizedPrivateEndpointSettingDescriber is a mock of RegionalizedPrivateEndpointSettingDescriber interface
type MockRegionalizedPrivateEndpointSettingDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockRegionalizedPrivateEndpointSettingDescriberMockRecorder
}

// MockRegionalizedPrivateEndpointSettingDescriberMockRecorder is the mock recorder for MockRegionalizedPrivateEndpointSettingDescriber
type MockRegionalizedPrivateEndpointSettingDescriberMockRecorder struct {
	mock *MockRegionalizedPrivateEndpointSettingDescriber
}

// NewMockRegionalizedPrivateEndpointSettingDescriber creates a new mock instance
func NewMockRegionalizedPrivateEndpointSettingDescriber(ctrl *gomock.Controller) *MockRegionalizedPrivateEndpointSettingDescriber {
	mock := &MockRegionalizedPrivateEndpointSettingDescriber{ctrl: ctrl}
	mock.recorder = &MockRegionalizedPrivateEndpointSettingDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRegionalizedPrivateEndpointSettingDescriber) EXPECT() *MockRegionalizedPrivateEndpointSettingDescriberMockRecorder {
	return m.recorder
}

// RegionalizedPrivateEndpointSetting mocks base method
func (m *MockRegionalizedPrivateEndpointSettingDescriber) RegionalizedPrivateEndpointSetting(arg0 string) (*mongodbatlas.RegionalizedPrivateEndpointSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegionalizedPrivateEndpointSetting", arg0)
	ret0, _ := ret[0].(*mongodbatlas.RegionalizedPrivateEndpointSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegionalizedPrivateEndpointSetting indicates an expected call of RegionalizedPrivateEndpointSetting
func (mr *MockRegionalizedPrivateEndpointSettingDescriberMockRecorder) RegionalizedPrivateEndpointSetting(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegionalizedPrivateEndpointSetting", reflect.TypeOf((*MockRegionalizedPrivateEndpointSettingDescriber)(nil).RegionalizedPrivateEndpointSetting), arg0)
}
