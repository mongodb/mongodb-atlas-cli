// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: PrivateEndpointLister,PrivateEndpointDescriber,PrivateEndpointCreator,PrivateEndpointDeleter,InterfaceEndpointDescriber,InterfaceEndpointCreator,InterfaceEndpointDeleter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockPrivateEndpointLister is a mock of PrivateEndpointLister interface
type MockPrivateEndpointLister struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointListerMockRecorder
}

// MockPrivateEndpointListerMockRecorder is the mock recorder for MockPrivateEndpointLister
type MockPrivateEndpointListerMockRecorder struct {
	mock *MockPrivateEndpointLister
}

// NewMockPrivateEndpointLister creates a new mock instance
func NewMockPrivateEndpointLister(ctrl *gomock.Controller) *MockPrivateEndpointLister {
	mock := &MockPrivateEndpointLister{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointLister) EXPECT() *MockPrivateEndpointListerMockRecorder {
	return m.recorder
}

// PrivateEndpoints mocks base method
func (m *MockPrivateEndpointLister) PrivateEndpoints(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpoints", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpoints indicates an expected call of PrivateEndpoints
func (mr *MockPrivateEndpointListerMockRecorder) PrivateEndpoints(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpoints", reflect.TypeOf((*MockPrivateEndpointLister)(nil).PrivateEndpoints), arg0, arg1)
}

// MockPrivateEndpointDescriber is a mock of PrivateEndpointDescriber interface
type MockPrivateEndpointDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDescriberMockRecorder
}

// MockPrivateEndpointDescriberMockRecorder is the mock recorder for MockPrivateEndpointDescriber
type MockPrivateEndpointDescriberMockRecorder struct {
	mock *MockPrivateEndpointDescriber
}

// NewMockPrivateEndpointDescriber creates a new mock instance
func NewMockPrivateEndpointDescriber(ctrl *gomock.Controller) *MockPrivateEndpointDescriber {
	mock := &MockPrivateEndpointDescriber{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDescriber) EXPECT() *MockPrivateEndpointDescriberMockRecorder {
	return m.recorder
}

// PrivateEndpoint mocks base method
func (m *MockPrivateEndpointDescriber) PrivateEndpoint(arg0, arg1 string) (*mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateEndpoint", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateEndpoint indicates an expected call of PrivateEndpoint
func (mr *MockPrivateEndpointDescriberMockRecorder) PrivateEndpoint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointDescriber)(nil).PrivateEndpoint), arg0, arg1)
}

// MockPrivateEndpointCreator is a mock of PrivateEndpointCreator interface
type MockPrivateEndpointCreator struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointCreatorMockRecorder
}

// MockPrivateEndpointCreatorMockRecorder is the mock recorder for MockPrivateEndpointCreator
type MockPrivateEndpointCreatorMockRecorder struct {
	mock *MockPrivateEndpointCreator
}

// NewMockPrivateEndpointCreator creates a new mock instance
func NewMockPrivateEndpointCreator(ctrl *gomock.Controller) *MockPrivateEndpointCreator {
	mock := &MockPrivateEndpointCreator{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointCreator) EXPECT() *MockPrivateEndpointCreatorMockRecorder {
	return m.recorder
}

// CreatePrivateEndpoint mocks base method
func (m *MockPrivateEndpointCreator) CreatePrivateEndpoint(arg0 string, arg1 *mongodbatlas.PrivateEndpointConnectionDeprecated) (*mongodbatlas.PrivateEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePrivateEndpoint", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.PrivateEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePrivateEndpoint indicates an expected call of CreatePrivateEndpoint
func (mr *MockPrivateEndpointCreatorMockRecorder) CreatePrivateEndpoint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointCreator)(nil).CreatePrivateEndpoint), arg0, arg1)
}

// MockPrivateEndpointDeleter is a mock of PrivateEndpointDeleter interface
type MockPrivateEndpointDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateEndpointDeleterMockRecorder
}

// MockPrivateEndpointDeleterMockRecorder is the mock recorder for MockPrivateEndpointDeleter
type MockPrivateEndpointDeleterMockRecorder struct {
	mock *MockPrivateEndpointDeleter
}

// NewMockPrivateEndpointDeleter creates a new mock instance
func NewMockPrivateEndpointDeleter(ctrl *gomock.Controller) *MockPrivateEndpointDeleter {
	mock := &MockPrivateEndpointDeleter{ctrl: ctrl}
	mock.recorder = &MockPrivateEndpointDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrivateEndpointDeleter) EXPECT() *MockPrivateEndpointDeleterMockRecorder {
	return m.recorder
}

// DeletePrivateEndpoint mocks base method
func (m *MockPrivateEndpointDeleter) DeletePrivateEndpoint(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePrivateEndpoint", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePrivateEndpoint indicates an expected call of DeletePrivateEndpoint
func (mr *MockPrivateEndpointDeleterMockRecorder) DeletePrivateEndpoint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePrivateEndpoint", reflect.TypeOf((*MockPrivateEndpointDeleter)(nil).DeletePrivateEndpoint), arg0, arg1)
}

// MockInterfaceEndpointDescriber is a mock of InterfaceEndpointDescriber interface
type MockInterfaceEndpointDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDescriberMockRecorder
}

// MockInterfaceEndpointDescriberMockRecorder is the mock recorder for MockInterfaceEndpointDescriber
type MockInterfaceEndpointDescriberMockRecorder struct {
	mock *MockInterfaceEndpointDescriber
}

// NewMockInterfaceEndpointDescriber creates a new mock instance
func NewMockInterfaceEndpointDescriber(ctrl *gomock.Controller) *MockInterfaceEndpointDescriber {
	mock := &MockInterfaceEndpointDescriber{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDescriber) EXPECT() *MockInterfaceEndpointDescriberMockRecorder {
	return m.recorder
}

// InterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointDescriber) InterfaceEndpoint(arg0, arg1, arg2 string) (*mongodbatlas.InterfaceEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InterfaceEndpoint", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InterfaceEndpoint indicates an expected call of InterfaceEndpoint
func (mr *MockInterfaceEndpointDescriberMockRecorder) InterfaceEndpoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointDescriber)(nil).InterfaceEndpoint), arg0, arg1, arg2)
}

// MockInterfaceEndpointCreator is a mock of InterfaceEndpointCreator interface
type MockInterfaceEndpointCreator struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointCreatorMockRecorder
}

// MockInterfaceEndpointCreatorMockRecorder is the mock recorder for MockInterfaceEndpointCreator
type MockInterfaceEndpointCreatorMockRecorder struct {
	mock *MockInterfaceEndpointCreator
}

// NewMockInterfaceEndpointCreator creates a new mock instance
func NewMockInterfaceEndpointCreator(ctrl *gomock.Controller) *MockInterfaceEndpointCreator {
	mock := &MockInterfaceEndpointCreator{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointCreator) EXPECT() *MockInterfaceEndpointCreatorMockRecorder {
	return m.recorder
}

// CreateInterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointCreator) CreateInterfaceEndpoint(arg0, arg1, arg2 string) (*mongodbatlas.InterfaceEndpointConnectionDeprecated, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInterfaceEndpoint", arg0, arg1, arg2)
	ret0, _ := ret[0].(*mongodbatlas.InterfaceEndpointConnectionDeprecated)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInterfaceEndpoint indicates an expected call of CreateInterfaceEndpoint
func (mr *MockInterfaceEndpointCreatorMockRecorder) CreateInterfaceEndpoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointCreator)(nil).CreateInterfaceEndpoint), arg0, arg1, arg2)
}

// MockInterfaceEndpointDeleter is a mock of InterfaceEndpointDeleter interface
type MockInterfaceEndpointDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceEndpointDeleterMockRecorder
}

// MockInterfaceEndpointDeleterMockRecorder is the mock recorder for MockInterfaceEndpointDeleter
type MockInterfaceEndpointDeleterMockRecorder struct {
	mock *MockInterfaceEndpointDeleter
}

// NewMockInterfaceEndpointDeleter creates a new mock instance
func NewMockInterfaceEndpointDeleter(ctrl *gomock.Controller) *MockInterfaceEndpointDeleter {
	mock := &MockInterfaceEndpointDeleter{ctrl: ctrl}
	mock.recorder = &MockInterfaceEndpointDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceEndpointDeleter) EXPECT() *MockInterfaceEndpointDeleterMockRecorder {
	return m.recorder
}

// DeleteInterfaceEndpoint mocks base method
func (m *MockInterfaceEndpointDeleter) DeleteInterfaceEndpoint(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInterfaceEndpoint", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInterfaceEndpoint indicates an expected call of DeleteInterfaceEndpoint
func (mr *MockInterfaceEndpointDeleterMockRecorder) DeleteInterfaceEndpoint(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInterfaceEndpoint", reflect.TypeOf((*MockInterfaceEndpointDeleter)(nil).DeleteInterfaceEndpoint), arg0, arg1, arg2)
}
