// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/profile.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProfileSetter is a mock of ProfileSetter interface
type MockProfileSetter struct {
	ctrl     *gomock.Controller
	recorder *MockProfileSetterMockRecorder
}

// MockProfileSetterMockRecorder is the mock recorder for MockProfileSetter
type MockProfileSetterMockRecorder struct {
	mock *MockProfileSetter
}

// NewMockProfileSetter creates a new mock instance
func NewMockProfileSetter(ctrl *gomock.Controller) *MockProfileSetter {
	mock := &MockProfileSetter{ctrl: ctrl}
	mock.recorder = &MockProfileSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProfileSetter) EXPECT() *MockProfileSetterMockRecorder {
	return m.recorder
}

// Set mocks base method
func (m *MockProfileSetter) Set(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set
func (mr *MockProfileSetterMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockProfileSetter)(nil).Set), arg0, arg1)
}

// MockProfileSaver is a mock of ProfileSaver interface
type MockProfileSaver struct {
	ctrl     *gomock.Controller
	recorder *MockProfileSaverMockRecorder
}

// MockProfileSaverMockRecorder is the mock recorder for MockProfileSaver
type MockProfileSaverMockRecorder struct {
	mock *MockProfileSaver
}

// NewMockProfileSaver creates a new mock instance
func NewMockProfileSaver(ctrl *gomock.Controller) *MockProfileSaver {
	mock := &MockProfileSaver{ctrl: ctrl}
	mock.recorder = &MockProfileSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProfileSaver) EXPECT() *MockProfileSaverMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockProfileSaver) Save() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockProfileSaverMockRecorder) Save() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockProfileSaver)(nil).Save))
}

// MockProfileSetSaver is a mock of ProfileSetSaver interface
type MockProfileSetSaver struct {
	ctrl     *gomock.Controller
	recorder *MockProfileSetSaverMockRecorder
}

// MockProfileSetSaverMockRecorder is the mock recorder for MockProfileSetSaver
type MockProfileSetSaverMockRecorder struct {
	mock *MockProfileSetSaver
}

// NewMockProfileSetSaver creates a new mock instance
func NewMockProfileSetSaver(ctrl *gomock.Controller) *MockProfileSetSaver {
	mock := &MockProfileSetSaver{ctrl: ctrl}
	mock.recorder = &MockProfileSetSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProfileSetSaver) EXPECT() *MockProfileSetSaverMockRecorder {
	return m.recorder
}

// Set mocks base method
func (m *MockProfileSetSaver) Set(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set
func (mr *MockProfileSetSaverMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockProfileSetSaver)(nil).Set), arg0, arg1)
}

// Save mocks base method
func (m *MockProfileSetSaver) Save() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockProfileSetSaverMockRecorder) Save() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockProfileSetSaver)(nil).Save))
}
