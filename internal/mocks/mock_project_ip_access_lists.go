// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: ProjectIPWhitelistDescriber,ProjectIPWhitelistLister,ProjectIPWhitelistCreator,ProjectIPWhitelistDeleter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockProjectIPWhitelistDescriber is a mock of ProjectIPWhitelistDescriber interface
type MockProjectIPWhitelistDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockProjectIPWhitelistDescriberMockRecorder
}

// MockProjectIPWhitelistDescriberMockRecorder is the mock recorder for MockProjectIPWhitelistDescriber
type MockProjectIPWhitelistDescriberMockRecorder struct {
	mock *MockProjectIPWhitelistDescriber
}

// NewMockProjectIPWhitelistDescriber creates a new mock instance
func NewMockProjectIPWhitelistDescriber(ctrl *gomock.Controller) *MockProjectIPWhitelistDescriber {
	mock := &MockProjectIPWhitelistDescriber{ctrl: ctrl}
	mock.recorder = &MockProjectIPWhitelistDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectIPWhitelistDescriber) EXPECT() *MockProjectIPWhitelistDescriberMockRecorder {
	return m.recorder
}

// IPWhitelist mocks base method
func (m *MockProjectIPWhitelistDescriber) IPWhitelist(arg0, arg1 string) (*mongodbatlas.ProjectIPWhitelist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IPWhitelist", arg0, arg1)
	ret0, _ := ret[0].(*mongodbatlas.ProjectIPWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IPWhitelist indicates an expected call of IPWhitelist
func (mr *MockProjectIPWhitelistDescriberMockRecorder) IPWhitelist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IPWhitelist", reflect.TypeOf((*MockProjectIPWhitelistDescriber)(nil).IPWhitelist), arg0, arg1)
}

// MockProjectIPWhitelistLister is a mock of ProjectIPWhitelistLister interface
type MockProjectIPWhitelistLister struct {
	ctrl     *gomock.Controller
	recorder *MockProjectIPWhitelistListerMockRecorder
}

// MockProjectIPWhitelistListerMockRecorder is the mock recorder for MockProjectIPWhitelistLister
type MockProjectIPWhitelistListerMockRecorder struct {
	mock *MockProjectIPWhitelistLister
}

// NewMockProjectIPWhitelistLister creates a new mock instance
func NewMockProjectIPWhitelistLister(ctrl *gomock.Controller) *MockProjectIPWhitelistLister {
	mock := &MockProjectIPWhitelistLister{ctrl: ctrl}
	mock.recorder = &MockProjectIPWhitelistListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectIPWhitelistLister) EXPECT() *MockProjectIPWhitelistListerMockRecorder {
	return m.recorder
}

// ProjectIPWhitelists mocks base method
func (m *MockProjectIPWhitelistLister) ProjectIPWhitelists(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.ProjectIPWhitelist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProjectIPWhitelists", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.ProjectIPWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProjectIPWhitelists indicates an expected call of ProjectIPWhitelists
func (mr *MockProjectIPWhitelistListerMockRecorder) ProjectIPWhitelists(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProjectIPWhitelists", reflect.TypeOf((*MockProjectIPWhitelistLister)(nil).ProjectIPWhitelists), arg0, arg1)
}

// MockProjectIPWhitelistCreator is a mock of ProjectIPWhitelistCreator interface
type MockProjectIPWhitelistCreator struct {
	ctrl     *gomock.Controller
	recorder *MockProjectIPWhitelistCreatorMockRecorder
}

// MockProjectIPWhitelistCreatorMockRecorder is the mock recorder for MockProjectIPWhitelistCreator
type MockProjectIPWhitelistCreatorMockRecorder struct {
	mock *MockProjectIPWhitelistCreator
}

// NewMockProjectIPWhitelistCreator creates a new mock instance
func NewMockProjectIPWhitelistCreator(ctrl *gomock.Controller) *MockProjectIPWhitelistCreator {
	mock := &MockProjectIPWhitelistCreator{ctrl: ctrl}
	mock.recorder = &MockProjectIPWhitelistCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectIPWhitelistCreator) EXPECT() *MockProjectIPWhitelistCreatorMockRecorder {
	return m.recorder
}

// CreateProjectIPWhitelist mocks base method
func (m *MockProjectIPWhitelistCreator) CreateProjectIPWhitelist(arg0 *mongodbatlas.ProjectIPWhitelist) ([]mongodbatlas.ProjectIPWhitelist, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProjectIPWhitelist", arg0)
	ret0, _ := ret[0].([]mongodbatlas.ProjectIPWhitelist)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProjectIPWhitelist indicates an expected call of CreateProjectIPWhitelist
func (mr *MockProjectIPWhitelistCreatorMockRecorder) CreateProjectIPWhitelist(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProjectIPWhitelist", reflect.TypeOf((*MockProjectIPWhitelistCreator)(nil).CreateProjectIPWhitelist), arg0)
}

// MockProjectIPWhitelistDeleter is a mock of ProjectIPWhitelistDeleter interface
type MockProjectIPWhitelistDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockProjectIPWhitelistDeleterMockRecorder
}

// MockProjectIPWhitelistDeleterMockRecorder is the mock recorder for MockProjectIPWhitelistDeleter
type MockProjectIPWhitelistDeleterMockRecorder struct {
	mock *MockProjectIPWhitelistDeleter
}

// NewMockProjectIPWhitelistDeleter creates a new mock instance
func NewMockProjectIPWhitelistDeleter(ctrl *gomock.Controller) *MockProjectIPWhitelistDeleter {
	mock := &MockProjectIPWhitelistDeleter{ctrl: ctrl}
	mock.recorder = &MockProjectIPWhitelistDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectIPWhitelistDeleter) EXPECT() *MockProjectIPWhitelistDeleterMockRecorder {
	return m.recorder
}

// DeleteProjectIPWhitelist mocks base method
func (m *MockProjectIPWhitelistDeleter) DeleteProjectIPWhitelist(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProjectIPWhitelist", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProjectIPWhitelist indicates an expected call of DeleteProjectIPWhitelist
func (mr *MockProjectIPWhitelistDeleterMockRecorder) DeleteProjectIPWhitelist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProjectIPWhitelist", reflect.TypeOf((*MockProjectIPWhitelistDeleter)(nil).DeleteProjectIPWhitelist), arg0, arg1)
}
