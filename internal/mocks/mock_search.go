// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: SearchIndexLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockSearchIndexLister is a mock of SearchIndexLister interface
type MockSearchIndexLister struct {
	ctrl     *gomock.Controller
	recorder *MockSearchIndexListerMockRecorder
}

// MockSearchIndexListerMockRecorder is the mock recorder for MockSearchIndexLister
type MockSearchIndexListerMockRecorder struct {
	mock *MockSearchIndexLister
}

// NewMockSearchIndexLister creates a new mock instance
func NewMockSearchIndexLister(ctrl *gomock.Controller) *MockSearchIndexLister {
	mock := &MockSearchIndexLister{ctrl: ctrl}
	mock.recorder = &MockSearchIndexListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSearchIndexLister) EXPECT() *MockSearchIndexListerMockRecorder {
	return m.recorder
}

// SearchIndexes mocks base method
func (m *MockSearchIndexLister) SearchIndexes(arg0, arg1, arg2, arg3 string, arg4 *mongodbatlas.ListOptions) ([]*mongodbatlas.SearchIndex, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchIndexes", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]*mongodbatlas.SearchIndex)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchIndexes indicates an expected call of SearchIndexes
func (mr *MockSearchIndexListerMockRecorder) SearchIndexes(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchIndexes", reflect.TypeOf((*MockSearchIndexLister)(nil).SearchIndexes), arg0, arg1, arg2, arg3, arg4)
}
