// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: TeamLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	mongodbatlas "go.mongodb.org/atlas/mongodbatlas"
	reflect "reflect"
)

// MockTeamLister is a mock of TeamLister interface
type MockTeamLister struct {
	ctrl     *gomock.Controller
	recorder *MockTeamListerMockRecorder
}

// MockTeamListerMockRecorder is the mock recorder for MockTeamLister
type MockTeamListerMockRecorder struct {
	mock *MockTeamLister
}

// NewMockTeamLister creates a new mock instance
func NewMockTeamLister(ctrl *gomock.Controller) *MockTeamLister {
	mock := &MockTeamLister{ctrl: ctrl}
	mock.recorder = &MockTeamListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTeamLister) EXPECT() *MockTeamListerMockRecorder {
	return m.recorder
}

// Teams mocks base method
func (m *MockTeamLister) Teams(arg0 string, arg1 *mongodbatlas.ListOptions) ([]mongodbatlas.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Teams", arg0, arg1)
	ret0, _ := ret[0].([]mongodbatlas.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Teams indicates an expected call of Teams
func (mr *MockTeamListerMockRecorder) Teams(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Teams", reflect.TypeOf((*MockTeamLister)(nil).Teams), arg0, arg1)
}
