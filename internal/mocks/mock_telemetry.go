// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongodb-atlas-cli/internal/store (interfaces: EventsSender)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEventsSender is a mock of EventsSender interface.
type MockEventsSender struct {
	ctrl     *gomock.Controller
	recorder *MockEventsSenderMockRecorder
}

// MockEventsSenderMockRecorder is the mock recorder for MockEventsSender.
type MockEventsSenderMockRecorder struct {
	mock *MockEventsSender
}

// NewMockEventsSender creates a new mock instance.
func NewMockEventsSender(ctrl *gomock.Controller) *MockEventsSender {
	mock := &MockEventsSender{ctrl: ctrl}
	mock.recorder = &MockEventsSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventsSender) EXPECT() *MockEventsSenderMockRecorder {
	return m.recorder
}

// SendEvents mocks base method.
func (m *MockEventsSender) SendEvents(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendEvents", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendEvents indicates an expected call of SendEvents.
func (mr *MockEventsSenderMockRecorder) SendEvents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEvents", reflect.TypeOf((*MockEventsSender)(nil).SendEvents), arg0)
}
