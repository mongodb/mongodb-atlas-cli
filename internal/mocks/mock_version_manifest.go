// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/mongocli/internal/store (interfaces: VersionManifestUpdater)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	opsmngr "go.mongodb.org/ops-manager/opsmngr"
	reflect "reflect"
)

// MockVersionManifestUpdater is a mock of VersionManifestUpdater interface
type MockVersionManifestUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockVersionManifestUpdaterMockRecorder
}

// MockVersionManifestUpdaterMockRecorder is the mock recorder for MockVersionManifestUpdater
type MockVersionManifestUpdaterMockRecorder struct {
	mock *MockVersionManifestUpdater
}

// NewMockVersionManifestUpdater creates a new mock instance
func NewMockVersionManifestUpdater(ctrl *gomock.Controller) *MockVersionManifestUpdater {
	mock := &MockVersionManifestUpdater{ctrl: ctrl}
	mock.recorder = &MockVersionManifestUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersionManifestUpdater) EXPECT() *MockVersionManifestUpdaterMockRecorder {
	return m.recorder
}

// UpdateVersionManifest mocks base method
func (m *MockVersionManifestUpdater) UpdateVersionManifest(arg0 string) (*opsmngr.VersionManifest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVersionManifest", arg0)
	ret0, _ := ret[0].(*opsmngr.VersionManifest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateVersionManifest indicates an expected call of UpdateVersionManifest
func (mr *MockVersionManifestUpdaterMockRecorder) UpdateVersionManifest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVersionManifest", reflect.TypeOf((*MockVersionManifestUpdater)(nil).UpdateVersionManifest), arg0)
}
