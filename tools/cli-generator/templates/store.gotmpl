// Copyright {{ Year }} MongoDB Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated at {{ Now }}. Note: Manual updates are allowed, but may be overwritten.

package atlas

import (
	"go.mongodb.org/atlas-sdk/admin"
)

//go:generate mockgen -destination=../../mocks/atlas/mock_{{ .BaseFileName }}.go -package=atlas github.com/mongodb/mongodb-atlas-cli/internal/store/atlas {{ .InterfaceNames }}

{{ if .Lister }}
type {{ .Lister.Name }} interface {
	{{ .Lister.Method }} (string) ( {{ .Lister.ReturnType }} , error)
}
{{ end }}

{{ if .Creator }}
type {{ .Creator.Name }} interface {
	{{ .Creator.Method }}(string, {{ .Creator.ArgType }} ) ( {{ .Creator.ReturnType }} , error)
}
{{ end }}

{{ if .Deleter }}
type {{ .Deleter.Name }} interface {
	{{ .Deleter.Method }}(string,string) error
}
{{ end }}

{{ if .Describer }}
type {{ .Describer.Name }} interface {
	{{ .Describer.Method }}(string,string) ({{ .Describer.ReturnType }}, error)
}
{{ end }}

{{ if .Updater }}
type {{ .Updater.Name }} interface {
	{{ .Updater.Method }}(string,string,{{ .Updater.ArgType }}) ({{ .Updater.ReturnType }}, error)
}
{{ end }}

{{ if .Lister }}
// {{ .Lister.Method }} encapsulates the logic to manage different cloud providers.
func (s *Store) {{ .Lister.Method }}(projectID string) ({{ .Lister.ReturnType }}, error) {
	result, _, err := s.clientv2.{{ .Lister.SDKMethod }}(s.ctx, projectID).Execute()
	return result, err
}
{{ end }}

{{ if .Describer }}
// {{ .Describer.Method }} encapsulates the logic to manage different cloud providers.
func (s *Store) {{ .Describer.Method }}(projectID, id string) ({{ .Describer.ReturnType }}, error) {
	result, _, err := s.clientv2.{{ .Describer.SDKMethod }}(s.ctx, projectID, id).Execute()
	return result, err
}
{{ end }}

{{ if .Creator }}
// {{ .Creator.Method }} encapsulates the logic to manage different cloud providers.
func (s *Store) {{ .Creator.Method }}(projectID string, opts {{ .Creator.ArgType }}) ({{ .Creator.ReturnType }}, error) {
	result, _, err := s.clientv2.{{ .Creator.SDKMethod }}(s.ctx, projectID, opts).Execute()
	return result, err
}
{{ end }}

{{ if .Updater }}
// {{ .Updater.Method }} encapsulates the logic to manage different cloud providers.
func (s *Store) {{ .Updater.Method }}(projectID, id string, opts {{ .Updater.ArgType }}) ({{ .Updater.ReturnType }}, error) {
	result, _, err := s.clientv2.{{ .Updater.SDKMethod }}(s.ctx, projectID, id, opts).Execute()
	return result, err
}
{{ end }}

{{ if .Deleter }}
// {{ .Deleter.Method }} encapsulates the logic to manage different cloud providers.
func (s *Store) {{ .Deleter.Method }}(projectID, id string) error {
	_, _, err := s.clientv2.{{ .Deleter.SDKMethod }}(s.ctx, projectID, id).Execute()
	return err
}
{{ end }}
